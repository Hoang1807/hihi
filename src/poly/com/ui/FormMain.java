package poly.com.ui;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.event.MouseEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JTabbedPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.plaf.TabbedPaneUI;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
import poly.com.DAO.ChuyendeDAO;
import poly.com.DAO.HocvienDAO;
import poly.com.DAO.KhoahocDAO;
import poly.com.DAO.NguoihocDAO;
import poly.com.DAO.NhanvienDAO;
import poly.com.DAO.ThongKeDAO;
import poly.com.HELPER.Auth;
import poly.com.HELPER.MsgBox;
import poly.com.HELPER.ResizeImage;
import poly.com.HELPER.XDate;
import poly.com.HELPER.XExcel;
import poly.com.HELPER.XQR;
import poly.com.MODEL.Chuyende;
import poly.com.MODEL.Hocvien;
import poly.com.MODEL.Khoahoc;
import poly.com.MODEL.Nguoihoc;
import poly.com.MODEL.Nhanvien;

/**
 *
 * @author huuho
 */
public class FormMain extends javax.swing.JFrame {

    /**
     * Creates new form FormMain
     */
    boolean mindMouseClick = true;
    int mindIndexClick = 0;
    java.awt.CardLayout movePnl = new java.awt.CardLayout();
    NhanvienDAO nhanvienDAO = new NhanvienDAO();
    HocvienDAO hocvienDAO = new HocvienDAO();
    ChuyendeDAO chuyendeDAO = new ChuyendeDAO();
    KhoahocDAO khoahocDAO = new KhoahocDAO();
    NguoihocDAO nguoihocDAO = new NguoihocDAO();
    ThongKeDAO thongKeDAO = new ThongKeDAO();
    JFileChooser fc = null;
    int indexRowChuyende = -1;
    int indexRowKhoahoc = -1;
    int indexRowNhanvien = -1;
    int indexRowNguoihoc = -1;

    public FormMain() {
        initComponents();
        new Thread() {
            @Override
            public void run() {
                init();
            }

        }.start();
        checkStaff();
        fullScreenSize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlChuyende = new javax.swing.JPanel();
        javax.swing.UIManager.put("TabbedPane.selected", new java.awt.Color(39, 130, 216));
        tabbedPaneChuyende = new javax.swing.JTabbedPane();
        pnlThongtinchuyende_pnlChuyende = new javax.swing.JPanel();
        lblMachuyende_pnlChuyende = new javax.swing.JLabel();
        txtMachuyende_pnlChuyende = new javax.swing.JTextField();
        lblTenchuyende_pnlChuyende = new javax.swing.JLabel();
        txtTenchuyende_pnlChuyende = new javax.swing.JTextField();
        lblThoiluong_pnlChuyende = new javax.swing.JLabel();
        txtThoiluong_pnlChuyende = new javax.swing.JTextField();
        lblHocphi_pnlChuyende = new javax.swing.JLabel();
        txtHocphi_pnlChuyende = new javax.swing.JTextField();
        lblMota_pnlChuyende = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMota_pnlChuyende = new javax.swing.JTextArea();
        lblImage_pnlChuyende = new javax.swing.JLabel();
        btnImage_pnlChuyende = new javax.swing.JButton();
        btnAdd_pnlChuyende = new javax.swing.JButton();
        btnDelete_pnlChuyende = new javax.swing.JButton();
        btnUpdate_pnlChuyende = new javax.swing.JButton();
        btnNew_pnlChuyende = new javax.swing.JButton();
        btnFirst_pnlChuyende = new javax.swing.JButton();
        btnPrevious_pnlChuyende = new javax.swing.JButton();
        btnNext_pnlChuyende = new javax.swing.JButton();
        btnLast_pnlChuyende = new javax.swing.JButton();
        pnlDanhsachchuyende_pnlChuyende = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListdanhsach_pnlChuyende = new javax.swing.JTable();
        pnlHocvien = new javax.swing.JPanel();
        tabbedPaneHocvien = new javax.swing.JTabbedPane();
        pnlhocvien_pnlHocvien = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListhocvien__pnlHocvien = new javax.swing.JTable();
        btnRemove_pnlHocvien = new javax.swing.JButton();
        btnScoreupdate_pnlHocvien = new javax.swing.JButton();
        pnlNguoihoc_pnlHocvien = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblListnguoihoc_pnlHocvien = new javax.swing.JTable();
        txtFind_pnlHocvien = new javax.swing.JTextField();
        btnAdd_pnlHocvien = new javax.swing.JButton();
        lblChuyende_pnlHocvien = new javax.swing.JLabel();
        lblKhoahoc_pnlHocvien = new javax.swing.JLabel();
        cboChuyende_pnlHocvien = new javax.swing.JComboBox<>();
        cboKhoahoc_pnlHocvien = new javax.swing.JComboBox<>();
        pnlNguoihoc = new javax.swing.JPanel();
        tabbedPaneNguoihoc = new javax.swing.JTabbedPane();
        pnlThongtin_pnlNguoihoc = new javax.swing.JPanel();
        lblManguoihoc_pnlNguoihoc = new javax.swing.JLabel();
        txtManguoihoc_pnlNguoihoc = new javax.swing.JTextField();
        lblHoten_pnlNguoihoc = new javax.swing.JLabel();
        txtHovaten_pnlNguoihoc = new javax.swing.JTextField();
        lblNgaysinh_pnlNguoihoc = new javax.swing.JLabel();
        lblGioitinh_pnlNguoihoc = new javax.swing.JLabel();
        cboGioitinh_pnlNguoihoc = new javax.swing.JComboBox<>();
        lblSodienthoai_pnlNguoihoc = new javax.swing.JLabel();
        txtSodienthoai_pnlNguoihoc = new javax.swing.JTextField();
        lblEmail_pnlNguoihoc = new javax.swing.JLabel();
        txtEmail_pnlNguoihoc = new javax.swing.JTextField();
        lblGhichu_pnlNguoihoc = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtGhichu_pnlNguoihoc = new javax.swing.JTextArea();
        btnAdd_pnlNguoihoc = new javax.swing.JButton();
        btnDelete_pnlNguoihoc = new javax.swing.JButton();
        btnUpdate_pnlNguoihoc = new javax.swing.JButton();
        btnNew_pnlNguoihoc = new javax.swing.JButton();
        btnFirst_pnlNguoihoc = new javax.swing.JButton();
        btnPrevious_pnlNguoihoc = new javax.swing.JButton();
        btnNext_pnlNguoihoc = new javax.swing.JButton();
        btnLast_pnlNguoihoc = new javax.swing.JButton();
        dateNgaysinh_pnlNguoihoc = new com.toedter.calendar.JDateChooser();
        pnlDanhsach_pnlNguoihoc = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblListdanhsach_pnlNguoihoc = new javax.swing.JTable();
        pnlKhoahoc = new javax.swing.JPanel();
        tabbedPaneKhoahoc = new javax.swing.JTabbedPane();
        pnlThongtin_pnlKhoahoc = new javax.swing.JPanel();
        lblChuyende_pnlKhoahoc = new javax.swing.JLabel();
        lblNgaykhaigiang_pnlKhoahoc = new javax.swing.JLabel();
        lblHocphi_pnlKhoahoc = new javax.swing.JLabel();
        txtHocphi_pnlKhoahoc = new javax.swing.JTextField();
        lblThoiluong_pnlKhoahoc = new javax.swing.JLabel();
        cboChuyende_pnlKhoahoc = new javax.swing.JComboBox<>();
        lblNguoitao_pnlKhoahoc = new javax.swing.JLabel();
        txtNguoitao_pnlKhoahoc = new javax.swing.JTextField();
        lblNgaytao_pnlKhoahoc = new javax.swing.JLabel();
        txtNgaytao_pnlKhoahoc = new javax.swing.JTextField();
        lblGhichu_pnlKhoahoc = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtGhichu_pnlKhoahoc = new javax.swing.JTextArea();
        btnAdd_pnlKhoahoc = new javax.swing.JButton();
        btnDelete_pnlKhoahoc = new javax.swing.JButton();
        btnUpdate_pnlKhoahoc = new javax.swing.JButton();
        btnNew_pnlKhoahoc = new javax.swing.JButton();
        btnFirst_pnlKhoahoc = new javax.swing.JButton();
        btnPrevious_pnlKhoahoc = new javax.swing.JButton();
        btnNext_pnlKhoahoc = new javax.swing.JButton();
        btnLast_pnlKhoahoc = new javax.swing.JButton();
        txtThoiluong_pnlKhoahoc = new javax.swing.JTextField();
        dateNgaykhaigiang_pnlKhoahoc = new com.toedter.calendar.JDateChooser();
        pnlDanhsach_pnlKhoahoc = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblListdanhsach_pnlKhoahoc = new javax.swing.JTable();
        pnlNhanvien = new javax.swing.JPanel();
        tabbedPaneNhanvien = new javax.swing.JTabbedPane();
        pnlThongtin_pnlNhanvien = new javax.swing.JPanel();
        lblManhanvien_pnlNhanvien = new javax.swing.JLabel();
        txtManhanvien_pnlNhanvien = new javax.swing.JTextField();
        lblMatkhau_pnlNhanvien = new javax.swing.JLabel();
        txtMatkhau_pnlNhanvien = new javax.swing.JTextField();
        lblXacnhanmatkhau_pnlNhanvien = new javax.swing.JLabel();
        txtXacnhanmatkhau_pnlNhanvien = new javax.swing.JTextField();
        lblHoten_pnlNhanvien = new javax.swing.JLabel();
        txtHoten_pnlNhanvien = new javax.swing.JTextField();
        lblVaitro_pnlNhanvien = new javax.swing.JLabel();
        rdoNhanvien_pnlNhanvien = new javax.swing.JRadioButton();
        rdoTruongphong_pnlNhanvien = new javax.swing.JRadioButton();
        btnAdd_pnlNhanvien = new javax.swing.JButton();
        btnDelete_pnlNhanvien = new javax.swing.JButton();
        btnUpdate_pnlNhanvien = new javax.swing.JButton();
        btnNew__pnlNhanvien = new javax.swing.JButton();
        btnFirst_pnlNhanvien = new javax.swing.JButton();
        btnPrevious_pnlNhanvien = new javax.swing.JButton();
        btnNext_pnlNhanvien = new javax.swing.JButton();
        btnLast_pnlNhanvien = new javax.swing.JButton();
        pnlDanhsach_pnlNhanvien = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblListdanhsach_pnlNhanvien = new javax.swing.JTable();
        pnlThongke = new javax.swing.JPanel();
        tabbedPaneThongke = new javax.swing.JTabbedPane();
        pnlBangdiem_pnlThongke = new javax.swing.JPanel();
        cboLonbe_pnlThongke = new javax.swing.JComboBox<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblListbangdien_pnlThongke = new javax.swing.JTable();
        cboKhoahocj_pnlThongke = new javax.swing.JComboBox<>();
        cboSapxep_pnlThongke = new javax.swing.JComboBox<>();
        lblKhoahoc_pnlThongke = new javax.swing.JLabel();
        pnlNguoihoc_pnlThongke = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblListnguoihoc_pnlThongke = new javax.swing.JTable();
        pnlDiemchuyende_pnlThongke = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblListdiemchuyende_pnlThongke = new javax.swing.JTable();
        pnlDoanhthu_pnlThongke = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tblListdoanhthu_pnlThongke = new javax.swing.JTable();
        cboNam_pnlThongke = new javax.swing.JComboBox<>();
        lblNam_pnlThongke = new javax.swing.JLabel();
        DialogGioithieu = new javax.swing.JDialog();
        lblLogo_Dialoggioithieu = new javax.swing.JLabel();
        lblTieuDe_Dialoggioithieu = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtNoidung_Dialoggioithieu = new javax.swing.JTextArea();
        btngNhanvien = new javax.swing.ButtonGroup();
        pnlContainer = new javax.swing.JPanel();
        pnlLeft = new javax.swing.JPanel();
        lblChuyende = new javax.swing.JLabel();
        try {
            java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_chuyende.gif"));
            lblChuyende.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        lblHocvien = new javax.swing.JLabel();
        try {
            java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_hocvien.gif"));
            lblHocvien.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        lblNguoihoc = new javax.swing.JLabel();
        try {
            java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_nguoihoc.gif"));
            lblNguoihoc.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        lblKhoahoc = new javax.swing.JLabel();
        try {
            java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_khoahoc.gif"));
            lblKhoahoc.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        pnlRight = new javax.swing.JPanel();
        pnlloader = new javax.swing.JPanel();
        lblLoader = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        pnlTrangthai = new javax.swing.JPanel();
        lblHequanlydaotao = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        new Thread() {
            @Override
            public void run() {
                while (true) {
                    java.util.Date dateNgaysinh_pnlNguoihoc = new java.util.Date();
                    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("hh : mm : ss aa");
                    lblTime.setText(sdf.format(dateNgaysinh_pnlNguoihoc));
                    try {
                        Thread.sleep(1000);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        }.start();
        MenuBar = new javax.swing.JMenuBar();
        mnuHeThong = new javax.swing.JMenu();
        mniDangnhap = new javax.swing.JMenuItem();
        mnuExport = new javax.swing.JMenu();
        mniEEHocvien = new javax.swing.JMenuItem();
        mniEEChuyende = new javax.swing.JMenuItem();
        mniEENguoihoc = new javax.swing.JMenuItem();
        mniEEKhoahoc = new javax.swing.JMenuItem();
        mniEEThongke = new javax.swing.JMenuItem();
        mniQR = new javax.swing.JMenuItem();
        mniDangxuat = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniDoimatkhau = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mniThoa = new javax.swing.JMenuItem();
        mnuQuanLy = new javax.swing.JMenu();
        mniChuyende = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_chuyende.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniChuyende.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        mniKhoahoc = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_khoahoc.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniKhoahoc.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        mniNguoihoc = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_nguoihoc.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniNguoihoc.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        mniHocvien = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_hocvien.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniHocvien.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mniNhanvien = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_nhanvien.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniNhanvien.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        mnuThongKe = new javax.swing.JMenu();
        mniBangdiem = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_bangdiem.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniBangdiem.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mniLuongnguoihoc = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_luongnguoihoc.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniLuongnguoihoc.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        mniDiemchuyende = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_diemchuyende.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniDiemchuyende.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mniDoanhthu = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_doanhthu.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniDoanhthu.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        mnuTroGiup = new javax.swing.JMenu();
        mniHuongdan = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_huongdan.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniHuongdan.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        mniGioithieu = new javax.swing.JMenuItem();
        try {
            java.awt.image.BufferedImage bi = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_gioithieu.gif"));
            java.awt.Image img = ResizeImage.img(bi, 24, 24);
            mniGioithieu.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }

        pnlChuyende.setPreferredSize(new java.awt.Dimension(725, 442));

        tabbedPaneChuyende.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabbedPaneChuyende.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPaneChuyende.setToolTipText("");
        tabbedPaneChuyende.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        tabbedPaneChuyende.setOpaque(true);
        tabbedPaneChuyende.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tabbedPaneChuyendeMouseMoved(evt);
            }
        });

        pnlThongtinchuyende_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        pnlThongtinchuyende_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblMachuyende_pnlChuyende.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblMachuyende_pnlChuyende.setText("Mã Chuyên Đề");

        txtMachuyende_pnlChuyende.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtMachuyende_pnlChuyende.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMachuyende_pnlChuyendeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMachuyende_pnlChuyendeFocusLost(evt);
            }
        });
        txtMachuyende_pnlChuyende.addKeyListener(new java.awt.event.KeyAdapter(){
            public void keyTyped(java.awt.event.KeyEvent evt) {
                if(txtMachuyende_pnlChuyende.getText().length() >=5){
                    evt.consume();
                    java.awt.Toolkit.getDefaultToolkit().beep();
                }
            }
        });

        lblTenchuyende_pnlChuyende.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblTenchuyende_pnlChuyende.setText("Tên Chuyên Đề");

        txtTenchuyende_pnlChuyende.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtTenchuyende_pnlChuyende.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenchuyende_pnlChuyendeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenchuyende_pnlChuyendeFocusLost(evt);
            }
        });

        lblThoiluong_pnlChuyende.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblThoiluong_pnlChuyende.setText("Thời Lượng (giờ)");

        txtThoiluong_pnlChuyende.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtThoiluong_pnlChuyende.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtThoiluong_pnlChuyendeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtThoiluong_pnlChuyendeFocusLost(evt);
            }
        });

        lblHocphi_pnlChuyende.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblHocphi_pnlChuyende.setText("Học Phí");

        txtHocphi_pnlChuyende.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtHocphi_pnlChuyende.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHocphi_pnlChuyendeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHocphi_pnlChuyendeFocusLost(evt);
            }
        });

        lblMota_pnlChuyende.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblMota_pnlChuyende.setText("Mô Tả");

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtMota_pnlChuyende.setColumns(20);
        txtMota_pnlChuyende.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtMota_pnlChuyende.setLineWrap(true);
        txtMota_pnlChuyende.setRows(5);
        txtMota_pnlChuyende.setWrapStyleWord(true);
        txtMota_pnlChuyende.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMota_pnlChuyendeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMota_pnlChuyendeFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(txtMota_pnlChuyende);

        lblImage_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        lblImage_pnlChuyende.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage_pnlChuyende.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/icon/icon_image.gif"))); // NOI18N
        lblImage_pnlChuyende.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(204, 204, 204)));
        lblImage_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImage_pnlChuyende.setOpaque(true);

        btnImage_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnImage_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnImage_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnImage_pnlChuyende.setText("Image");
        btnImage_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnImage_pnlChuyende.setContentAreaFilled(false);
        btnImage_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImage_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImage_pnlChuyende.setOpaque(true);
        btnImage_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnImage_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnImage_pnlChuyendeMouseExited(evt);
            }
        });
        btnImage_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImage_pnlChuyendeActionPerformed(evt);
            }
        });

        btnAdd_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnAdd_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnAdd_pnlChuyende.setText("Add");
        btnAdd_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnAdd_pnlChuyende.setContentAreaFilled(false);
        btnAdd_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd_pnlChuyende.setOpaque(true);
        btnAdd_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdd_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdd_pnlChuyendeMouseExited(evt);
            }
        });
        btnAdd_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd_pnlChuyendeActionPerformed(evt);
            }
        });

        btnDelete_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnDelete_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnDelete_pnlChuyende.setText("Delete");
        btnDelete_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnDelete_pnlChuyende.setContentAreaFilled(false);
        btnDelete_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete_pnlChuyende.setEnabled(false);
        btnDelete_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete_pnlChuyende.setOpaque(true);
        btnDelete_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDelete_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDelete_pnlChuyendeMouseExited(evt);
            }
        });
        btnDelete_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete_pnlChuyendeActionPerformed(evt);
            }
        });

        btnUpdate_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnUpdate_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnUpdate_pnlChuyende.setText("Update");
        btnUpdate_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnUpdate_pnlChuyende.setContentAreaFilled(false);
        btnUpdate_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate_pnlChuyende.setEnabled(false);
        btnUpdate_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate_pnlChuyende.setOpaque(true);
        btnUpdate_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlChuyendeMouseExited(evt);
            }
        });
        btnUpdate_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate_pnlChuyendeActionPerformed(evt);
            }
        });

        btnNew_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnNew_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNew_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnNew_pnlChuyende.setText("New");
        btnNew_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNew_pnlChuyende.setContentAreaFilled(false);
        btnNew_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew_pnlChuyende.setOpaque(true);
        btnNew_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNew_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNew_pnlChuyendeMouseExited(evt);
            }
        });
        btnNew_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew_pnlChuyendeActionPerformed(evt);
            }
        });

        btnFirst_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnFirst_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnFirst_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnFirst_pnlChuyende.setText("|<");
        btnFirst_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnFirst_pnlChuyende.setContentAreaFilled(false);
        btnFirst_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirst_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFirst_pnlChuyende.setOpaque(true);
        btnFirst_pnlChuyende.setPreferredSize(new java.awt.Dimension(17, 15));
        btnFirst_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFirst_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFirst_pnlChuyendeMouseExited(evt);
            }
        });
        btnFirst_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst_pnlChuyendeActionPerformed(evt);
            }
        });

        btnPrevious_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnPrevious_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnPrevious_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnPrevious_pnlChuyende.setText("<<");
        btnPrevious_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnPrevious_pnlChuyende.setContentAreaFilled(false);
        btnPrevious_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrevious_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrevious_pnlChuyende.setOpaque(true);
        btnPrevious_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlChuyendeMouseExited(evt);
            }
        });
        btnPrevious_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevious_pnlChuyendeActionPerformed(evt);
            }
        });

        btnNext_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnNext_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNext_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnNext_pnlChuyende.setText(">>");
        btnNext_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNext_pnlChuyende.setContentAreaFilled(false);
        btnNext_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNext_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNext_pnlChuyende.setOpaque(true);
        btnNext_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNext_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNext_pnlChuyendeMouseExited(evt);
            }
        });
        btnNext_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext_pnlChuyendeActionPerformed(evt);
            }
        });

        btnLast_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));
        btnLast_pnlChuyende.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnLast_pnlChuyende.setForeground(new java.awt.Color(6, 43, 142));
        btnLast_pnlChuyende.setText(">|");
        btnLast_pnlChuyende.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnLast_pnlChuyende.setContentAreaFilled(false);
        btnLast_pnlChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLast_pnlChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLast_pnlChuyende.setOpaque(true);
        btnLast_pnlChuyende.setPreferredSize(new java.awt.Dimension(17, 15));
        btnLast_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLast_pnlChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLast_pnlChuyendeMouseExited(evt);
            }
        });
        btnLast_pnlChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast_pnlChuyendeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThongtinchuyende_pnlChuyendeLayout = new javax.swing.GroupLayout(pnlThongtinchuyende_pnlChuyende);
        pnlThongtinchuyende_pnlChuyende.setLayout(pnlThongtinchuyende_pnlChuyendeLayout);
        pnlThongtinchuyende_pnlChuyendeLayout.setHorizontalGroup(
            pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                        .addComponent(btnFirst_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrevious_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnImage_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImage_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHocphi_pnlChuyende, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMachuyende_pnlChuyende, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMota_pnlChuyende, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTenchuyende_pnlChuyende, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblThoiluong_pnlChuyende, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHocphi_pnlChuyende, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(txtMachuyende_pnlChuyende)
                    .addComponent(txtTenchuyende_pnlChuyende, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(txtThoiluong_pnlChuyende, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnAdd_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNew_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(224, Short.MAX_VALUE))
        );
        pnlThongtinchuyende_pnlChuyendeLayout.setVerticalGroup(
            pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblImage_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMachuyende_pnlChuyende)
                            .addComponent(txtMachuyende_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenchuyende_pnlChuyende)
                            .addComponent(txtTenchuyende_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblThoiluong_pnlChuyende)
                            .addComponent(txtThoiluong_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHocphi_pnlChuyende)
                            .addComponent(txtHocphi_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(lblMota_pnlChuyende))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(btnImage_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addGroup(pnlThongtinchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(btnFirst_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrevious_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLast_pnlChuyende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPaneChuyende.addTab("Thông tin", null, pnlThongtinchuyende_pnlChuyende, "");

        pnlDanhsachchuyende_pnlChuyende.setBackground(new java.awt.Color(255, 255, 255));

        tblListdanhsach_pnlChuyende.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListdanhsach_pnlChuyende.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Chuyên Đề", "Tên Chuyên Đề", "Học Phí", "Thời Lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListdanhsach_pnlChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListdanhsach_pnlChuyendeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblListdanhsach_pnlChuyende);
        if (tblListdanhsach_pnlChuyende.getColumnModel().getColumnCount() > 0) {
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(0).setMinWidth(100);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(0).setMaxWidth(200);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(1).setMinWidth(150);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(2).setMinWidth(100);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(2).setMaxWidth(200);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(3).setMinWidth(100);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblListdanhsach_pnlChuyende.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        javax.swing.GroupLayout pnlDanhsachchuyende_pnlChuyendeLayout = new javax.swing.GroupLayout(pnlDanhsachchuyende_pnlChuyende);
        pnlDanhsachchuyende_pnlChuyende.setLayout(pnlDanhsachchuyende_pnlChuyendeLayout);
        pnlDanhsachchuyende_pnlChuyendeLayout.setHorizontalGroup(
            pnlDanhsachchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhsachchuyende_pnlChuyendeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDanhsachchuyende_pnlChuyendeLayout.setVerticalGroup(
            pnlDanhsachchuyende_pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhsachchuyende_pnlChuyendeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneChuyende.addTab("Danh sách", pnlDanhsachchuyende_pnlChuyende);

        tabbedPaneChuyende.setBackgroundAt(0, java.awt.Color.WHITE);
        tabbedPaneChuyende.setBackgroundAt(1, java.awt.Color.WHITE);

        javax.swing.GroupLayout pnlChuyendeLayout = new javax.swing.GroupLayout(pnlChuyende);
        pnlChuyende.setLayout(pnlChuyendeLayout);
        pnlChuyendeLayout.setHorizontalGroup(
            pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyendeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneChuyende)
                .addContainerGap())
        );
        pnlChuyendeLayout.setVerticalGroup(
            pnlChuyendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyendeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneChuyende)
                .addContainerGap())
        );

        tabbedPaneChuyende.getAccessibleContext().setAccessibleName("Danh sách");

        pnlHocvien.setPreferredSize(new java.awt.Dimension(725, 442));

        tabbedPaneHocvien.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPaneHocvien.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        tabbedPaneHocvien.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tabbedPaneHocvienMouseMoved(evt);
            }
        });

        pnlhocvien_pnlHocvien.setBackground(new java.awt.Color(255, 255, 255));

        tblListhocvien__pnlHocvien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListhocvien__pnlHocvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TT", "Mã Học Viên", "Mã Người Học", "Họ Và Tên", "Điểm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListhocvien__pnlHocvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListhocvien__pnlHocvienMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblListhocvien__pnlHocvien);
        if (tblListhocvien__pnlHocvien.getColumnModel().getColumnCount() > 0) {
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(0).setMinWidth(100);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(0).setMaxWidth(200);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(1).setMinWidth(100);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(1).setMaxWidth(200);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(2).setMinWidth(100);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(2).setMaxWidth(200);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(4).setMinWidth(40);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(4).setPreferredWidth(70);
            tblListhocvien__pnlHocvien.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        btnRemove_pnlHocvien.setBackground(new java.awt.Color(255, 255, 255));
        btnRemove_pnlHocvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnRemove_pnlHocvien.setForeground(new java.awt.Color(6, 43, 142));
        btnRemove_pnlHocvien.setText("Remove from class");
        btnRemove_pnlHocvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnRemove_pnlHocvien.setContentAreaFilled(false);
        btnRemove_pnlHocvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemove_pnlHocvien.setEnabled(false);
        btnRemove_pnlHocvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemove_pnlHocvien.setOpaque(true);
        btnRemove_pnlHocvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRemove_pnlHocvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRemove_pnlHocvienMouseExited(evt);
            }
        });
        btnRemove_pnlHocvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemove_pnlHocvienActionPerformed(evt);
            }
        });

        btnScoreupdate_pnlHocvien.setBackground(new java.awt.Color(255, 255, 255));
        btnScoreupdate_pnlHocvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnScoreupdate_pnlHocvien.setForeground(new java.awt.Color(6, 43, 142));
        btnScoreupdate_pnlHocvien.setText("Score update");
        btnScoreupdate_pnlHocvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnScoreupdate_pnlHocvien.setContentAreaFilled(false);
        btnScoreupdate_pnlHocvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnScoreupdate_pnlHocvien.setEnabled(false);
        btnScoreupdate_pnlHocvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnScoreupdate_pnlHocvien.setMaximumSize(new java.awt.Dimension(85, 15));
        btnScoreupdate_pnlHocvien.setMinimumSize(new java.awt.Dimension(85, 15));
        btnScoreupdate_pnlHocvien.setOpaque(true);
        btnScoreupdate_pnlHocvien.setPreferredSize(new java.awt.Dimension(85, 15));
        btnScoreupdate_pnlHocvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnScoreupdate_pnlHocvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnScoreupdate_pnlHocvienMouseExited(evt);
            }
        });
        btnScoreupdate_pnlHocvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScoreupdate_pnlHocvienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlhocvien_pnlHocvienLayout = new javax.swing.GroupLayout(pnlhocvien_pnlHocvien);
        pnlhocvien_pnlHocvien.setLayout(pnlhocvien_pnlHocvienLayout);
        pnlhocvien_pnlHocvienLayout.setHorizontalGroup(
            pnlhocvien_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlhocvien_pnlHocvienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlhocvien_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGroup(pnlhocvien_pnlHocvienLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemove_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnScoreupdate_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlhocvien_pnlHocvienLayout.setVerticalGroup(
            pnlhocvien_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlhocvien_pnlHocvienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlhocvien_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnScoreupdate_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemove_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabbedPaneHocvien.addTab("Học viên", pnlhocvien_pnlHocvien);

        pnlNguoihoc_pnlHocvien.setBackground(new java.awt.Color(255, 255, 255));

        tblListnguoihoc_pnlHocvien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListnguoihoc_pnlHocvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Người Học", "Họ Tên", "Giới Tính", "Ngày Sinh", "Điện Thoại", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblListnguoihoc_pnlHocvien);
        if (tblListnguoihoc_pnlHocvien.getColumnModel().getColumnCount() > 0) {
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(0).setMinWidth(100);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(0).setMaxWidth(200);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(2).setMinWidth(40);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(2).setPreferredWidth(60);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(2).setMaxWidth(80);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(3).setMinWidth(100);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(3).setMaxWidth(200);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(4).setMinWidth(100);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(4).setMaxWidth(200);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(5).setMinWidth(100);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblListnguoihoc_pnlHocvien.getColumnModel().getColumn(5).setMaxWidth(200);
        }

        txtFind_pnlHocvien.setFont(new java.awt.Font("Segoe UI Light", 0, 15)); // NOI18N
        txtFind_pnlHocvien.setText("Find...");
        txtFind_pnlHocvien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(6, 43, 142)));
        txtFind_pnlHocvien.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFind_pnlHocvienFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFind_pnlHocvienFocusLost(evt);
            }
        });
        txtFind_pnlHocvien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFind_pnlHocvienKeyReleased(evt);
            }
        });

        btnAdd_pnlHocvien.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd_pnlHocvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnAdd_pnlHocvien.setForeground(new java.awt.Color(6, 43, 142));
        btnAdd_pnlHocvien.setText("Add of course");
        btnAdd_pnlHocvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnAdd_pnlHocvien.setContentAreaFilled(false);
        btnAdd_pnlHocvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd_pnlHocvien.setEnabled(false);
        btnAdd_pnlHocvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd_pnlHocvien.setOpaque(true);
        btnAdd_pnlHocvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdd_pnlHocvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdd_pnlHocvienMouseExited(evt);
            }
        });
        btnAdd_pnlHocvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd_pnlHocvienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNguoihoc_pnlHocvienLayout = new javax.swing.GroupLayout(pnlNguoihoc_pnlHocvien);
        pnlNguoihoc_pnlHocvien.setLayout(pnlNguoihoc_pnlHocvienLayout);
        pnlNguoihoc_pnlHocvienLayout.setHorizontalGroup(
            pnlNguoihoc_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoihoc_pnlHocvienLayout.createSequentialGroup()
                .addGroup(pnlNguoihoc_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNguoihoc_pnlHocvienLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdd_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlNguoihoc_pnlHocvienLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlNguoihoc_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFind_pnlHocvien, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlNguoihoc_pnlHocvienLayout.setVerticalGroup(
            pnlNguoihoc_pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNguoihoc_pnlHocvienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFind_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabbedPaneHocvien.addTab("Người học", pnlNguoihoc_pnlHocvien);

        tabbedPaneHocvien.setBackgroundAt(0, java.awt.Color.WHITE);
        tabbedPaneHocvien.setBackgroundAt(1, java.awt.Color.WHITE);

        lblChuyende_pnlHocvien.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblChuyende_pnlHocvien.setText("Chuyên Đề");

        lblKhoahoc_pnlHocvien.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblKhoahoc_pnlHocvien.setText("Khóa Học");

        cboChuyende_pnlHocvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboChuyende_pnlHocvien.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboChuyende_pnlHocvienItemStateChanged(evt);
            }
        });

        cboKhoahoc_pnlHocvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboKhoahoc_pnlHocvien.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboKhoahoc_pnlHocvienItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlHocvienLayout = new javax.swing.GroupLayout(pnlHocvien);
        pnlHocvien.setLayout(pnlHocvienLayout);
        pnlHocvienLayout.setHorizontalGroup(
            pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHocvienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPaneHocvien)
                    .addGroup(pnlHocvienLayout.createSequentialGroup()
                        .addGroup(pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChuyende_pnlHocvien, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblKhoahoc_pnlHocvien, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboChuyende_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboKhoahoc_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlHocvienLayout.setVerticalGroup(
            pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHocvienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblChuyende_pnlHocvien)
                    .addComponent(cboChuyende_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlHocvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKhoahoc_pnlHocvien)
                    .addComponent(cboKhoahoc_pnlHocvien, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(tabbedPaneHocvien)
                .addContainerGap())
        );

        pnlNguoihoc.setPreferredSize(new java.awt.Dimension(725, 442));

        tabbedPaneNguoihoc.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPaneNguoihoc.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        tabbedPaneNguoihoc.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tabbedPaneNguoihocMouseMoved(evt);
            }
        });

        pnlThongtin_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));

        lblManguoihoc_pnlNguoihoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblManguoihoc_pnlNguoihoc.setText("Mã Người Học");

        txtManguoihoc_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtManguoihoc_pnlNguoihoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtManguoihoc_pnlNguoihocFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtManguoihoc_pnlNguoihocFocusLost(evt);
            }
        });

        lblHoten_pnlNguoihoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblHoten_pnlNguoihoc.setText("Họ và Tên");

        txtHovaten_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtHovaten_pnlNguoihoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHovaten_pnlNguoihocFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHovaten_pnlNguoihocFocusLost(evt);
            }
        });

        lblNgaysinh_pnlNguoihoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblNgaysinh_pnlNguoihoc.setText("Ngày sinh");

        lblGioitinh_pnlNguoihoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblGioitinh_pnlNguoihoc.setText("Giới Tính");

        cboGioitinh_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboGioitinh_pnlNguoihoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        lblSodienthoai_pnlNguoihoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblSodienthoai_pnlNguoihoc.setText("Số Điện Thoại");

        txtSodienthoai_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtSodienthoai_pnlNguoihoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSodienthoai_pnlNguoihocFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSodienthoai_pnlNguoihocFocusLost(evt);
            }
        });

        lblEmail_pnlNguoihoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblEmail_pnlNguoihoc.setText("Email");

        txtEmail_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtEmail_pnlNguoihoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmail_pnlNguoihocFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmail_pnlNguoihocFocusLost(evt);
            }
        });

        lblGhichu_pnlNguoihoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblGhichu_pnlNguoihoc.setText("Ghi Chú");

        txtGhichu_pnlNguoihoc.setColumns(20);
        txtGhichu_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtGhichu_pnlNguoihoc.setRows(3);
        txtGhichu_pnlNguoihoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGhichu_pnlNguoihocFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGhichu_pnlNguoihocFocusLost(evt);
            }
        });
        jScrollPane5.setViewportView(txtGhichu_pnlNguoihoc);

        btnAdd_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnAdd_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnAdd_pnlNguoihoc.setText("Add");
        btnAdd_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnAdd_pnlNguoihoc.setContentAreaFilled(false);
        btnAdd_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd_pnlNguoihoc.setOpaque(true);
        btnAdd_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdd_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdd_pnlNguoihocMouseExited(evt);
            }
        });
        btnAdd_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd_pnlNguoihocActionPerformed(evt);
            }
        });

        btnDelete_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnDelete_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnDelete_pnlNguoihoc.setText("Delete");
        btnDelete_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnDelete_pnlNguoihoc.setContentAreaFilled(false);
        btnDelete_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete_pnlNguoihoc.setEnabled(false);
        btnDelete_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete_pnlNguoihoc.setOpaque(true);
        btnDelete_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDelete_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDelete_pnlNguoihocMouseExited(evt);
            }
        });
        btnDelete_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete_pnlNguoihocActionPerformed(evt);
            }
        });

        btnUpdate_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnUpdate_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnUpdate_pnlNguoihoc.setText("Update");
        btnUpdate_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnUpdate_pnlNguoihoc.setContentAreaFilled(false);
        btnUpdate_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate_pnlNguoihoc.setEnabled(false);
        btnUpdate_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate_pnlNguoihoc.setOpaque(true);
        btnUpdate_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlNguoihocMouseExited(evt);
            }
        });
        btnUpdate_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate_pnlNguoihocActionPerformed(evt);
            }
        });

        btnNew_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnNew_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNew_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnNew_pnlNguoihoc.setText("New");
        btnNew_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNew_pnlNguoihoc.setContentAreaFilled(false);
        btnNew_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew_pnlNguoihoc.setOpaque(true);
        btnNew_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNew_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNew_pnlNguoihocMouseExited(evt);
            }
        });
        btnNew_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew_pnlNguoihocActionPerformed(evt);
            }
        });

        btnFirst_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnFirst_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnFirst_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnFirst_pnlNguoihoc.setText("|<");
        btnFirst_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnFirst_pnlNguoihoc.setContentAreaFilled(false);
        btnFirst_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirst_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFirst_pnlNguoihoc.setOpaque(true);
        btnFirst_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFirst_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFirst_pnlNguoihocMouseExited(evt);
            }
        });
        btnFirst_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst_pnlNguoihocActionPerformed(evt);
            }
        });

        btnPrevious_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnPrevious_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnPrevious_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnPrevious_pnlNguoihoc.setText("<<");
        btnPrevious_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnPrevious_pnlNguoihoc.setContentAreaFilled(false);
        btnPrevious_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrevious_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrevious_pnlNguoihoc.setOpaque(true);
        btnPrevious_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlNguoihocMouseExited(evt);
            }
        });
        btnPrevious_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevious_pnlNguoihocActionPerformed(evt);
            }
        });

        btnNext_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnNext_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNext_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnNext_pnlNguoihoc.setText(">>");
        btnNext_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNext_pnlNguoihoc.setContentAreaFilled(false);
        btnNext_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNext_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNext_pnlNguoihoc.setOpaque(true);
        btnNext_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNext_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNext_pnlNguoihocMouseExited(evt);
            }
        });
        btnNext_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext_pnlNguoihocActionPerformed(evt);
            }
        });

        btnLast_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        btnLast_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnLast_pnlNguoihoc.setForeground(new java.awt.Color(6, 43, 142));
        btnLast_pnlNguoihoc.setText(">|");
        btnLast_pnlNguoihoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnLast_pnlNguoihoc.setContentAreaFilled(false);
        btnLast_pnlNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLast_pnlNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLast_pnlNguoihoc.setOpaque(true);
        btnLast_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLast_pnlNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLast_pnlNguoihocMouseExited(evt);
            }
        });
        btnLast_pnlNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast_pnlNguoihocActionPerformed(evt);
            }
        });

        dateNgaysinh_pnlNguoihoc.setDateFormatString("dd/MM/yyyy");
        dateNgaysinh_pnlNguoihoc.setFont(new java.awt.Font("Segoe UI Light", 0, 15)); // NOI18N
        dateNgaysinh_pnlNguoihoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/icon/icon_calendar.gif")));

        javax.swing.GroupLayout pnlThongtin_pnlNguoihocLayout = new javax.swing.GroupLayout(pnlThongtin_pnlNguoihoc);
        pnlThongtin_pnlNguoihoc.setLayout(pnlThongtin_pnlNguoihocLayout);
        pnlThongtin_pnlNguoihocLayout.setHorizontalGroup(
            pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtin_pnlNguoihocLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGhichu_pnlNguoihoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHoten_pnlNguoihoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNgaysinh_pnlNguoihoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblGioitinh_pnlNguoihoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSodienthoai_pnlNguoihoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail_pnlNguoihoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblManguoihoc_pnlNguoihoc, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongtin_pnlNguoihocLayout.createSequentialGroup()
                        .addComponent(btnAdd_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNew_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlThongtin_pnlNguoihocLayout.createSequentialGroup()
                        .addComponent(btnFirst_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrevious_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(pnlThongtin_pnlNguoihocLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHovaten_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateNgaysinh_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboGioitinh_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlThongtin_pnlNguoihocLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtEmail_pnlNguoihoc, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSodienthoai_pnlNguoihoc, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtManguoihoc_pnlNguoihoc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlThongtin_pnlNguoihocLayout.setVerticalGroup(
            pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtin_pnlNguoihocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblManguoihoc_pnlNguoihoc)
                    .addComponent(txtManguoihoc_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtHovaten_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHoten_pnlNguoihoc))
                .addGap(28, 28, 28)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dateNgaysinh_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgaysinh_pnlNguoihoc))
                .addGap(28, 28, 28)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cboGioitinh_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGioitinh_pnlNguoihoc))
                .addGap(28, 28, 28)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtSodienthoai_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSodienthoai_pnlNguoihoc))
                .addGap(28, 28, 28)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblEmail_pnlNguoihoc)
                    .addComponent(txtEmail_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGhichu_pnlNguoihoc))
                .addGap(38, 38, 38)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrevious_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pnlThongtin_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAdd_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew_pnlNguoihoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabbedPaneNguoihoc.addTab("Thông tin", pnlThongtin_pnlNguoihoc);

        pnlDanhsach_pnlNguoihoc.setBackground(new java.awt.Color(255, 255, 255));

        tblListdanhsach_pnlNguoihoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListdanhsach_pnlNguoihoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Người Học", "Họ và Tên", "Giới Tính", "Ngày Sinh", "Số Điện Thoại", "Email", "Nhân Viên Tạo", "Ngày Đăng Ký"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListdanhsach_pnlNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListdanhsach_pnlNguoihocMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblListdanhsach_pnlNguoihoc);
        if (tblListdanhsach_pnlNguoihoc.getColumnModel().getColumnCount() > 0) {
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(0).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(0).setMaxWidth(200);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(1).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(1).setMaxWidth(200);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(2).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(3).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(4).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(4).setMaxWidth(200);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(5).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(5).setMaxWidth(200);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(6).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(6).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(6).setMaxWidth(200);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(7).setMinWidth(100);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblListdanhsach_pnlNguoihoc.getColumnModel().getColumn(7).setMaxWidth(200);
        }

        javax.swing.GroupLayout pnlDanhsach_pnlNguoihocLayout = new javax.swing.GroupLayout(pnlDanhsach_pnlNguoihoc);
        pnlDanhsach_pnlNguoihoc.setLayout(pnlDanhsach_pnlNguoihocLayout);
        pnlDanhsach_pnlNguoihocLayout.setHorizontalGroup(
            pnlDanhsach_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhsach_pnlNguoihocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDanhsach_pnlNguoihocLayout.setVerticalGroup(
            pnlDanhsach_pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhsach_pnlNguoihocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneNguoihoc.addTab("Danh sách", pnlDanhsach_pnlNguoihoc);

        tabbedPaneNguoihoc.setBackgroundAt(0, java.awt.Color.WHITE);
        tabbedPaneNguoihoc.setBackgroundAt(1, java.awt.Color.WHITE);

        javax.swing.GroupLayout pnlNguoihocLayout = new javax.swing.GroupLayout(pnlNguoihoc);
        pnlNguoihoc.setLayout(pnlNguoihocLayout);
        pnlNguoihocLayout.setHorizontalGroup(
            pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoihocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneNguoihoc)
                .addContainerGap())
        );
        pnlNguoihocLayout.setVerticalGroup(
            pnlNguoihocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoihocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneNguoihoc)
                .addContainerGap())
        );

        pnlKhoahoc.setPreferredSize(new java.awt.Dimension(725, 442));

        tabbedPaneKhoahoc.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPaneKhoahoc.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        tabbedPaneKhoahoc.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tabbedPaneKhoahocMouseMoved(evt);
            }
        });

        pnlThongtin_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));

        lblChuyende_pnlKhoahoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblChuyende_pnlKhoahoc.setText("Chuyên Đề");

        lblNgaykhaigiang_pnlKhoahoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblNgaykhaigiang_pnlKhoahoc.setText("Ngày Khai Giảng");

        lblHocphi_pnlKhoahoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblHocphi_pnlKhoahoc.setText("Học Phí");

        txtHocphi_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtHocphi_pnlKhoahoc.setEnabled(false);

        lblThoiluong_pnlKhoahoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblThoiluong_pnlKhoahoc.setText("Thời Lượng (Giờ)");

        cboChuyende_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboChuyende_pnlKhoahoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboChuyende_pnlKhoahocItemStateChanged(evt);
            }
        });

        lblNguoitao_pnlKhoahoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblNguoitao_pnlKhoahoc.setText("Người Tạo");

        txtNguoitao_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtNguoitao_pnlKhoahoc.setEnabled(false);

        lblNgaytao_pnlKhoahoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblNgaytao_pnlKhoahoc.setText("Ngày Tạo");

        txtNgaytao_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtNgaytao_pnlKhoahoc.setEnabled(false);

        lblGhichu_pnlKhoahoc.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblGhichu_pnlKhoahoc.setText("Ghi Chú");

        txtGhichu_pnlKhoahoc.setColumns(20);
        txtGhichu_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtGhichu_pnlKhoahoc.setRows(5);
        jScrollPane8.setViewportView(txtGhichu_pnlKhoahoc);

        btnAdd_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnAdd_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnAdd_pnlKhoahoc.setText("Add");
        btnAdd_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnAdd_pnlKhoahoc.setContentAreaFilled(false);
        btnAdd_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd_pnlKhoahoc.setOpaque(true);
        btnAdd_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdd_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdd_pnlKhoahocMouseExited(evt);
            }
        });
        btnAdd_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd_pnlKhoahocActionPerformed(evt);
            }
        });

        btnDelete_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnDelete_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnDelete_pnlKhoahoc.setText("Delete");
        btnDelete_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnDelete_pnlKhoahoc.setContentAreaFilled(false);
        btnDelete_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete_pnlKhoahoc.setEnabled(false);
        btnDelete_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete_pnlKhoahoc.setOpaque(true);
        btnDelete_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDelete_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDelete_pnlKhoahocMouseExited(evt);
            }
        });
        btnDelete_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete_pnlKhoahocActionPerformed(evt);
            }
        });

        btnUpdate_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnUpdate_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnUpdate_pnlKhoahoc.setText("Update");
        btnUpdate_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnUpdate_pnlKhoahoc.setContentAreaFilled(false);
        btnUpdate_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate_pnlKhoahoc.setEnabled(false);
        btnUpdate_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate_pnlKhoahoc.setOpaque(true);
        btnUpdate_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlKhoahocMouseExited(evt);
            }
        });
        btnUpdate_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate_pnlKhoahocActionPerformed(evt);
            }
        });

        btnNew_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnNew_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNew_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnNew_pnlKhoahoc.setText("New");
        btnNew_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNew_pnlKhoahoc.setContentAreaFilled(false);
        btnNew_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew_pnlKhoahoc.setOpaque(true);
        btnNew_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNew_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNew_pnlKhoahocMouseExited(evt);
            }
        });
        btnNew_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew_pnlKhoahocActionPerformed(evt);
            }
        });

        btnFirst_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnFirst_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnFirst_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnFirst_pnlKhoahoc.setText("|<");
        btnFirst_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnFirst_pnlKhoahoc.setContentAreaFilled(false);
        btnFirst_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirst_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFirst_pnlKhoahoc.setOpaque(true);
        btnFirst_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFirst_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFirst_pnlKhoahocMouseExited(evt);
            }
        });
        btnFirst_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst_pnlKhoahocActionPerformed(evt);
            }
        });

        btnPrevious_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnPrevious_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnPrevious_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnPrevious_pnlKhoahoc.setText("<<");
        btnPrevious_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnPrevious_pnlKhoahoc.setContentAreaFilled(false);
        btnPrevious_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrevious_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrevious_pnlKhoahoc.setOpaque(true);
        btnPrevious_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlKhoahocMouseExited(evt);
            }
        });
        btnPrevious_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevious_pnlKhoahocActionPerformed(evt);
            }
        });

        btnNext_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnNext_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNext_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnNext_pnlKhoahoc.setText(">>");
        btnNext_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNext_pnlKhoahoc.setContentAreaFilled(false);
        btnNext_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNext_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNext_pnlKhoahoc.setOpaque(true);
        btnNext_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNext_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNext_pnlKhoahocMouseExited(evt);
            }
        });
        btnNext_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext_pnlKhoahocActionPerformed(evt);
            }
        });

        btnLast_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        btnLast_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnLast_pnlKhoahoc.setForeground(new java.awt.Color(6, 43, 142));
        btnLast_pnlKhoahoc.setText(">|");
        btnLast_pnlKhoahoc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnLast_pnlKhoahoc.setContentAreaFilled(false);
        btnLast_pnlKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLast_pnlKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLast_pnlKhoahoc.setOpaque(true);
        btnLast_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLast_pnlKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLast_pnlKhoahocMouseExited(evt);
            }
        });
        btnLast_pnlKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast_pnlKhoahocActionPerformed(evt);
            }
        });

        txtThoiluong_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtThoiluong_pnlKhoahoc.setEnabled(false);

        dateNgaykhaigiang_pnlKhoahoc.setDateFormatString("dd/MM/yyyy");
        dateNgaykhaigiang_pnlKhoahoc.setFont(new java.awt.Font("Segoe UI Light", 0, 15)); // NOI18N
        dateNgaykhaigiang_pnlKhoahoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/icon/icon_calendar.gif")));

        javax.swing.GroupLayout pnlThongtin_pnlKhoahocLayout = new javax.swing.GroupLayout(pnlThongtin_pnlKhoahoc);
        pnlThongtin_pnlKhoahoc.setLayout(pnlThongtin_pnlKhoahocLayout);
        pnlThongtin_pnlKhoahocLayout.setHorizontalGroup(
            pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHocphi_pnlKhoahoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblThoiluong_pnlKhoahoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNguoitao_pnlKhoahoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNgaytao_pnlKhoahoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblChuyende_pnlKhoahoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblGhichu_pnlKhoahoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNgaykhaigiang_pnlKhoahoc, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addComponent(txtHocphi_pnlKhoahoc)
                    .addComponent(txtThoiluong_pnlKhoahoc)
                    .addComponent(cboChuyende_pnlKhoahoc, 0, 425, Short.MAX_VALUE)
                    .addComponent(txtNguoitao_pnlKhoahoc)
                    .addComponent(txtNgaytao_pnlKhoahoc)
                    .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                        .addComponent(dateNgaykhaigiang_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                        .addComponent(btnAdd_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNew_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                        .addComponent(btnFirst_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrevious_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlThongtin_pnlKhoahocLayout.setVerticalGroup(
            pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cboChuyende_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChuyende_pnlKhoahoc))
                .addGap(31, 31, 31)
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblNgaykhaigiang_pnlKhoahoc)
                    .addComponent(dateNgaykhaigiang_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblHocphi_pnlKhoahoc)
                    .addComponent(txtHocphi_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(txtNguoitao_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtNgaytao_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlThongtin_pnlKhoahocLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblThoiluong_pnlKhoahoc)
                            .addComponent(txtThoiluong_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(lblNguoitao_pnlKhoahoc)
                        .addGap(40, 40, 40)
                        .addComponent(lblNgaytao_pnlKhoahoc)
                        .addGap(70, 70, 70)
                        .addComponent(lblGhichu_pnlKhoahoc)))
                .addGap(38, 38, 38)
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrevious_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pnlThongtin_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAdd_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew_pnlKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabbedPaneKhoahoc.addTab("Thông tin", pnlThongtin_pnlKhoahoc);

        pnlDanhsach_pnlKhoahoc.setBackground(new java.awt.Color(255, 255, 255));

        tblListdanhsach_pnlKhoahoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListdanhsach_pnlKhoahoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Khóa Học", "Chuyên Đề", "Thời Lượng", "Học Phí", "Ngày Khai Giảng", "Tạo Bởi", "Ngày Tạo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListdanhsach_pnlKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListdanhsach_pnlKhoahocMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblListdanhsach_pnlKhoahoc);
        if (tblListdanhsach_pnlKhoahoc.getColumnModel().getColumnCount() > 0) {
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(0).setMinWidth(100);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(0).setMaxWidth(200);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(1).setMinWidth(200);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(1).setMaxWidth(400);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(2).setMinWidth(50);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(2).setMaxWidth(150);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(3).setMinWidth(100);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(3).setMaxWidth(200);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(4).setMinWidth(100);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(4).setMaxWidth(200);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(5).setMinWidth(100);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(5).setMaxWidth(200);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(6).setMinWidth(100);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(6).setPreferredWidth(150);
            tblListdanhsach_pnlKhoahoc.getColumnModel().getColumn(6).setMaxWidth(200);
        }

        javax.swing.GroupLayout pnlDanhsach_pnlKhoahocLayout = new javax.swing.GroupLayout(pnlDanhsach_pnlKhoahoc);
        pnlDanhsach_pnlKhoahoc.setLayout(pnlDanhsach_pnlKhoahocLayout);
        pnlDanhsach_pnlKhoahocLayout.setHorizontalGroup(
            pnlDanhsach_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhsach_pnlKhoahocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDanhsach_pnlKhoahocLayout.setVerticalGroup(
            pnlDanhsach_pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
        );

        tabbedPaneKhoahoc.addTab("Danh sách", pnlDanhsach_pnlKhoahoc);

        tabbedPaneKhoahoc.setBackgroundAt(0, java.awt.Color.WHITE);
        tabbedPaneKhoahoc.setBackgroundAt(1, java.awt.Color.WHITE);

        javax.swing.GroupLayout pnlKhoahocLayout = new javax.swing.GroupLayout(pnlKhoahoc);
        pnlKhoahoc.setLayout(pnlKhoahocLayout);
        pnlKhoahocLayout.setHorizontalGroup(
            pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhoahocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneKhoahoc)
                .addContainerGap())
        );
        pnlKhoahocLayout.setVerticalGroup(
            pnlKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhoahocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneKhoahoc, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlNhanvien.setPreferredSize(new java.awt.Dimension(725, 442));

        tabbedPaneNhanvien.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPaneNhanvien.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        tabbedPaneNhanvien.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tabbedPaneNhanvienMouseMoved(evt);
            }
        });

        pnlThongtin_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));

        lblManhanvien_pnlNhanvien.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblManhanvien_pnlNhanvien.setText("Mã Nhân Viên");

        txtManhanvien_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        lblMatkhau_pnlNhanvien.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblMatkhau_pnlNhanvien.setText("Mật Khẩu");

        txtMatkhau_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        lblXacnhanmatkhau_pnlNhanvien.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblXacnhanmatkhau_pnlNhanvien.setText("Xác Nhận Mật Khẩu");

        txtXacnhanmatkhau_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        lblHoten_pnlNhanvien.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblHoten_pnlNhanvien.setText("Họ và Tên");

        txtHoten_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        lblVaitro_pnlNhanvien.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblVaitro_pnlNhanvien.setText("Vai trò");

        btngNhanvien.add(rdoNhanvien_pnlNhanvien);
        rdoNhanvien_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        rdoNhanvien_pnlNhanvien.setSelected(true);
        rdoNhanvien_pnlNhanvien.setText("Nhân viên");

        btngNhanvien.add(rdoTruongphong_pnlNhanvien);
        rdoTruongphong_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        rdoTruongphong_pnlNhanvien.setText("Trưởng phòng");

        btnAdd_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnAdd_pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnAdd_pnlNhanvien.setText("Add");
        btnAdd_pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnAdd_pnlNhanvien.setContentAreaFilled(false);
        btnAdd_pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd_pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd_pnlNhanvien.setOpaque(true);
        btnAdd_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdd_pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdd_pnlNhanvienMouseExited(evt);
            }
        });
        btnAdd_pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd_pnlNhanvienActionPerformed(evt);
            }
        });

        btnDelete_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnDelete_pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnDelete_pnlNhanvien.setText("Delete");
        btnDelete_pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnDelete_pnlNhanvien.setContentAreaFilled(false);
        btnDelete_pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete_pnlNhanvien.setEnabled(false);
        btnDelete_pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete_pnlNhanvien.setOpaque(true);
        btnDelete_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDelete_pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDelete_pnlNhanvienMouseExited(evt);
            }
        });
        btnDelete_pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete_pnlNhanvienActionPerformed(evt);
            }
        });

        btnUpdate_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnUpdate_pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnUpdate_pnlNhanvien.setText("Update");
        btnUpdate_pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnUpdate_pnlNhanvien.setContentAreaFilled(false);
        btnUpdate_pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate_pnlNhanvien.setEnabled(false);
        btnUpdate_pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate_pnlNhanvien.setOpaque(true);
        btnUpdate_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdate_pnlNhanvienMouseExited(evt);
            }
        });
        btnUpdate_pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate_pnlNhanvienActionPerformed(evt);
            }
        });

        btnNew__pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnNew__pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNew__pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnNew__pnlNhanvien.setText("New");
        btnNew__pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNew__pnlNhanvien.setContentAreaFilled(false);
        btnNew__pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNew__pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew__pnlNhanvien.setOpaque(true);
        btnNew__pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNew__pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNew__pnlNhanvienMouseExited(evt);
            }
        });
        btnNew__pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNew__pnlNhanvienActionPerformed(evt);
            }
        });

        btnFirst_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnFirst_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnFirst_pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnFirst_pnlNhanvien.setText("|<");
        btnFirst_pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnFirst_pnlNhanvien.setContentAreaFilled(false);
        btnFirst_pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirst_pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFirst_pnlNhanvien.setOpaque(true);
        btnFirst_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFirst_pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFirst_pnlNhanvienMouseExited(evt);
            }
        });
        btnFirst_pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst_pnlNhanvienActionPerformed(evt);
            }
        });

        btnPrevious_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnPrevious_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnPrevious_pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnPrevious_pnlNhanvien.setText("<<");
        btnPrevious_pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnPrevious_pnlNhanvien.setContentAreaFilled(false);
        btnPrevious_pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrevious_pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrevious_pnlNhanvien.setOpaque(true);
        btnPrevious_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPrevious_pnlNhanvienMouseExited(evt);
            }
        });
        btnPrevious_pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevious_pnlNhanvienActionPerformed(evt);
            }
        });

        btnNext_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnNext_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnNext_pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnNext_pnlNhanvien.setText(">>");
        btnNext_pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnNext_pnlNhanvien.setContentAreaFilled(false);
        btnNext_pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNext_pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNext_pnlNhanvien.setOpaque(true);
        btnNext_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNext_pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNext_pnlNhanvienMouseExited(evt);
            }
        });
        btnNext_pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext_pnlNhanvienActionPerformed(evt);
            }
        });

        btnLast_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        btnLast_pnlNhanvien.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnLast_pnlNhanvien.setForeground(new java.awt.Color(6, 43, 142));
        btnLast_pnlNhanvien.setText(">|");
        btnLast_pnlNhanvien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnLast_pnlNhanvien.setContentAreaFilled(false);
        btnLast_pnlNhanvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLast_pnlNhanvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLast_pnlNhanvien.setOpaque(true);
        btnLast_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLast_pnlNhanvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLast_pnlNhanvienMouseExited(evt);
            }
        });
        btnLast_pnlNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast_pnlNhanvienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThongtin_pnlNhanvienLayout = new javax.swing.GroupLayout(pnlThongtin_pnlNhanvien);
        pnlThongtin_pnlNhanvien.setLayout(pnlThongtin_pnlNhanvienLayout);
        pnlThongtin_pnlNhanvienLayout.setHorizontalGroup(
            pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtin_pnlNhanvienLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMatkhau_pnlNhanvien, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblXacnhanmatkhau_pnlNhanvien, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHoten_pnlNhanvien, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblVaitro_pnlNhanvien, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblManhanvien_pnlNhanvien, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtManhanvien_pnlNhanvien)
                    .addComponent(txtMatkhau_pnlNhanvien)
                    .addComponent(txtXacnhanmatkhau_pnlNhanvien)
                    .addComponent(txtHoten_pnlNhanvien)
                    .addGroup(pnlThongtin_pnlNhanvienLayout.createSequentialGroup()
                        .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlThongtin_pnlNhanvienLayout.createSequentialGroup()
                                .addComponent(btnAdd_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNew__pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlThongtin_pnlNhanvienLayout.createSequentialGroup()
                                .addComponent(btnFirst_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPrevious_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNext_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLast_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlThongtin_pnlNhanvienLayout.createSequentialGroup()
                                .addComponent(rdoNhanvien_pnlNhanvien)
                                .addGap(18, 18, 18)
                                .addComponent(rdoTruongphong_pnlNhanvien)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlThongtin_pnlNhanvienLayout.setVerticalGroup(
            pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtin_pnlNhanvienLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblManhanvien_pnlNhanvien)
                    .addComponent(txtManhanvien_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtMatkhau_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMatkhau_pnlNhanvien))
                .addGap(20, 20, 20)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblXacnhanmatkhau_pnlNhanvien)
                    .addComponent(txtXacnhanmatkhau_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHoten_pnlNhanvien)
                    .addComponent(txtHoten_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblVaitro_pnlNhanvien)
                    .addComponent(rdoNhanvien_pnlNhanvien)
                    .addComponent(rdoTruongphong_pnlNhanvien))
                .addGap(0, 0, 0)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrevious_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pnlThongtin_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAdd_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate_pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew__pnlNhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabbedPaneNhanvien.addTab("Thông tin", pnlThongtin_pnlNhanvien);

        pnlDanhsach_pnlNhanvien.setBackground(new java.awt.Color(255, 255, 255));

        tblListdanhsach_pnlNhanvien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListdanhsach_pnlNhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Nhân Viên", "Mật Khẩu", "Họ Tên", "Vai Trò"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListdanhsach_pnlNhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListdanhsach_pnlNhanvienMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(tblListdanhsach_pnlNhanvien);
        if (tblListdanhsach_pnlNhanvien.getColumnModel().getColumnCount() > 0) {
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(0).setMinWidth(200);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(0).setPreferredWidth(250);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(0).setMaxWidth(300);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(1).setMinWidth(200);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(1).setPreferredWidth(250);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(1).setMaxWidth(300);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(2).setMinWidth(300);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(2).setPreferredWidth(350);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(3).setMinWidth(100);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblListdanhsach_pnlNhanvien.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        javax.swing.GroupLayout pnlDanhsach_pnlNhanvienLayout = new javax.swing.GroupLayout(pnlDanhsach_pnlNhanvien);
        pnlDanhsach_pnlNhanvien.setLayout(pnlDanhsach_pnlNhanvienLayout);
        pnlDanhsach_pnlNhanvienLayout.setHorizontalGroup(
            pnlDanhsach_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhsach_pnlNhanvienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDanhsach_pnlNhanvienLayout.setVerticalGroup(
            pnlDanhsach_pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhsach_pnlNhanvienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneNhanvien.addTab("Danh sách", pnlDanhsach_pnlNhanvien);

        tabbedPaneNguoihoc.setBackgroundAt(0, java.awt.Color.WHITE);
        tabbedPaneNguoihoc.setBackgroundAt(1, java.awt.Color.WHITE);

        javax.swing.GroupLayout pnlNhanvienLayout = new javax.swing.GroupLayout(pnlNhanvien);
        pnlNhanvien.setLayout(pnlNhanvienLayout);
        pnlNhanvienLayout.setHorizontalGroup(
            pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNhanvienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneNhanvien, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlNhanvienLayout.setVerticalGroup(
            pnlNhanvienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNhanvienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneNhanvien)
                .addContainerGap())
        );

        pnlThongke.setPreferredSize(new java.awt.Dimension(725, 442));

        tabbedPaneThongke.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPaneThongke.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        tabbedPaneThongke.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tabbedPaneThongkeMouseMoved(evt);
            }
        });

        pnlBangdiem_pnlThongke.setBackground(new java.awt.Color(255, 255, 255));

        cboLonbe_pnlThongke.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboLonbe_pnlThongke.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A-Z", "Z-A" }));
        cboLonbe_pnlThongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLonbe_pnlThongkeActionPerformed(evt);
            }
        });

        tblListbangdien_pnlThongke.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblListbangdien_pnlThongke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Người Học", "Họ và Tên", "Điểm", "Xếp Loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tblListbangdien_pnlThongke);
        if (tblListbangdien_pnlThongke.getColumnModel().getColumnCount() > 0) {
            tblListbangdien_pnlThongke.getColumnModel().getColumn(0).setMinWidth(100);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(0).setMaxWidth(200);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(1).setMinWidth(150);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(2).setMinWidth(100);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(2).setMaxWidth(200);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(3).setMinWidth(100);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblListbangdien_pnlThongke.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        cboKhoahocj_pnlThongke.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboKhoahocj_pnlThongke.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboKhoahocj_pnlThongkeItemStateChanged(evt);
            }
        });

        cboSapxep_pnlThongke.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboSapxep_pnlThongke.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã", "Tên", "Điểm", "Xếp Loại" }));
        cboSapxep_pnlThongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSapxep_pnlThongkeActionPerformed(evt);
            }
        });

        lblKhoahoc_pnlThongke.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblKhoahoc_pnlThongke.setText("Khóa Học");

        javax.swing.GroupLayout pnlBangdiem_pnlThongkeLayout = new javax.swing.GroupLayout(pnlBangdiem_pnlThongke);
        pnlBangdiem_pnlThongke.setLayout(pnlBangdiem_pnlThongkeLayout);
        pnlBangdiem_pnlThongkeLayout.setHorizontalGroup(
            pnlBangdiem_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBangdiem_pnlThongkeLayout.createSequentialGroup()
                .addGroup(pnlBangdiem_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBangdiem_pnlThongkeLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(cboSapxep_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboLonbe_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlBangdiem_pnlThongkeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane10)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBangdiem_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblKhoahoc_pnlThongke)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cboKhoahocj_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBangdiem_pnlThongkeLayout.setVerticalGroup(
            pnlBangdiem_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBangdiem_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBangdiem_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboKhoahocj_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKhoahoc_pnlThongke))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBangdiem_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboSapxep_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLonbe_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabbedPaneThongke.addTab("Bảng Điểm", pnlBangdiem_pnlThongke);

        pnlNguoihoc_pnlThongke.setBackground(new java.awt.Color(255, 255, 255));

        tblListnguoihoc_pnlThongke.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblListnguoihoc_pnlThongke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Năm", "Số Người Học", "Đăng Ký Sớm Nhất", "Đăng Ký Trễ Nhất"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tblListnguoihoc_pnlThongke);
        if (tblListnguoihoc_pnlThongke.getColumnModel().getColumnCount() > 0) {
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(0).setMinWidth(100);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(0).setMaxWidth(200);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(1).setMinWidth(100);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(1).setMaxWidth(200);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(2).setMinWidth(100);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(3).setMinWidth(100);
            tblListnguoihoc_pnlThongke.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        javax.swing.GroupLayout pnlNguoihoc_pnlThongkeLayout = new javax.swing.GroupLayout(pnlNguoihoc_pnlThongke);
        pnlNguoihoc_pnlThongke.setLayout(pnlNguoihoc_pnlThongkeLayout);
        pnlNguoihoc_pnlThongkeLayout.setHorizontalGroup(
            pnlNguoihoc_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoihoc_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlNguoihoc_pnlThongkeLayout.setVerticalGroup(
            pnlNguoihoc_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoihoc_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneThongke.addTab("Người Học", pnlNguoihoc_pnlThongke);

        tblListdiemchuyende_pnlThongke.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblListdiemchuyende_pnlThongke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Chuyên Đề", "Số Lượng Học Viên", "Điểm Thấp Nhất", "Điểm Cao Nhất", "Điểm Trung Bình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(tblListdiemchuyende_pnlThongke);
        if (tblListdiemchuyende_pnlThongke.getColumnModel().getColumnCount() > 0) {
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(0).setMinWidth(150);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(0).setPreferredWidth(200);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(1).setMinWidth(150);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(1).setMaxWidth(250);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(2).setMinWidth(100);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(2).setMaxWidth(200);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(3).setMinWidth(100);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(3).setMaxWidth(200);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(4).setMinWidth(100);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblListdiemchuyende_pnlThongke.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        javax.swing.GroupLayout pnlDiemchuyende_pnlThongkeLayout = new javax.swing.GroupLayout(pnlDiemchuyende_pnlThongke);
        pnlDiemchuyende_pnlThongke.setLayout(pnlDiemchuyende_pnlThongkeLayout);
        pnlDiemchuyende_pnlThongkeLayout.setHorizontalGroup(
            pnlDiemchuyende_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiemchuyende_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDiemchuyende_pnlThongkeLayout.setVerticalGroup(
            pnlDiemchuyende_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDiemchuyende_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneThongke.addTab("Điểm Chuyên Đề", pnlDiemchuyende_pnlThongke);

        tblListdoanhthu_pnlThongke.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblListdoanhthu_pnlThongke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Chuyên Đề ", "Số Khóa Học", "Số Học Viên", "Doanh Thu", "Học Phí Thấp Nhất", "Học Phí Cao Nhất", "Học Phí Trung Bình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane14.setViewportView(tblListdoanhthu_pnlThongke);
        if (tblListdoanhthu_pnlThongke.getColumnModel().getColumnCount() > 0) {
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(0).setMinWidth(150);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(0).setPreferredWidth(200);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(1).setMinWidth(150);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(2).setMinWidth(150);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(2).setMaxWidth(250);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(3).setMinWidth(150);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(3).setPreferredWidth(250);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(3).setMaxWidth(250);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(4).setMinWidth(150);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(4).setMaxWidth(250);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(5).setMinWidth(150);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(5).setPreferredWidth(200);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(5).setMaxWidth(250);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(6).setMinWidth(150);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(6).setPreferredWidth(200);
            tblListdoanhthu_pnlThongke.getColumnModel().getColumn(6).setMaxWidth(250);
        }

        cboNam_pnlThongke.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cboNam_pnlThongke.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNam_pnlThongkeItemStateChanged(evt);
            }
        });

        lblNam_pnlThongke.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        lblNam_pnlThongke.setText("Năm");

        javax.swing.GroupLayout pnlDoanhthu_pnlThongkeLayout = new javax.swing.GroupLayout(pnlDoanhthu_pnlThongke);
        pnlDoanhthu_pnlThongke.setLayout(pnlDoanhthu_pnlThongkeLayout);
        pnlDoanhthu_pnlThongkeLayout.setHorizontalGroup(
            pnlDoanhthu_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDoanhthu_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDoanhthu_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDoanhthu_pnlThongkeLayout.createSequentialGroup()
                        .addComponent(lblNam_pnlThongke)
                        .addGap(18, 18, 18)
                        .addComponent(cboNam_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDoanhthu_pnlThongkeLayout.setVerticalGroup(
            pnlDoanhthu_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDoanhthu_pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDoanhthu_pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboNam_pnlThongke, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNam_pnlThongke))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneThongke.addTab("Doanh Thu", pnlDoanhthu_pnlThongke);

        tabbedPaneNguoihoc.setBackgroundAt(0, java.awt.Color.WHITE);
        tabbedPaneNguoihoc.setBackgroundAt(1, java.awt.Color.WHITE);

        javax.swing.GroupLayout pnlThongkeLayout = new javax.swing.GroupLayout(pnlThongke);
        pnlThongke.setLayout(pnlThongkeLayout);
        pnlThongkeLayout.setHorizontalGroup(
            pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneThongke)
                .addContainerGap())
        );
        pnlThongkeLayout.setVerticalGroup(
            pnlThongkeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongkeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneThongke)
                .addContainerGap())
        );

        DialogGioithieu.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        DialogGioithieu.setTitle("Giới Thiệu Sản Phẩm");
        DialogGioithieu.setBackground(new java.awt.Color(255, 255, 255));
        DialogGioithieu.setResizable(false);
        DialogGioithieu.setSize(new java.awt.Dimension(850, 400));

        lblLogo_Dialoggioithieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/icon/icon_logo_fpt.png"))); // NOI18N
        lblLogo_Dialoggioithieu.setOpaque(true);

        lblTieuDe_Dialoggioithieu.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblTieuDe_Dialoggioithieu.setText("GIỚI THIỆU SẢN PHẨM");
        lblTieuDe_Dialoggioithieu.setOpaque(true);

        jScrollPane7.setBorder(null);

        txtNoidung_Dialoggioithieu.setEditable(false);
        txtNoidung_Dialoggioithieu.setBackground(new java.awt.Color(240, 240, 240));
        txtNoidung_Dialoggioithieu.setColumns(20);
        txtNoidung_Dialoggioithieu.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txtNoidung_Dialoggioithieu.setLineWrap(true);
        txtNoidung_Dialoggioithieu.setRows(5);
        txtNoidung_Dialoggioithieu.setText("Polypro là dự án mẫu. Mục tiêu chính là huấn luyện sinh viên qui trình thực hiện dự án. \nMục tiêu của dự án này là để rèn luyện kỹ năng IO(CDIO) tức không yêu cầu sinh viên phải thu thập phân tích mà chỉ thực hiện và vận hành một phần mềm chuẩn bị cho các dự án sau này . Các kỹ năng CD (trong CDIO) sẽ được huấn luyện ở dự án 1 và dự án 2.\n \nYêu cầu về môi trường.\n1. Hệ điều hành bất kỳ.\n2. JDK 1.8 tờ lên SOL Server 2008 trở lên\n3. SQL Server 2008 trở lên");
        txtNoidung_Dialoggioithieu.setWrapStyleWord(true);
        txtNoidung_Dialoggioithieu.setBorder(null);
        txtNoidung_Dialoggioithieu.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNoidung_Dialoggioithieu.setEnabled(false);
        txtNoidung_Dialoggioithieu.setMargin(new java.awt.Insets(20, 20, 20, 20));
        txtNoidung_Dialoggioithieu.setSelectionColor(new java.awt.Color(255, 255, 255));
        jScrollPane7.setViewportView(txtNoidung_Dialoggioithieu);

        javax.swing.GroupLayout DialogGioithieuLayout = new javax.swing.GroupLayout(DialogGioithieu.getContentPane());
        DialogGioithieu.getContentPane().setLayout(DialogGioithieuLayout);
        DialogGioithieuLayout.setHorizontalGroup(
            DialogGioithieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogGioithieuLayout.createSequentialGroup()
                .addComponent(lblLogo_Dialoggioithieu, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DialogGioithieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DialogGioithieuLayout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(lblTieuDe_Dialoggioithieu, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DialogGioithieuLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        DialogGioithieuLayout.setVerticalGroup(
            DialogGioithieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogGioithieuLayout.createSequentialGroup()
                .addComponent(lblLogo_Dialoggioithieu, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(DialogGioithieuLayout.createSequentialGroup()
                .addComponent(lblTieuDe_Dialoggioithieu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lập Trình City - Education Managerment System");
        setIconImage(java.awt.Toolkit.getDefaultToolkit().createImage(getClass().getResource("/poly/com/icon/favicon.png")));
        setLocation(new java.awt.Point(-10, 0));

        pnlContainer.setBackground(new java.awt.Color(255, 255, 255));

        pnlLeft.setOpaque(false);
        pnlLeft.setLayout(new java.awt.GridLayout(4, 1));

        lblChuyende.setBackground(new java.awt.Color(0, 181, 204));
        lblChuyende.setFont(new java.awt.Font("Roboto Slab SemiBold", 0, 14)); // NOI18N
        lblChuyende.setForeground(new java.awt.Color(255, 255, 255));
        lblChuyende.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChuyende.setText("Chuyên Đề");
        lblChuyende.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        lblChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblChuyende.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblChuyende.setOpaque(true);
        lblChuyende.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChuyendeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblChuyendeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblChuyendeMouseExited(evt);
            }
        });
        pnlLeft.add(lblChuyende);

        lblHocvien.setBackground(new java.awt.Color(0, 181, 204));
        lblHocvien.setFont(new java.awt.Font("Roboto Slab SemiBold", 0, 14)); // NOI18N
        lblHocvien.setForeground(new java.awt.Color(255, 255, 255));
        lblHocvien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHocvien.setText("Học VIên");
        lblHocvien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        lblHocvien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHocvien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHocvien.setOpaque(true);
        lblHocvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHocvienMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblHocvienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblHocvienMouseExited(evt);
            }
        });
        pnlLeft.add(lblHocvien);

        lblNguoihoc.setBackground(new java.awt.Color(0, 181, 204));
        lblNguoihoc.setFont(new java.awt.Font("Roboto Slab SemiBold", 0, 14)); // NOI18N
        lblNguoihoc.setForeground(new java.awt.Color(255, 255, 255));
        lblNguoihoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNguoihoc.setText("Người Học");
        lblNguoihoc.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        lblNguoihoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblNguoihoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblNguoihoc.setOpaque(true);
        lblNguoihoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNguoihocMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblNguoihocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblNguoihocMouseExited(evt);
            }
        });
        pnlLeft.add(lblNguoihoc);

        lblKhoahoc.setBackground(new java.awt.Color(0, 181, 204));
        lblKhoahoc.setFont(new java.awt.Font("Roboto Slab SemiBold", 0, 14)); // NOI18N
        lblKhoahoc.setForeground(new java.awt.Color(255, 255, 255));
        lblKhoahoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblKhoahoc.setText("Khóa Học");
        lblKhoahoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblKhoahoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblKhoahoc.setOpaque(true);
        lblKhoahoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblKhoahocMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblKhoahocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblKhoahocMouseExited(evt);
            }
        });
        pnlLeft.add(lblKhoahoc);

        pnlRight.setBackground(new java.awt.Color(255, 255, 255));
        pnlRight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 181, 204)));

        pnlloader.setBackground(new java.awt.Color(255, 255, 255));

        lblLoader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/icon/icon_loader.gif"))); // NOI18N
        lblLoader.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlloaderLayout = new javax.swing.GroupLayout(pnlloader);
        pnlloader.setLayout(pnlloaderLayout);
        pnlloaderLayout.setHorizontalGroup(
            pnlloaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlloaderLayout.createSequentialGroup()
                .addComponent(lblLoader, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlloaderLayout.setVerticalGroup(
            pnlloaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLoader, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlRightLayout = new javax.swing.GroupLayout(pnlRight);
        pnlRight.setLayout(pnlRightLayout);
        pnlRightLayout.setHorizontalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlloader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlRightLayout.setVerticalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlloader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnLogout.setBackground(new java.awt.Color(255, 255, 255));
        btnLogout.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(6, 43, 142));
        btnLogout.setText("Logout");
        btnLogout.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(6, 43, 142)));
        btnLogout.setContentAreaFilled(false);
        btnLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLogout.setOpaque(true);
        btnLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLogoutMouseExited(evt);
            }
        });
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlContainerLayout = new javax.swing.GroupLayout(pnlContainer);
        pnlContainer.setLayout(pnlContainerLayout);
        pnlContainerLayout.setHorizontalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlContainerLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlContainerLayout.setVerticalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlContainerLayout.createSequentialGroup()
                        .addComponent(pnlLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        if (Auth.isLogin()) {
            btnLogout.setEnabled(true);
        } else {
            btnLogout.setEnabled(false);
        }

        getContentPane().add(pnlContainer, java.awt.BorderLayout.CENTER);

        pnlTrangthai.setLayout(new java.awt.BorderLayout());

        lblHequanlydaotao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/icon/daotao.gif"))); // NOI18N
        lblHequanlydaotao.setText("Hệ Quản Lý Đào Tạo");
        pnlTrangthai.add(lblHequanlydaotao, java.awt.BorderLayout.CENTER);

        lblTime.setFont(new java.awt.Font("Segoe UI Variable", 0, 18)); // NOI18N
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/icon/icon_clock.gif"))); // NOI18N
        lblTime.setPreferredSize(new java.awt.Dimension(200, 32));
        pnlTrangthai.add(lblTime, java.awt.BorderLayout.EAST);

        getContentPane().add(pnlTrangthai, java.awt.BorderLayout.SOUTH);

        mnuHeThong.setText("Hệ Thống");

        mniDangnhap.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDangnhap.setBackground(new java.awt.Color(255, 255, 255));
        mniDangnhap.setText("Đăng Nhập");
        mniDangnhap.setOpaque(true);
        mniDangnhap.setPreferredSize(new java.awt.Dimension(260, 24));
        mniDangnhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDangnhapActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDangnhap);
        if(Auth.isLogin()){
            mnuHeThong.remove(mniDangnhap);
        }else{
            mnuHeThong.add(mniDangnhap);
        }

        mnuExport.setMnemonic('m');
        mnuExport.setText("Export Excel");

        mniEEHocvien.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniEEHocvien.setText("Học Viên");
        mniEEHocvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEEHocvienActionPerformed(evt);
            }
        });
        mnuExport.add(mniEEHocvien);

        mniEEChuyende.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniEEChuyende.setText("Chuyên Đề");
        mniEEChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEEChuyendeActionPerformed(evt);
            }
        });
        mnuExport.add(mniEEChuyende);

        mniEENguoihoc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniEENguoihoc.setText("Người Học");
        mniEENguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEENguoihocActionPerformed(evt);
            }
        });
        mnuExport.add(mniEENguoihoc);

        mniEEKhoahoc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniEEKhoahoc.setText("Khóa Học");
        mniEEKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEEKhoahocActionPerformed(evt);
            }
        });
        mnuExport.add(mniEEKhoahoc);

        mniEEThongke.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniEEThongke.setText("Thống Kê");
        mniEEThongke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEEThongkeActionPerformed(evt);
            }
        });
        mnuExport.add(mniEEThongke);

        mnuHeThong.add(mnuExport);

        mniQR.setText("Tạo QR Code");
        mniQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniQRActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniQR);

        mniDangxuat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDangxuat.setBackground(new java.awt.Color(255, 255, 255));
        mniDangxuat.setText("Đăng xuất");
        mniDangxuat.setOpaque(true);
        mniDangxuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDangxuatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDangxuat);
        if (Auth.isLogin()) {
            mnuHeThong.add(mniDangxuat);
        } else {
            mnuHeThong.remove(mniDangxuat);
        }
        mnuHeThong.add(jSeparator1);

        mniDoimatkhau.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDoimatkhau.setBackground(new java.awt.Color(255, 255, 255));
        mniDoimatkhau.setText("Đổi mật khẩu");
        mniDoimatkhau.setOpaque(true);
        mniDoimatkhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDoimatkhauActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDoimatkhau);

        jSeparator2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mnuHeThong.add(jSeparator2);

        mniThoa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, 0));
        mniThoa.setBackground(new java.awt.Color(255, 255, 255));
        mniThoa.setText("Thoát");
        mniThoa.setOpaque(true);
        mniThoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThoaActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniThoa);

        MenuBar.add(mnuHeThong);

        mnuQuanLy.setText("Quản Lý");

        mniChuyende.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniChuyende.setBackground(new java.awt.Color(255, 255, 255));
        mniChuyende.setText("Chuyên đề");
        mniChuyende.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mniChuyende.setOpaque(true);
        mniChuyende.setPreferredSize(new java.awt.Dimension(260, 24));
        mniChuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniChuyendeActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniChuyende);

        mniKhoahoc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniKhoahoc.setBackground(new java.awt.Color(255, 255, 255));
        mniKhoahoc.setText("Khóa học");
        mniKhoahoc.setOpaque(true);
        mniKhoahoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKhoahocActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniKhoahoc);

        mniNguoihoc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniNguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        mniNguoihoc.setText("Người học");
        mniNguoihoc.setOpaque(true);
        mniNguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNguoihocActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniNguoihoc);

        mniHocvien.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniHocvien.setBackground(new java.awt.Color(255, 255, 255));
        mniHocvien.setText("Học viên");
        mniHocvien.setOpaque(true);
        mniHocvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHocvienActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniHocvien);
        mnuQuanLy.add(jSeparator3);

        mniNhanvien.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniNhanvien.setBackground(new java.awt.Color(255, 255, 255));
        mniNhanvien.setText("Nhân viên");
        mniNhanvien.setOpaque(true);
        mniNhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNhanvienActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniNhanvien);

        MenuBar.add(mnuQuanLy);

        mnuThongKe.setText("Thống Kê");

        mniBangdiem.setBackground(new java.awt.Color(255, 255, 255));
        mniBangdiem.setText("Bảng điểm");
        mniBangdiem.setOpaque(true);
        mniBangdiem.setPreferredSize(new java.awt.Dimension(260, 24));
        mniBangdiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniBangdiemActionPerformed(evt);
            }
        });
        mnuThongKe.add(mniBangdiem);
        mnuThongKe.add(jSeparator4);

        mniLuongnguoihoc.setBackground(new java.awt.Color(255, 255, 255));
        mniLuongnguoihoc.setText("Lượng người học");
        mniLuongnguoihoc.setOpaque(true);
        mniLuongnguoihoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLuongnguoihocActionPerformed(evt);
            }
        });
        mnuThongKe.add(mniLuongnguoihoc);

        mniDiemchuyende.setBackground(new java.awt.Color(255, 255, 255));
        mniDiemchuyende.setText("Điểm chuyên đề");
        mniDiemchuyende.setOpaque(true);
        mniDiemchuyende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDiemchuyendeActionPerformed(evt);
            }
        });
        mnuThongKe.add(mniDiemchuyende);
        mnuThongKe.add(jSeparator5);

        mniDoanhthu.setBackground(new java.awt.Color(255, 255, 255));
        mniDoanhthu.setText("Doanh thu");
        mniDoanhthu.setOpaque(true);
        mniDoanhthu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDoanhthuActionPerformed(evt);
            }
        });
        mnuThongKe.add(mniDoanhthu);

        MenuBar.add(mnuThongKe);

        mnuTroGiup.setText("Trợ Giúp");

        mniHuongdan.setBackground(new java.awt.Color(255, 255, 255));
        mniHuongdan.setText("Hướng dẫn sử dụng");
        mniHuongdan.setOpaque(true);
        mniHuongdan.setPreferredSize(new java.awt.Dimension(260, 24));
        mniHuongdan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHuongdanActionPerformed(evt);
            }
        });
        mnuTroGiup.add(mniHuongdan);
        mnuTroGiup.add(jSeparator6);

        mniGioithieu.setBackground(new java.awt.Color(255, 255, 255));
        mniGioithieu.setText("Giới thiệu sản phẩm");
        mniGioithieu.setOpaque(true);
        mniGioithieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniGioithieuActionPerformed(evt);
            }
        });
        mnuTroGiup.add(mniGioithieu);

        MenuBar.add(mnuTroGiup);

        setJMenuBar(MenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblKhoahocMouseExited
        // TODO add your handling code here:
        if (this.mindMouseClick && this.mindIndexClick != 4) {
            lblKhoahoc.setBackground(new Color(0, 181, 204));
            try {
                java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_khoahoc.gif"));
                lblKhoahoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_lblKhoahocMouseExited

    private void lblKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblKhoahocMouseEntered
        // TODO add your handling code here:
        this.mindMouseClick = true;
        lblKhoahoc.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_khoahoc.gif")));
        lblKhoahoc.setBackground(new Color(39, 130, 216));
    }//GEN-LAST:event_lblKhoahocMouseEntered

    private void lblKhoahocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblKhoahocMouseClicked
        // TODO add your handling code here:
        openKhoahoc();
    }//GEN-LAST:event_lblKhoahocMouseClicked

    private void lblNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNguoihocMouseExited
        // TODO add your handling code here:
        if (this.mindMouseClick && this.mindIndexClick != 3) {
            lblNguoihoc.setBackground(new Color(0, 181, 204));
            try {
                java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_nguoihoc.gif"));
                lblNguoihoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_lblNguoihocMouseExited

    private void lblNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNguoihocMouseEntered
        // TODO add your handling code here:
        this.mindMouseClick = true;
        lblNguoihoc.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_nguoihoc.gif")));
        lblNguoihoc.setBackground(new Color(39, 130, 216));
    }//GEN-LAST:event_lblNguoihocMouseEntered

    private void lblNguoihocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNguoihocMouseClicked
        // TODO add your handling code here:
        openNguoihoc();
    }//GEN-LAST:event_lblNguoihocMouseClicked

    private void lblHocvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHocvienMouseExited
        // TODO add your handling code here:
        if (this.mindMouseClick && this.mindIndexClick != 2) {
            lblHocvien.setBackground(new Color(0, 181, 204));
            try {
                java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_hocvien.gif"));
                lblHocvien.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_lblHocvienMouseExited

    private void lblHocvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHocvienMouseEntered
        // TODO add your handling code here:
        this.mindMouseClick = true;
        lblHocvien.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_hocvien.gif")));
        lblHocvien.setBackground(new Color(39, 130, 216));
    }//GEN-LAST:event_lblHocvienMouseEntered

    private void lblHocvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHocvienMouseClicked
        // TODO add your handling code here:
        openHocvien();
    }//GEN-LAST:event_lblHocvienMouseClicked

    private void lblChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChuyendeMouseExited
        // TODO add your handling code here:
        if (this.mindMouseClick && this.mindIndexClick != 1) {
            lblChuyende.setBackground(new Color(0, 181, 204));
            try {
                java.awt.Image img = ResizeImage.buff(getClass().getResource("/poly/com/icon/icon_chuyende.gif"));
                lblChuyende.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_lblChuyendeMouseExited

    private void lblChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChuyendeMouseEntered
        // TODO add your handling code here:
        this.mindMouseClick = true;
        lblChuyende.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_chuyende.gif")));
        lblChuyende.setBackground(new Color(39, 130, 216));
    }//GEN-LAST:event_lblChuyendeMouseEntered

    private void lblChuyendeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChuyendeMouseClicked
        // TODO add your handling code here:
        openChuyende();
    }//GEN-LAST:event_lblChuyendeMouseClicked

    private void btnLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutMouseExited
        // TODO add your handling code here:
        if (btnLogout.isEnabled()) {
            mouseExitedColor(btnLogout);
        }
    }//GEN-LAST:event_btnLogoutMouseExited

    private void btnLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutMouseEntered
        // TODO add your handling code here:
        if (btnLogout.isEnabled()) {
            mouseEnteredColor(btnLogout);
        }
    }//GEN-LAST:event_btnLogoutMouseEntered

    private void tabbedPaneChuyendeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneChuyendeMouseMoved
        // TODO add your handling code here:
        adjustCursor(tabbedPaneChuyende, evt);
    }//GEN-LAST:event_tabbedPaneChuyendeMouseMoved

    private void btnImage_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImage_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnImage_pnlChuyende);
    }//GEN-LAST:event_btnImage_pnlChuyendeMouseEntered

    private void btnImage_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImage_pnlChuyendeMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnImage_pnlChuyende);
    }//GEN-LAST:event_btnImage_pnlChuyendeMouseExited

    private void txtMachuyende_pnlChuyendeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMachuyende_pnlChuyendeFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtMachuyende_pnlChuyende);
    }//GEN-LAST:event_txtMachuyende_pnlChuyendeFocusGained

    private void txtMachuyende_pnlChuyendeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMachuyende_pnlChuyendeFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtMachuyende_pnlChuyende);
    }//GEN-LAST:event_txtMachuyende_pnlChuyendeFocusLost

    private void txtTenchuyende_pnlChuyendeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenchuyende_pnlChuyendeFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtTenchuyende_pnlChuyende);
    }//GEN-LAST:event_txtTenchuyende_pnlChuyendeFocusGained

    private void txtTenchuyende_pnlChuyendeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenchuyende_pnlChuyendeFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtTenchuyende_pnlChuyende);
    }//GEN-LAST:event_txtTenchuyende_pnlChuyendeFocusLost

    private void txtThoiluong_pnlChuyendeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtThoiluong_pnlChuyendeFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtThoiluong_pnlChuyende);
    }//GEN-LAST:event_txtThoiluong_pnlChuyendeFocusGained

    private void txtThoiluong_pnlChuyendeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtThoiluong_pnlChuyendeFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtThoiluong_pnlChuyende);
    }//GEN-LAST:event_txtThoiluong_pnlChuyendeFocusLost

    private void txtHocphi_pnlChuyendeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHocphi_pnlChuyendeFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtHocphi_pnlChuyende);
    }//GEN-LAST:event_txtHocphi_pnlChuyendeFocusGained

    private void txtHocphi_pnlChuyendeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHocphi_pnlChuyendeFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtHocphi_pnlChuyende);
    }//GEN-LAST:event_txtHocphi_pnlChuyendeFocusLost

    private void txtMota_pnlChuyendeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMota_pnlChuyendeFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtMota_pnlChuyende);
    }//GEN-LAST:event_txtMota_pnlChuyendeFocusGained

    private void txtMota_pnlChuyendeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMota_pnlChuyendeFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtMota_pnlChuyende);
    }//GEN-LAST:event_txtMota_pnlChuyendeFocusLost

    private void btnAdd_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnAdd_pnlChuyende);
    }//GEN-LAST:event_btnAdd_pnlChuyendeMouseEntered

    private void btnAdd_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlChuyendeMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnAdd_pnlChuyende);
    }//GEN-LAST:event_btnAdd_pnlChuyendeMouseExited

    private void btnDelete_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        if (btnDelete_pnlChuyende.isEnabled()) {
            mouseEnteredColor(btnDelete_pnlChuyende);
        }
    }//GEN-LAST:event_btnDelete_pnlChuyendeMouseEntered

    private void btnDelete_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlChuyendeMouseExited
        // TODO add your handling code here:
        if (btnDelete_pnlChuyende.isEnabled()) {
            mouseExitedColor(btnDelete_pnlChuyende);
        }
    }//GEN-LAST:event_btnDelete_pnlChuyendeMouseExited

    private void btnUpdate_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        if (btnUpdate_pnlChuyende.isEnabled()) {
            mouseEnteredColor(btnUpdate_pnlChuyende);
        }
    }//GEN-LAST:event_btnUpdate_pnlChuyendeMouseEntered

    private void btnUpdate_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlChuyendeMouseExited
        // TODO add your handling code here:
        if (btnUpdate_pnlChuyende.isEnabled()) {
            mouseExitedColor(btnUpdate_pnlChuyende);
        }
    }//GEN-LAST:event_btnUpdate_pnlChuyendeMouseExited

    private void btnNew_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNew_pnlChuyende);
    }//GEN-LAST:event_btnNew_pnlChuyendeMouseEntered

    private void btnNew_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew_pnlChuyendeMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNew_pnlChuyende);
    }//GEN-LAST:event_btnNew_pnlChuyendeMouseExited

    private void btnFirst_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnFirst_pnlChuyende);
    }//GEN-LAST:event_btnFirst_pnlChuyendeMouseEntered

    private void btnFirst_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlChuyendeMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnFirst_pnlChuyende);
    }//GEN-LAST:event_btnFirst_pnlChuyendeMouseExited

    private void btnPrevious_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnPrevious_pnlChuyende);
    }//GEN-LAST:event_btnPrevious_pnlChuyendeMouseEntered

    private void btnPrevious_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlChuyendeMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnPrevious_pnlChuyende);
    }//GEN-LAST:event_btnPrevious_pnlChuyendeMouseExited

    private void btnNext_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNext_pnlChuyende);
    }//GEN-LAST:event_btnNext_pnlChuyendeMouseEntered

    private void btnNext_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlChuyendeMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNext_pnlChuyende);
    }//GEN-LAST:event_btnNext_pnlChuyendeMouseExited

    private void btnLast_pnlChuyendeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlChuyendeMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnLast_pnlChuyende);
    }//GEN-LAST:event_btnLast_pnlChuyendeMouseEntered

    private void btnLast_pnlChuyendeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlChuyendeMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnLast_pnlChuyende);
    }//GEN-LAST:event_btnLast_pnlChuyendeMouseExited

    private void btnRemove_pnlHocvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemove_pnlHocvienMouseEntered
        // TODO add your handling code here:
        if (btnRemove_pnlHocvien.isEnabled()) {
            mouseEnteredColor(btnRemove_pnlHocvien);
        }
    }//GEN-LAST:event_btnRemove_pnlHocvienMouseEntered

    private void btnRemove_pnlHocvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemove_pnlHocvienMouseExited
        // TODO add your handling code here:
        if (btnRemove_pnlHocvien.isEnabled()) {
            mouseExitedColor(btnRemove_pnlHocvien);
        }
    }//GEN-LAST:event_btnRemove_pnlHocvienMouseExited

    private void btnScoreupdate_pnlHocvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnScoreupdate_pnlHocvienMouseEntered
        // TODO add your handling code here:
        if (btnScoreupdate_pnlHocvien.isEnabled()) {
            mouseEnteredColor(btnScoreupdate_pnlHocvien);
        }
    }//GEN-LAST:event_btnScoreupdate_pnlHocvienMouseEntered

    private void btnScoreupdate_pnlHocvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnScoreupdate_pnlHocvienMouseExited
        // TODO add your handling code here:
        if (btnScoreupdate_pnlHocvien.isEnabled()) {
            mouseExitedColor(btnScoreupdate_pnlHocvien);
        }
    }//GEN-LAST:event_btnScoreupdate_pnlHocvienMouseExited

    private void btnAdd_pnlHocvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlHocvienMouseEntered
        // TODO add your handling code here:
        if (btnAdd_pnlHocvien.isEnabled()) {
            mouseEnteredColor(btnAdd_pnlHocvien);
        }
    }//GEN-LAST:event_btnAdd_pnlHocvienMouseEntered

    private void btnAdd_pnlHocvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlHocvienMouseExited
        // TODO add your handling code here:
        if (btnAdd_pnlHocvien.isEnabled()) {
            mouseExitedColor(btnAdd_pnlHocvien);
        }
    }//GEN-LAST:event_btnAdd_pnlHocvienMouseExited

    private void txtFind_pnlHocvienFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFind_pnlHocvienFocusGained
        // TODO add your handling code here:
        if (txtFind_pnlHocvien.getText().equals("Find...")) {
            txtFind_pnlHocvien.setText(null);
        }
    }//GEN-LAST:event_txtFind_pnlHocvienFocusGained

    private void txtFind_pnlHocvienFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFind_pnlHocvienFocusLost
        // TODO add your handling code here:
        if (txtFind_pnlHocvien.getText().isEmpty()) {
            txtFind_pnlHocvien.setText("Find...");
        }
    }//GEN-LAST:event_txtFind_pnlHocvienFocusLost

    private void mniChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniChuyendeActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_hocvien.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblHocvien.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_nguoihoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblNguoihoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_khoahoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblKhoahoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblChuyende.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_chuyende.gif")));
            lblHocvien.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(0, 181, 204));
            lblChuyende.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 1;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlChuyende);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniChuyendeActionPerformed

    private void mniHocvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHocvienActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_chuyende.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblChuyende.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_nguoihoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblNguoihoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_khoahoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblKhoahoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblHocvien.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_hocvien.gif")));
            lblChuyende.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(0, 181, 204));
            lblHocvien.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 2;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlHocvien);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniHocvienActionPerformed

    private void btnAdd_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnAdd_pnlNguoihoc);
    }//GEN-LAST:event_btnAdd_pnlNguoihocMouseEntered

    private void btnAdd_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlNguoihocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnAdd_pnlNguoihoc);
    }//GEN-LAST:event_btnAdd_pnlNguoihocMouseExited

    private void btnDelete_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        if (btnDelete_pnlNguoihoc.isEnabled()) {
            mouseEnteredColor(btnDelete_pnlNguoihoc);
        }
    }//GEN-LAST:event_btnDelete_pnlNguoihocMouseEntered

    private void btnDelete_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlNguoihocMouseExited
        // TODO add your handling code here:
        if (btnDelete_pnlNguoihoc.isEnabled()) {
            mouseExitedColor(btnDelete_pnlNguoihoc);
        }
    }//GEN-LAST:event_btnDelete_pnlNguoihocMouseExited

    private void btnUpdate_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        if (btnUpdate_pnlNguoihoc.isEnabled()) {
            mouseEnteredColor(btnUpdate_pnlNguoihoc);
        }
    }//GEN-LAST:event_btnUpdate_pnlNguoihocMouseEntered

    private void btnUpdate_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlNguoihocMouseExited
        // TODO add your handling code here:
        if (btnUpdate_pnlNguoihoc.isEnabled()) {
            mouseExitedColor(btnUpdate_pnlNguoihoc);
        }
    }//GEN-LAST:event_btnUpdate_pnlNguoihocMouseExited

    private void btnNew_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNew_pnlNguoihoc);
    }//GEN-LAST:event_btnNew_pnlNguoihocMouseEntered

    private void btnNew_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew_pnlNguoihocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNew_pnlNguoihoc);
    }//GEN-LAST:event_btnNew_pnlNguoihocMouseExited

    private void btnFirst_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnFirst_pnlNguoihoc);
    }//GEN-LAST:event_btnFirst_pnlNguoihocMouseEntered

    private void btnFirst_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlNguoihocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnFirst_pnlNguoihoc);
    }//GEN-LAST:event_btnFirst_pnlNguoihocMouseExited

    private void btnPrevious_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnPrevious_pnlNguoihoc);
    }//GEN-LAST:event_btnPrevious_pnlNguoihocMouseEntered

    private void btnPrevious_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlNguoihocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnPrevious_pnlNguoihoc);
    }//GEN-LAST:event_btnPrevious_pnlNguoihocMouseExited

    private void btnNext_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNext_pnlNguoihoc);
    }//GEN-LAST:event_btnNext_pnlNguoihocMouseEntered

    private void btnNext_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlNguoihocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNext_pnlNguoihoc);
    }//GEN-LAST:event_btnNext_pnlNguoihocMouseExited

    private void btnLast_pnlNguoihocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlNguoihocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnLast_pnlNguoihoc);
    }//GEN-LAST:event_btnLast_pnlNguoihocMouseEntered

    private void btnLast_pnlNguoihocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlNguoihocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnLast_pnlNguoihoc);
    }//GEN-LAST:event_btnLast_pnlNguoihocMouseExited

    private void mniNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNguoihocActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_chuyende.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblChuyende.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_hocvien.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblHocvien.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_khoahoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblKhoahoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblNguoihoc.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_nguoihoc.gif")));
            lblChuyende.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(0, 181, 204));
            lblHocvien.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 3;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlNguoihoc);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniNguoihocActionPerformed

    private void mniGioithieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniGioithieuActionPerformed
        // TODO add your handling code here:
        DialogGioithieu.setVisible(true);
        DialogGioithieu.setLocationRelativeTo(null);
    }//GEN-LAST:event_mniGioithieuActionPerformed

    private void btnAdd_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnAdd_pnlKhoahoc);
    }//GEN-LAST:event_btnAdd_pnlKhoahocMouseEntered

    private void btnAdd_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlKhoahocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnAdd_pnlKhoahoc);
    }//GEN-LAST:event_btnAdd_pnlKhoahocMouseExited

    private void btnDelete_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        if (btnDelete_pnlKhoahoc.isEnabled()) {
            mouseEnteredColor(btnDelete_pnlKhoahoc);
        }
    }//GEN-LAST:event_btnDelete_pnlKhoahocMouseEntered

    private void btnDelete_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlKhoahocMouseExited
        // TODO add your handling code here:
        if (btnDelete_pnlKhoahoc.isEnabled()) {
            mouseExitedColor(btnDelete_pnlKhoahoc);
        }
    }//GEN-LAST:event_btnDelete_pnlKhoahocMouseExited

    private void btnUpdate_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        if (btnUpdate_pnlKhoahoc.isEnabled()) {
            mouseEnteredColor(btnUpdate_pnlKhoahoc);
        }
    }//GEN-LAST:event_btnUpdate_pnlKhoahocMouseEntered

    private void btnUpdate_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlKhoahocMouseExited
        // TODO add your handling code here:
        if (btnUpdate_pnlKhoahoc.isEnabled()) {
            mouseExitedColor(btnUpdate_pnlKhoahoc);
        }

    }//GEN-LAST:event_btnUpdate_pnlKhoahocMouseExited

    private void btnNew_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNew_pnlKhoahoc);
    }//GEN-LAST:event_btnNew_pnlKhoahocMouseEntered

    private void btnNew_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew_pnlKhoahocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNew_pnlKhoahoc);

    }//GEN-LAST:event_btnNew_pnlKhoahocMouseExited

    private void btnFirst_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnFirst_pnlKhoahoc);
    }//GEN-LAST:event_btnFirst_pnlKhoahocMouseEntered

    private void btnFirst_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlKhoahocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnFirst_pnlKhoahoc);
    }//GEN-LAST:event_btnFirst_pnlKhoahocMouseExited

    private void btnPrevious_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnPrevious_pnlKhoahoc);
    }//GEN-LAST:event_btnPrevious_pnlKhoahocMouseEntered

    private void btnPrevious_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlKhoahocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnPrevious_pnlKhoahoc);
    }//GEN-LAST:event_btnPrevious_pnlKhoahocMouseExited

    private void btnNext_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNext_pnlKhoahoc);
    }//GEN-LAST:event_btnNext_pnlKhoahocMouseEntered

    private void btnNext_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlKhoahocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNext_pnlKhoahoc);
    }//GEN-LAST:event_btnNext_pnlKhoahocMouseExited

    private void btnLast_pnlKhoahocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlKhoahocMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnLast_pnlKhoahoc);
    }//GEN-LAST:event_btnLast_pnlKhoahocMouseEntered

    private void btnLast_pnlKhoahocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlKhoahocMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnLast_pnlKhoahoc);
    }//GEN-LAST:event_btnLast_pnlKhoahocMouseExited

    private void mniKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKhoahocActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_chuyende.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblChuyende.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_hocvien.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblHocvien.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_nguoihoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblNguoihoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblKhoahoc.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_khoahoc.gif")));
            lblChuyende.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(0, 181, 204));
            lblHocvien.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 4;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlKhoahoc);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniKhoahocActionPerformed

    private void tabbedPaneHocvienMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneHocvienMouseMoved
        // TODO add your handling code here:
        adjustCursor(tabbedPaneHocvien, evt);
    }//GEN-LAST:event_tabbedPaneHocvienMouseMoved

    private void tabbedPaneNguoihocMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneNguoihocMouseMoved
        // TODO add your handling code here:
        adjustCursor(tabbedPaneNguoihoc, evt);
    }//GEN-LAST:event_tabbedPaneNguoihocMouseMoved

    private void tabbedPaneKhoahocMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneKhoahocMouseMoved
        // TODO add your handling code here:
        adjustCursor(tabbedPaneKhoahoc, evt);
    }//GEN-LAST:event_tabbedPaneKhoahocMouseMoved

    private void btnAdd_pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlNhanvienMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnAdd_pnlNhanvien);
    }//GEN-LAST:event_btnAdd_pnlNhanvienMouseEntered

    private void btnAdd_pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd_pnlNhanvienMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnAdd_pnlNhanvien);
    }//GEN-LAST:event_btnAdd_pnlNhanvienMouseExited

    private void btnDelete_pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlNhanvienMouseEntered
        // TODO add your handling code here:
        if (btnDelete_pnlNhanvien.isEnabled()) {
            mouseEnteredColor(btnDelete_pnlNhanvien);
        }
    }//GEN-LAST:event_btnDelete_pnlNhanvienMouseEntered

    private void btnDelete_pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete_pnlNhanvienMouseExited
        // TODO add your handling code here:
        if (btnDelete_pnlNhanvien.isEnabled()) {
            mouseExitedColor(btnDelete_pnlNhanvien);
        }

    }//GEN-LAST:event_btnDelete_pnlNhanvienMouseExited

    private void btnUpdate_pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlNhanvienMouseEntered
        // TODO add your handling code here:
        if (btnUpdate_pnlNhanvien.isEnabled()) {
            mouseEnteredColor(btnUpdate_pnlNhanvien);
        }

    }//GEN-LAST:event_btnUpdate_pnlNhanvienMouseEntered

    private void btnUpdate_pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate_pnlNhanvienMouseExited
        // TODO add your handling code here:
        if (btnUpdate_pnlNhanvien.isEnabled()) {
            mouseExitedColor(btnUpdate_pnlNhanvien);
        }

    }//GEN-LAST:event_btnUpdate_pnlNhanvienMouseExited

    private void btnNew__pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew__pnlNhanvienMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNew__pnlNhanvien);
    }//GEN-LAST:event_btnNew__pnlNhanvienMouseEntered

    private void btnNew__pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNew__pnlNhanvienMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNew__pnlNhanvien);
    }//GEN-LAST:event_btnNew__pnlNhanvienMouseExited

    private void btnFirst_pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlNhanvienMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnFirst_pnlNhanvien);
    }//GEN-LAST:event_btnFirst_pnlNhanvienMouseEntered

    private void btnFirst_pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirst_pnlNhanvienMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnFirst_pnlNhanvien);
    }//GEN-LAST:event_btnFirst_pnlNhanvienMouseExited

    private void btnPrevious_pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlNhanvienMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnPrevious_pnlNhanvien);
    }//GEN-LAST:event_btnPrevious_pnlNhanvienMouseEntered

    private void btnPrevious_pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrevious_pnlNhanvienMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnPrevious_pnlNhanvien);
    }//GEN-LAST:event_btnPrevious_pnlNhanvienMouseExited

    private void btnNext_pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlNhanvienMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnNext_pnlNhanvien);
    }//GEN-LAST:event_btnNext_pnlNhanvienMouseEntered

    private void btnNext_pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNext_pnlNhanvienMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnNext_pnlNhanvien);
    }//GEN-LAST:event_btnNext_pnlNhanvienMouseExited

    private void btnLast_pnlNhanvienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlNhanvienMouseEntered
        // TODO add your handling code here:
        mouseEnteredColor(btnLast_pnlNhanvien);
    }//GEN-LAST:event_btnLast_pnlNhanvienMouseEntered

    private void btnLast_pnlNhanvienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLast_pnlNhanvienMouseExited
        // TODO add your handling code here:
        mouseExitedColor(btnLast_pnlNhanvien);
    }//GEN-LAST:event_btnLast_pnlNhanvienMouseExited

    private void tabbedPaneNhanvienMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneNhanvienMouseMoved
        // TODO add your handling code here:
        adjustCursor(tabbedPaneNhanvien, evt);
    }//GEN-LAST:event_tabbedPaneNhanvienMouseMoved

    private void mniNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNhanvienActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            addToCardLayout(pnlNhanvien);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniNhanvienActionPerformed

    private void txtManguoihoc_pnlNguoihocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtManguoihoc_pnlNguoihocFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtManguoihoc_pnlNguoihoc);
    }//GEN-LAST:event_txtManguoihoc_pnlNguoihocFocusGained

    private void txtManguoihoc_pnlNguoihocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtManguoihoc_pnlNguoihocFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtManguoihoc_pnlNguoihoc);
    }//GEN-LAST:event_txtManguoihoc_pnlNguoihocFocusLost

    private void txtHovaten_pnlNguoihocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHovaten_pnlNguoihocFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtHovaten_pnlNguoihoc);
    }//GEN-LAST:event_txtHovaten_pnlNguoihocFocusGained

    private void txtHovaten_pnlNguoihocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHovaten_pnlNguoihocFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtHovaten_pnlNguoihoc);
    }//GEN-LAST:event_txtHovaten_pnlNguoihocFocusLost

    private void txtSodienthoai_pnlNguoihocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSodienthoai_pnlNguoihocFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtSodienthoai_pnlNguoihoc);
    }//GEN-LAST:event_txtSodienthoai_pnlNguoihocFocusGained

    private void txtSodienthoai_pnlNguoihocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSodienthoai_pnlNguoihocFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtSodienthoai_pnlNguoihoc);
    }//GEN-LAST:event_txtSodienthoai_pnlNguoihocFocusLost

    private void txtEmail_pnlNguoihocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmail_pnlNguoihocFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtEmail_pnlNguoihoc);
    }//GEN-LAST:event_txtEmail_pnlNguoihocFocusGained

    private void txtEmail_pnlNguoihocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmail_pnlNguoihocFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtEmail_pnlNguoihoc);
    }//GEN-LAST:event_txtEmail_pnlNguoihocFocusLost

    private void txtGhichu_pnlNguoihocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGhichu_pnlNguoihocFocusGained
        // TODO add your handling code here:
        focusGainedBottomBorder(txtGhichu_pnlNguoihoc);
    }//GEN-LAST:event_txtGhichu_pnlNguoihocFocusGained

    private void txtGhichu_pnlNguoihocFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGhichu_pnlNguoihocFocusLost
        // TODO add your handling code here:
        focusLostLineBorder(txtGhichu_pnlNguoihoc);
    }//GEN-LAST:event_txtGhichu_pnlNguoihocFocusLost

    private void tabbedPaneThongkeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneThongkeMouseMoved
        // TODO add your handling code here:
        adjustCursor(tabbedPaneThongke, evt);
    }//GEN-LAST:event_tabbedPaneThongkeMouseMoved

    private void mniBangdiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniBangdiemActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            addToCardLayout(pnlThongke);
            tabbedPaneThongke.setSelectedIndex(0);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniBangdiemActionPerformed

    private void mniLuongnguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLuongnguoihocActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            addToCardLayout(pnlThongke);
            tabbedPaneThongke.setSelectedIndex(1);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniLuongnguoihocActionPerformed

    private void mniDiemchuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDiemchuyendeActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            addToCardLayout(pnlThongke);
            tabbedPaneThongke.setSelectedIndex(2);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniDiemchuyendeActionPerformed

    private void mniDoanhthuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoanhthuActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            addToCardLayout(pnlThongke);
            tabbedPaneThongke.setSelectedIndex(3);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniDoanhthuActionPerformed

    private void mniDangxuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDangxuatActionPerformed
        // TODO add your handling code here:
        checkLogin();
    }//GEN-LAST:event_mniDangxuatActionPerformed

    private void mniDoimatkhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoimatkhauActionPerformed
        // TODO add your handling code here:
        changePassword();
    }//GEN-LAST:event_mniDoimatkhauActionPerformed

    private void mniThoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThoaActionPerformed
        // TODO add your handling code here:
        Runtime.getRuntime().exit(0);
    }//GEN-LAST:event_mniThoaActionPerformed

    private void mniDangnhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDangnhapActionPerformed
        // TODO add your handling code here:
        Login();
    }//GEN-LAST:event_mniDangnhapActionPerformed

    private void btnNew__pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew__pnlNhanvienActionPerformed
        // TODO add your handling code here:
        clearFormNV();
    }//GEN-LAST:event_btnNew__pnlNhanvienActionPerformed

    private void btnNew_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew_pnlKhoahocActionPerformed
        // TODO add your handling code here:
        clearFormKH();
    }//GEN-LAST:event_btnNew_pnlKhoahocActionPerformed

    private void btnNew_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        clearFormNH();
    }//GEN-LAST:event_btnNew_pnlNguoihocActionPerformed

    private void btnNew_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNew_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        clearFormCD();
    }//GEN-LAST:event_btnNew_pnlChuyendeActionPerformed

    private void btnAdd_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        if (validate_formCD()) {
            addCD();
            fillTableCD();
        }
    }//GEN-LAST:event_btnAdd_pnlChuyendeActionPerformed

    private void btnAdd_pnlHocvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd_pnlHocvienActionPerformed
        // TODO add your handling code here:
        if (validate_formHV()) {
            addHV();
            fillTableHV();
            fillTableThongKeHV();
            fillTableTKDiemChuyenDe();
            fillTableTKDoanhThu();
        }
    }//GEN-LAST:event_btnAdd_pnlHocvienActionPerformed

    private void btnAdd_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        if (validate_formNH()) {
            addNH();
            fillTableNH();
            fillTableTKNguoiHoc();
        }
    }//GEN-LAST:event_btnAdd_pnlNguoihocActionPerformed

    private void btnAdd_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd_pnlKhoahocActionPerformed
        // TODO add your handling code here:
        if (validate_formKH()) {
            addKH();
            fillTableKH();
            fillCboChuyendeToCboKhoahoc();
            fillTableHV();
            fillAllKhoaHocToCboThongKe();
            fillTableToCboNamTK();
        }
    }//GEN-LAST:event_btnAdd_pnlKhoahocActionPerformed

    private void btnAdd_pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd_pnlNhanvienActionPerformed
        // TODO add your handling code here:
        if (validate_formNV()) {
            addNV();
            fillTableNV();
        }
    }//GEN-LAST:event_btnAdd_pnlNhanvienActionPerformed

    private void btnImage_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImage_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        addImage();
    }//GEN-LAST:event_btnImage_pnlChuyendeActionPerformed

    private void tblListdanhsach_pnlChuyendeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListdanhsach_pnlChuyendeMouseClicked
        // TODO add your handling code here:
        this.indexRowChuyende = tblListdanhsach_pnlChuyende.getSelectedRow();
        showDetailCD(this.indexRowChuyende);
        if (evt.getClickCount() > 1) {
            tabbedPaneChuyende.setSelectedComponent(pnlThongtinchuyende_pnlChuyende);
        }
    }//GEN-LAST:event_tblListdanhsach_pnlChuyendeMouseClicked

    private void btnDelete_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        deleteCD();
    }//GEN-LAST:event_btnDelete_pnlChuyendeActionPerformed

    private void btnUpdate_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        updateCD();
    }//GEN-LAST:event_btnUpdate_pnlChuyendeActionPerformed

    private void btnFirst_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlChuyende.getRowCount() > 0) {
            firstCD();
        } else {
            MsgBox.alert(this, "Không Có Chuyên Đề Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnFirst_pnlChuyendeActionPerformed

    private void btnPrevious_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevious_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlChuyende.getRowCount() > 0) {
            prevCD();
        } else {
            MsgBox.alert(this, "Không Có Chuyên Đề Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnPrevious_pnlChuyendeActionPerformed

    private void btnNext_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlChuyende.getRowCount() > 0) {
            nextCD();
        } else {
            MsgBox.alert(this, "Không Có Chuyên Đề Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnNext_pnlChuyendeActionPerformed

    private void btnLast_pnlChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast_pnlChuyendeActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlChuyende.getRowCount() > 0) {
            lastCD();
        } else {
            MsgBox.alert(this, "Không Có Chuyên Đề Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnLast_pnlChuyendeActionPerformed

    private void cboChuyende_pnlKhoahocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboChuyende_pnlKhoahocItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED && Auth.isLogin()) {
            Chuyende cd = (Chuyende) cboChuyende_pnlKhoahoc.getSelectedItem();
            txtHocphi_pnlKhoahoc.setText(String.valueOf(cd.getHocPhi()));
            txtThoiluong_pnlKhoahoc.setText(String.valueOf(cd.getThoiLuong()));
            txtNguoitao_pnlKhoahoc.setText(Auth.user.getHoTen() + " (" + Auth.user.getMaNV() + ")");
            txtNgaytao_pnlKhoahoc.setText(XDate.toString(null, "dd/MM/YYYY"));
        }
    }//GEN-LAST:event_cboChuyende_pnlKhoahocItemStateChanged

    private void cboChuyende_pnlHocvienItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboChuyende_pnlHocvienItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            fillCboChuyendeToCboKhoahoc();
        }
    }//GEN-LAST:event_cboChuyende_pnlHocvienItemStateChanged
    private void fillCboChuyendeToCboKhoahoc() {
        DefaultComboBoxModel boxMode_pnlHocvien = (DefaultComboBoxModel) cboKhoahoc_pnlHocvien.getModel();
        boxMode_pnlHocvien.removeAllElements();
        Chuyende cd = (Chuyende) cboChuyende_pnlHocvien.getSelectedItem();
        if (cd != null) {
            for (Khoahoc x : khoahocDAO.selectByCD(cd.getMaCD())) {
                boxMode_pnlHocvien.addElement(x);
            }
        }
        fillTableHV();
    }

    private void fillAllKhoaHocToCboThongKe() {
        DefaultComboBoxModel boxModel = (DefaultComboBoxModel) cboKhoahocj_pnlThongke.getModel();
        for (Khoahoc x : khoahocDAO.selectAll()) {
            boxModel.addElement(x);
        }
    }
    private void cboKhoahoc_pnlHocvienItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboKhoahoc_pnlHocvienItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            fillTableHV();
        }
    }//GEN-LAST:event_cboKhoahoc_pnlHocvienItemStateChanged

    private void btnDelete_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete_pnlKhoahocActionPerformed
        // TODO add your handling code here:
        deleteKH();
        fillCboChuyendeToCboKhoahoc();
        fillTableToCboNamTK();
    }//GEN-LAST:event_btnDelete_pnlKhoahocActionPerformed

    private void btnUpdate_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate_pnlKhoahocActionPerformed
        // TODO add your handling code here:
        updateKH();
    }//GEN-LAST:event_btnUpdate_pnlKhoahocActionPerformed

    private void tblListdanhsach_pnlKhoahocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListdanhsach_pnlKhoahocMouseClicked
        // TODO add your handling code here:
        this.indexRowKhoahoc = tblListdanhsach_pnlKhoahoc.getSelectedRow();
        showDetailKH(this.indexRowKhoahoc);
        if (evt.getClickCount() > 1) {
            tabbedPaneKhoahoc.setSelectedComponent(pnlThongtin_pnlKhoahoc);
        }
    }//GEN-LAST:event_tblListdanhsach_pnlKhoahocMouseClicked

    private void btnFirst_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst_pnlKhoahocActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlKhoahoc.getRowCount() > 0) {
            firstKH();
        } else {
            MsgBox.alert(this, "Không Có Khóa Học Nào Trong Danh Sách");
        }

    }//GEN-LAST:event_btnFirst_pnlKhoahocActionPerformed

    private void btnPrevious_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevious_pnlKhoahocActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlKhoahoc.getRowCount() > 0) {
            prevKH();
        } else {
            MsgBox.alert(this, "Không Có Khóa Học Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnPrevious_pnlKhoahocActionPerformed

    private void btnNext_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext_pnlKhoahocActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlKhoahoc.getRowCount() > 0) {
            nextKH();
        } else {
            MsgBox.alert(this, "Không Có Khóa Học Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnNext_pnlKhoahocActionPerformed

    private void btnLast_pnlKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast_pnlKhoahocActionPerformed
        // TODO add your handling code here:\
        if (tblListdanhsach_pnlKhoahoc.getRowCount() > 0) {
            lastKH();
        } else {
            MsgBox.alert(this, "Không Có Khóa Học Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnLast_pnlKhoahocActionPerformed

    private void btnDelete_pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete_pnlNhanvienActionPerformed
        // TODO add your handling code here:
        deleteNV();
    }//GEN-LAST:event_btnDelete_pnlNhanvienActionPerformed

    private void btnUpdate_pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate_pnlNhanvienActionPerformed
        // TODO add your handling code here:
        updateNV();
    }//GEN-LAST:event_btnUpdate_pnlNhanvienActionPerformed

    private void tblListdanhsach_pnlNhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListdanhsach_pnlNhanvienMouseClicked
        // TODO add your handling code here:
        this.indexRowNhanvien = tblListdanhsach_pnlNhanvien.getSelectedRow();
        showDetailNV(this.indexRowNhanvien);
        if (evt.getClickCount() > 1) {
            tabbedPaneNhanvien.setSelectedComponent(pnlThongtin_pnlNhanvien);
        }
    }//GEN-LAST:event_tblListdanhsach_pnlNhanvienMouseClicked

    private void btnFirst_pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst_pnlNhanvienActionPerformed
        // TODO add your handling code here:
        firstNV();
    }//GEN-LAST:event_btnFirst_pnlNhanvienActionPerformed

    private void btnPrevious_pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevious_pnlNhanvienActionPerformed
        // TODO add your handling code here:
        prevNV();
    }//GEN-LAST:event_btnPrevious_pnlNhanvienActionPerformed

    private void btnNext_pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext_pnlNhanvienActionPerformed
        // TODO add your handling code here:
        nextNV();
    }//GEN-LAST:event_btnNext_pnlNhanvienActionPerformed

    private void btnLast_pnlNhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast_pnlNhanvienActionPerformed
        // TODO add your handling code here:
        lastNV();
    }//GEN-LAST:event_btnLast_pnlNhanvienActionPerformed

    private void btnDelete_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        deleteNH();
    }//GEN-LAST:event_btnDelete_pnlNguoihocActionPerformed

    private void btnUpdate_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        updateNH();
    }//GEN-LAST:event_btnUpdate_pnlNguoihocActionPerformed

    private void btnFirst_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlNguoihoc.getRowCount() > 0) {
            firstNH();
        } else {
            MsgBox.alert(this, "Không Có Người Học Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnFirst_pnlNguoihocActionPerformed

    private void btnPrevious_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevious_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlNguoihoc.getRowCount() > 0) {
            prevNH();
        } else {
            MsgBox.alert(this, "Không Có Người Học Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnPrevious_pnlNguoihocActionPerformed

    private void btnNext_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlNguoihoc.getRowCount() > 0) {
            nextNH();
        } else {
            MsgBox.alert(this, "Không Có Người Học Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnNext_pnlNguoihocActionPerformed

    private void btnLast_pnlNguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast_pnlNguoihocActionPerformed
        // TODO add your handling code here:
        if (tblListdanhsach_pnlNguoihoc.getRowCount() > 0) {
            lastNH();
        } else {
            MsgBox.alert(this, "Không Có Người Học Nào Trong Danh Sách");
        }
    }//GEN-LAST:event_btnLast_pnlNguoihocActionPerformed

    private void tblListdanhsach_pnlNguoihocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListdanhsach_pnlNguoihocMouseClicked
        // TODO add your handling code here:
        this.indexRowNguoihoc = tblListdanhsach_pnlNguoihoc.getSelectedRow();
        showDetailNH(this.indexRowNguoihoc);
        if (evt.getClickCount() > 1) {
            tabbedPaneNguoihoc.setSelectedComponent(pnlThongtin_pnlNguoihoc);
        }
    }//GEN-LAST:event_tblListdanhsach_pnlNguoihocMouseClicked

    private void tblListhocvien__pnlHocvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListhocvien__pnlHocvienMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblListhocvien__pnlHocvienMouseClicked

    private void btnRemove_pnlHocvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemove_pnlHocvienActionPerformed
        // TODO add your handling code here:
        deleteHV();
    }//GEN-LAST:event_btnRemove_pnlHocvienActionPerformed

    private void btnScoreupdate_pnlHocvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScoreupdate_pnlHocvienActionPerformed
        // TODO add your handling code here:
        updateScore();
    }//GEN-LAST:event_btnScoreupdate_pnlHocvienActionPerformed

    private void txtFind_pnlHocvienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFind_pnlHocvienKeyReleased
        // TODO add your handling code here:
        find();
    }//GEN-LAST:event_txtFind_pnlHocvienKeyReleased

    private void cboKhoahocj_pnlThongkeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboKhoahocj_pnlThongkeItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            fillTableThongKeHV();
        }
    }//GEN-LAST:event_cboKhoahocj_pnlThongkeItemStateChanged

    private void cboNam_pnlThongkeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNam_pnlThongkeItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            fillTableTKDoanhThu();
        }
    }//GEN-LAST:event_cboNam_pnlThongkeItemStateChanged

    private void mniHuongdanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHuongdanActionPerformed
        // TODO add your handling code here:
        openHuongDan();
    }//GEN-LAST:event_mniHuongdanActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        checkLogin();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void mniEEHocvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEEHocvienActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            exportExcelHV();
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniEEHocvienActionPerformed

    private void mniEEChuyendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEEChuyendeActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            exportExcelCD();
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniEEChuyendeActionPerformed

    private void mniEENguoihocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEENguoihocActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            exportExcelNH();
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniEENguoihocActionPerformed

    private void mniEEKhoahocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEEKhoahocActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            exportExcelKH();
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniEEKhoahocActionPerformed

    private void cboSapxep_pnlThongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSapxep_pnlThongkeActionPerformed
        // TODO add your handling code here:
        sortTT();
    }//GEN-LAST:event_cboSapxep_pnlThongkeActionPerformed

    private void cboLonbe_pnlThongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLonbe_pnlThongkeActionPerformed
        // TODO add your handling code here:
        sortTT();
    }//GEN-LAST:event_cboLonbe_pnlThongkeActionPerformed

    private void mniEEThongkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEEThongkeActionPerformed
        // TODO add your handling code here:
        if (Auth.isLogin()) {
            exportExcelTK();
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_mniEEThongkeActionPerformed

    private void mniQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniQRActionPerformed
        // TODO add your handling code here:
        createQR();
    }//GEN-LAST:event_mniQRActionPerformed
    private void fillTableToCboNamTK() {
        DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) cboNam_pnlThongke.getModel();
        comboBoxModel.removeAllElements();
        khoahocDAO.selectAllYear().forEach(x -> {
            comboBoxModel.addElement(x);
        });
    }

    private void fillTableTKDoanhThu() {
        DefaultTableModel model = (DefaultTableModel) tblListdoanhthu_pnlThongke.getModel();
        model.setRowCount(0);
        int year = (int) cboNam_pnlThongke.getSelectedItem();
        for (Object[] x : thongKeDAO.getDoanhThu(year)) {
            model.addRow(x);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DialogGioithieu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JButton btnAdd_pnlChuyende;
    private javax.swing.JButton btnAdd_pnlHocvien;
    private javax.swing.JButton btnAdd_pnlKhoahoc;
    private javax.swing.JButton btnAdd_pnlNguoihoc;
    private javax.swing.JButton btnAdd_pnlNhanvien;
    private javax.swing.JButton btnDelete_pnlChuyende;
    private javax.swing.JButton btnDelete_pnlKhoahoc;
    private javax.swing.JButton btnDelete_pnlNguoihoc;
    private javax.swing.JButton btnDelete_pnlNhanvien;
    private javax.swing.JButton btnFirst_pnlChuyende;
    private javax.swing.JButton btnFirst_pnlKhoahoc;
    private javax.swing.JButton btnFirst_pnlNguoihoc;
    private javax.swing.JButton btnFirst_pnlNhanvien;
    private javax.swing.JButton btnImage_pnlChuyende;
    private javax.swing.JButton btnLast_pnlChuyende;
    private javax.swing.JButton btnLast_pnlKhoahoc;
    private javax.swing.JButton btnLast_pnlNguoihoc;
    private javax.swing.JButton btnLast_pnlNhanvien;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNew__pnlNhanvien;
    private javax.swing.JButton btnNew_pnlChuyende;
    private javax.swing.JButton btnNew_pnlKhoahoc;
    private javax.swing.JButton btnNew_pnlNguoihoc;
    private javax.swing.JButton btnNext_pnlChuyende;
    private javax.swing.JButton btnNext_pnlKhoahoc;
    private javax.swing.JButton btnNext_pnlNguoihoc;
    private javax.swing.JButton btnNext_pnlNhanvien;
    private javax.swing.JButton btnPrevious_pnlChuyende;
    private javax.swing.JButton btnPrevious_pnlKhoahoc;
    private javax.swing.JButton btnPrevious_pnlNguoihoc;
    private javax.swing.JButton btnPrevious_pnlNhanvien;
    private javax.swing.JButton btnRemove_pnlHocvien;
    private javax.swing.JButton btnScoreupdate_pnlHocvien;
    private javax.swing.JButton btnUpdate_pnlChuyende;
    private javax.swing.JButton btnUpdate_pnlKhoahoc;
    private javax.swing.JButton btnUpdate_pnlNguoihoc;
    private javax.swing.JButton btnUpdate_pnlNhanvien;
    private javax.swing.ButtonGroup btngNhanvien;
    private javax.swing.JComboBox<String> cboChuyende_pnlHocvien;
    private javax.swing.JComboBox<String> cboChuyende_pnlKhoahoc;
    private javax.swing.JComboBox<String> cboGioitinh_pnlNguoihoc;
    private javax.swing.JComboBox<String> cboKhoahoc_pnlHocvien;
    private javax.swing.JComboBox<String> cboKhoahocj_pnlThongke;
    private javax.swing.JComboBox<String> cboLonbe_pnlThongke;
    private javax.swing.JComboBox<String> cboNam_pnlThongke;
    private javax.swing.JComboBox<String> cboSapxep_pnlThongke;
    private com.toedter.calendar.JDateChooser dateNgaykhaigiang_pnlKhoahoc;
    private com.toedter.calendar.JDateChooser dateNgaysinh_pnlNguoihoc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JLabel lblChuyende;
    private javax.swing.JLabel lblChuyende_pnlHocvien;
    private javax.swing.JLabel lblChuyende_pnlKhoahoc;
    private javax.swing.JLabel lblEmail_pnlNguoihoc;
    private javax.swing.JLabel lblGhichu_pnlKhoahoc;
    private javax.swing.JLabel lblGhichu_pnlNguoihoc;
    private javax.swing.JLabel lblGioitinh_pnlNguoihoc;
    private javax.swing.JLabel lblHequanlydaotao;
    private javax.swing.JLabel lblHocphi_pnlChuyende;
    private javax.swing.JLabel lblHocphi_pnlKhoahoc;
    private javax.swing.JLabel lblHocvien;
    private javax.swing.JLabel lblHoten_pnlNguoihoc;
    private javax.swing.JLabel lblHoten_pnlNhanvien;
    private javax.swing.JLabel lblImage_pnlChuyende;
    private javax.swing.JLabel lblKhoahoc;
    private javax.swing.JLabel lblKhoahoc_pnlHocvien;
    private javax.swing.JLabel lblKhoahoc_pnlThongke;
    private javax.swing.JLabel lblLoader;
    private javax.swing.JLabel lblLogo_Dialoggioithieu;
    private javax.swing.JLabel lblMachuyende_pnlChuyende;
    private javax.swing.JLabel lblManguoihoc_pnlNguoihoc;
    private javax.swing.JLabel lblManhanvien_pnlNhanvien;
    private javax.swing.JLabel lblMatkhau_pnlNhanvien;
    private javax.swing.JLabel lblMota_pnlChuyende;
    private javax.swing.JLabel lblNam_pnlThongke;
    private javax.swing.JLabel lblNgaykhaigiang_pnlKhoahoc;
    private javax.swing.JLabel lblNgaysinh_pnlNguoihoc;
    private javax.swing.JLabel lblNgaytao_pnlKhoahoc;
    private javax.swing.JLabel lblNguoihoc;
    private javax.swing.JLabel lblNguoitao_pnlKhoahoc;
    private javax.swing.JLabel lblSodienthoai_pnlNguoihoc;
    private javax.swing.JLabel lblTenchuyende_pnlChuyende;
    private javax.swing.JLabel lblThoiluong_pnlChuyende;
    private javax.swing.JLabel lblThoiluong_pnlKhoahoc;
    private javax.swing.JLabel lblTieuDe_Dialoggioithieu;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblVaitro_pnlNhanvien;
    private javax.swing.JLabel lblXacnhanmatkhau_pnlNhanvien;
    private javax.swing.JMenuItem mniBangdiem;
    private javax.swing.JMenuItem mniChuyende;
    private javax.swing.JMenuItem mniDangnhap;
    private javax.swing.JMenuItem mniDangxuat;
    private javax.swing.JMenuItem mniDiemchuyende;
    private javax.swing.JMenuItem mniDoanhthu;
    private javax.swing.JMenuItem mniDoimatkhau;
    private javax.swing.JMenuItem mniEEChuyende;
    private javax.swing.JMenuItem mniEEHocvien;
    private javax.swing.JMenuItem mniEEKhoahoc;
    private javax.swing.JMenuItem mniEENguoihoc;
    private javax.swing.JMenuItem mniEEThongke;
    private javax.swing.JMenuItem mniGioithieu;
    private javax.swing.JMenuItem mniHocvien;
    private javax.swing.JMenuItem mniHuongdan;
    private javax.swing.JMenuItem mniKhoahoc;
    private javax.swing.JMenuItem mniLuongnguoihoc;
    private javax.swing.JMenuItem mniNguoihoc;
    private javax.swing.JMenuItem mniNhanvien;
    private javax.swing.JMenuItem mniQR;
    private javax.swing.JMenuItem mniThoa;
    private javax.swing.JMenu mnuExport;
    private javax.swing.JMenu mnuHeThong;
    private javax.swing.JMenu mnuQuanLy;
    private javax.swing.JMenu mnuThongKe;
    private javax.swing.JMenu mnuTroGiup;
    private javax.swing.JPanel pnlBangdiem_pnlThongke;
    private javax.swing.JPanel pnlChuyende;
    private javax.swing.JPanel pnlContainer;
    private javax.swing.JPanel pnlDanhsach_pnlKhoahoc;
    private javax.swing.JPanel pnlDanhsach_pnlNguoihoc;
    private javax.swing.JPanel pnlDanhsach_pnlNhanvien;
    private javax.swing.JPanel pnlDanhsachchuyende_pnlChuyende;
    private javax.swing.JPanel pnlDiemchuyende_pnlThongke;
    private javax.swing.JPanel pnlDoanhthu_pnlThongke;
    private javax.swing.JPanel pnlHocvien;
    private javax.swing.JPanel pnlKhoahoc;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlNguoihoc;
    private javax.swing.JPanel pnlNguoihoc_pnlHocvien;
    private javax.swing.JPanel pnlNguoihoc_pnlThongke;
    private javax.swing.JPanel pnlNhanvien;
    private javax.swing.JPanel pnlRight;
    private javax.swing.JPanel pnlThongke;
    private javax.swing.JPanel pnlThongtin_pnlKhoahoc;
    private javax.swing.JPanel pnlThongtin_pnlNguoihoc;
    private javax.swing.JPanel pnlThongtin_pnlNhanvien;
    private javax.swing.JPanel pnlThongtinchuyende_pnlChuyende;
    private javax.swing.JPanel pnlTrangthai;
    private javax.swing.JPanel pnlhocvien_pnlHocvien;
    private javax.swing.JPanel pnlloader;
    private javax.swing.JRadioButton rdoNhanvien_pnlNhanvien;
    private javax.swing.JRadioButton rdoTruongphong_pnlNhanvien;
    private javax.swing.JTabbedPane tabbedPaneChuyende;
    private javax.swing.JTabbedPane tabbedPaneHocvien;
    private javax.swing.JTabbedPane tabbedPaneKhoahoc;
    private javax.swing.JTabbedPane tabbedPaneNguoihoc;
    private javax.swing.JTabbedPane tabbedPaneNhanvien;
    private javax.swing.JTabbedPane tabbedPaneThongke;
    private javax.swing.JTable tblListbangdien_pnlThongke;
    private javax.swing.JTable tblListdanhsach_pnlChuyende;
    private javax.swing.JTable tblListdanhsach_pnlKhoahoc;
    private javax.swing.JTable tblListdanhsach_pnlNguoihoc;
    private javax.swing.JTable tblListdanhsach_pnlNhanvien;
    private javax.swing.JTable tblListdiemchuyende_pnlThongke;
    private javax.swing.JTable tblListdoanhthu_pnlThongke;
    private javax.swing.JTable tblListhocvien__pnlHocvien;
    private javax.swing.JTable tblListnguoihoc_pnlHocvien;
    private javax.swing.JTable tblListnguoihoc_pnlThongke;
    private javax.swing.JTextField txtEmail_pnlNguoihoc;
    private javax.swing.JTextField txtFind_pnlHocvien;
    private javax.swing.JTextArea txtGhichu_pnlKhoahoc;
    private javax.swing.JTextArea txtGhichu_pnlNguoihoc;
    private javax.swing.JTextField txtHocphi_pnlChuyende;
    private javax.swing.JTextField txtHocphi_pnlKhoahoc;
    private javax.swing.JTextField txtHoten_pnlNhanvien;
    private javax.swing.JTextField txtHovaten_pnlNguoihoc;
    private javax.swing.JTextField txtMachuyende_pnlChuyende;
    private javax.swing.JTextField txtManguoihoc_pnlNguoihoc;
    private javax.swing.JTextField txtManhanvien_pnlNhanvien;
    private javax.swing.JTextField txtMatkhau_pnlNhanvien;
    private javax.swing.JTextArea txtMota_pnlChuyende;
    private javax.swing.JTextField txtNgaytao_pnlKhoahoc;
    private javax.swing.JTextField txtNguoitao_pnlKhoahoc;
    private javax.swing.JTextArea txtNoidung_Dialoggioithieu;
    private javax.swing.JTextField txtSodienthoai_pnlNguoihoc;
    private javax.swing.JTextField txtTenchuyende_pnlChuyende;
    private javax.swing.JTextField txtThoiluong_pnlChuyende;
    private javax.swing.JTextField txtThoiluong_pnlKhoahoc;
    private javax.swing.JTextField txtXacnhanmatkhau_pnlNhanvien;
    // End of variables declaration//GEN-END:variables

    private void fullScreenSize() {
        java.awt.Dimension dimension = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize((int) dimension.getWidth() + 100, (int) dimension.getHeight() - 40);
    }

    private void adjustCursor(JTabbedPane tabbedPane, MouseEvent evt) {
        TabbedPaneUI uI = tabbedPane.getUI();
        int index = uI.tabForCoordinate(tabbedPane, evt.getX(), evt.getY());
        if (index >= 0) {
            tabbedPane.setCursor(new Cursor(Cursor.HAND_CURSOR));
        } else {
            tabbedPane.setCursor(null);
        }
    }

    private void mouseEnteredColor(JButton button) {
        button.setBackground(new Color(26, 33, 86));
        button.setForeground(Color.WHITE);
        button.setFont(new java.awt.Font("Segoe UI Emoji", 1, 10));
    }

    private void mouseExitedColor(JButton button) {
        button.setBackground(Color.WHITE);
        button.setForeground(new Color(6, 43, 142));
        button.setFont(new java.awt.Font("Segoe UI Emoji", 0, 10));
    }

    private void focusGainedBottomBorder(javax.swing.JTextField field) {
        field.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 120, 91))));
    }

    private void focusLostLineBorder(javax.swing.JTextField field) {
        field.setBorder(javax.swing.BorderFactory.createLineBorder(Color.GRAY, 1));
    }

    private void focusGainedBottomBorder(javax.swing.JTextArea field) {
        field.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 120, 91))));
    }

    private void focusLostLineBorder(javax.swing.JTextArea field) {
        field.setBorder(javax.swing.BorderFactory.createLineBorder(Color.GRAY, 1));
    }

    private void addToCardLayout(javax.swing.JPanel jPanel) {
        try {
            java.io.File file = new java.io.File("./src/poly/com/icon/icon_chuyende.gif");
            java.awt.Image img = ResizeImage.buff(file);
            lblChuyende.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            java.io.File file = new java.io.File("./src/poly/com/icon/icon_hocvien.gif");
            java.awt.Image img = ResizeImage.buff(file);
            lblHocvien.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            java.io.File file = new java.io.File("./src/poly/com/icon/icon_nguoihoc.gif");
            java.awt.Image img = ResizeImage.buff(file);
            lblNguoihoc.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            java.io.File file = new java.io.File("./src/poly/com/icon/icon_khoahoc.gif");
            java.awt.Image img = ResizeImage.buff(file);
            lblKhoahoc.setIcon(new ImageIcon(img));
        } catch (Exception e) {
            e.printStackTrace();
        }
        this.mindMouseClick = true;
        this.mindIndexClick = 0;
        lblChuyende.setBackground(new Color(0, 181, 204));
        lblNguoihoc.setBackground(new Color(0, 181, 204));
        lblHocvien.setBackground(new Color(0, 181, 204));
        lblKhoahoc.setBackground(new Color(0, 181, 204));
        pnlRight.remove(0);
        pnlRight.setLayout(movePnl);
        pnlRight.add(jPanel);
        movePnl.first(pnlRight);
    }

    private void changePassword() {
        if (Auth.isLogin()) {

        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    private void checkLogin() {
        Auth.clear();
        this.dispose();
        new FormLogin().setVisible(true);
    }

    private void Login() {
        this.dispose();
        new FormLogin().setVisible(true);
    }

    private void fillTableNV() {
        tblListdanhsach_pnlNhanvien.getTableHeader().setFont(new java.awt.Font("Source Sans Pro Black", 0, 18));
        DefaultTableModel model = (DefaultTableModel) tblListdanhsach_pnlNhanvien.getModel();
        model.setRowCount(0);
        try {
            for (Nhanvien x : nhanvienDAO.selectAll()) {
                Vector vector = new Vector();
                vector.add(x.getMaNV());
                vector.add(x.getMatKhau());
                vector.add(x.getHoTen());
                vector.add(x.getVaiTro() ? "Trưởng phòng" : "Nhân viên");
                model.addRow(vector);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn Error");
        }
    }

    private void fillTableKH() {
        DefaultTableModel model = (DefaultTableModel) tblListdanhsach_pnlKhoahoc.getModel();
        tblListdanhsach_pnlKhoahoc.getTableHeader().setFont(new java.awt.Font("Source Sans Pro Black", 0, 18));
        model.setRowCount(0);
        try {
            for (Khoahoc x : khoahocDAO.selectAll()) {
                Vector vector = new Vector();
                vector.add(x.getMaKH());
                vector.add(x.getMaCD());
                vector.add(x.getHocPhi());
                vector.add(x.getThoiLuong());
                vector.add(XDate.toString(x.getNgayKG(), "dd/MM/yyyy"));
                vector.add(nhanvienDAO.selectById(x.getMaNVTao()).getHoTen() + " (" + x.getMaNVTao() + ")");
                vector.add(XDate.toString(x.getNgayTao(), "dd/MM/yyyy"));
                model.addRow(vector);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn Error");
        }
    }

    private void fillTableCD() {
        DefaultTableModel model = (DefaultTableModel) tblListdanhsach_pnlChuyende.getModel();
        DefaultComboBoxModel boxModel_chuyenDepnlHocvien = (DefaultComboBoxModel) cboChuyende_pnlHocvien.getModel();
        DefaultComboBoxModel boxModel_chuyenDepnlKhoahoc = (DefaultComboBoxModel) cboChuyende_pnlKhoahoc.getModel();
        boxModel_chuyenDepnlKhoahoc.removeAllElements();
        boxModel_chuyenDepnlHocvien.removeAllElements();
        tblListdanhsach_pnlChuyende.getTableHeader().setFont(new java.awt.Font("Source Sans Pro Black", 0, 18));
        model.setRowCount(0);
        try {
            for (Chuyende x : chuyendeDAO.selectAll()) {
                boxModel_chuyenDepnlHocvien.addElement(x);
                boxModel_chuyenDepnlKhoahoc.addElement(x);
                Vector vector = new Vector();
                vector.add(x.getMaCD());
                vector.add(x.getTenCD());
                vector.add(x.getHocPhi());
                vector.add(x.getThoiLuong());
                model.addRow(vector);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn Error");
        }
    }

    private void fillTableHV() {
        DefaultTableModel model = (DefaultTableModel) tblListhocvien__pnlHocvien.getModel();
        Khoahoc kh = (Khoahoc) cboKhoahoc_pnlHocvien.getSelectedItem();
        tblListhocvien__pnlHocvien.getTableHeader().setFont(new java.awt.Font("Source Sans Pro Black", 0, 18));
        model.setRowCount(0);
        try {
            int TT = 1;
            if (kh != null) {
                for (Hocvien x : hocvienDAO.selectByKhoaHoc(kh.getMaKH())) {
                    Vector vector = new Vector();
                    vector.add(TT);
                    vector.add(x.getMaHV());
                    vector.add(x.getMaNH());
                    vector.add(nguoihocDAO.selectById(x.getMaNH()).getHoTen());
                    vector.add(x.getDiem());
                    model.addRow(vector);
                    TT++;
                }
            }
            if (tblListhocvien__pnlHocvien.getRowCount() > 0) {
                btnRemove_pnlHocvien.setEnabled(true);
                btnScoreupdate_pnlHocvien.setEnabled(true);
            } else {
                btnRemove_pnlHocvien.setEnabled(false);
                btnScoreupdate_pnlHocvien.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillTableNH() {
        DefaultTableModel model_pnlNH = (DefaultTableModel) tblListdanhsach_pnlNguoihoc.getModel();
        DefaultTableModel model_pnlHV = (DefaultTableModel) tblListnguoihoc_pnlHocvien.getModel();
        tblListdanhsach_pnlNguoihoc.getTableHeader().setFont(new java.awt.Font("Source Sans Pro Black", 0, 18));
        tblListnguoihoc_pnlHocvien.getTableHeader().setFont(new java.awt.Font("Source Sans Pro Black", 0, 18));
        model_pnlNH.setRowCount(0);
        model_pnlHV.setRowCount(0);
        try {
            for (Nguoihoc x : nguoihocDAO.selectAll()) {
                Vector vectorHV = new Vector();
                vectorHV.add(x.getMaNH());
                vectorHV.add(x.getHoTen());
                vectorHV.add(x.getGioiTinh() ? "Nam" : "Nữ");
                vectorHV.add(XDate.toString(x.getNgaySinh(), "dd/MM/YYYY"));
                vectorHV.add(x.getSoDienThoai());
                vectorHV.add(x.getEmail());
                model_pnlHV.addRow(vectorHV);
                Vector vectorNH = new Vector(vectorHV);
                vectorNH.add("(" + x.getMaNVTao() + ") " + nhanvienDAO.selectById(x.getMaNVTao()).getHoTen());
                vectorNH.add(XDate.toString(x.getNgayDK(), "dd/MM/yyyy"));
                model_pnlNH.addRow(vectorNH);
            }
            if (tblListnguoihoc_pnlHocvien.getRowCount() > 0) {
                btnAdd_pnlHocvien.setEnabled(true);
            } else {
                btnAdd_pnlHocvien.setEnabled(false);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn Error");
        }
    }

    private void fillTableTKNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblListnguoihoc_pnlThongke.getModel();
        model.setRowCount(0);
        for (Object[] x : thongKeDAO.getLuongNguoiHoc()) {
            x[2] = XDate.toString((Date) x[2], "dd/MM/yyyy");
            x[3] = XDate.toString((Date) x[3], "dd/MM/yyyy");
            model.addRow(x);
        }
    }

    private void fillTableThongKeHV() {
        Khoahoc kh = (Khoahoc) cboKhoahocj_pnlThongke.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) tblListbangdien_pnlThongke.getModel();
        model.setRowCount(0);
        thongKeDAO.getBangDiem(kh.getMaKH()).forEach(x -> {
            model.addRow(x);
        });
    }

    private void fillTableTKDiemChuyenDe() {
        DefaultTableModel model = (DefaultTableModel) tblListdiemchuyende_pnlThongke.getModel();
        model.setRowCount(0);
        thongKeDAO.getDiemChuyenDe().forEach(x -> {
            model.addRow(x);
        });
    }

    private boolean validate_formNV() {
        if (txtManhanvien_pnlNhanvien.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Mã Nhân Viên");
            txtManhanvien_pnlNhanvien.requestFocus();
            return false;
        }
        if (txtMatkhau_pnlNhanvien.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Mật Khẩu");
            txtMatkhau_pnlNhanvien.requestFocus();
            return false;
        }
        if (txtXacnhanmatkhau_pnlNhanvien.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Xác Nhận Mật Khẩu");
            txtXacnhanmatkhau_pnlNhanvien.requestFocus();
            return false;
        }
        if (txtHoten_pnlNhanvien.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Họ Tên Nhân Viên");
            txtHoten_pnlNhanvien.requestFocus();
            return false;
        }
        if (!txtXacnhanmatkhau_pnlNhanvien.getText().equals(txtMatkhau_pnlNhanvien.getText())) {
            MsgBox.alert(this, "Mật khẩu và xác nhận mật khẩu không trùng nhau");
            return false;
        }
        return true;
    }

    private boolean validate_formCD() {
        if (txtMachuyende_pnlChuyende.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Mã Chuyên Đề");
            txtMachuyende_pnlChuyende.requestFocus();
            return false;
        }
        if (txtTenchuyende_pnlChuyende.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Tên Chuyên Đề");
            txtTenchuyende_pnlChuyende.requestFocus();
            return false;
        }
        if (txtThoiluong_pnlChuyende.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Thời Lượng");
            txtThoiluong_pnlChuyende.requestFocus();
            return false;
        }
        if (!txtThoiluong_pnlChuyende.getText().matches("\\d+")) {
            MsgBox.alert(this, "Thời gian sai định dạng");
            txtThoiluong_pnlChuyende.requestFocus();
            return false;
        }
        if (txtHocphi_pnlChuyende.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Học Phí");
            txtHocphi_pnlChuyende.requestFocus();
            return false;
        }
        if (!txtHocphi_pnlChuyende.getText().matches("\\d+(\\.\\d+)?")) {
            MsgBox.alert(this, "Học phí sai định dạng");
            txtHocphi_pnlChuyende.requestFocus();
            return false;
        }
        if (txtMota_pnlChuyende.getText().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập Mô Tả");
            txtMota_pnlChuyende.requestFocus();
            return false;
        }
        return true;
    }

    private boolean validate_formHV() {
        if (cboChuyende_pnlHocvien.getSelectedIndex() == -1) {
            MsgBox.alert(this, "Hiện Tại Không Có Chuyên Đề Nào");
            return false;
        }
        if (cboKhoahoc_pnlHocvien.getSelectedIndex() == -1) {
            MsgBox.alert(this, "Hiện Tại Không Có Khóa Học Nào");
            return false;
        }
        return true;
    }

    private boolean validate_formNH() {
        if (txtManguoihoc_pnlNguoihoc.getText().trim().isEmpty()) {
            txtManguoihoc_pnlNguoihoc.requestFocus();
            MsgBox.alert(this, "Vui lòng nhập Mã Người Học");
            return false;
        }
        if (txtHovaten_pnlNguoihoc.getText().trim().isEmpty()) {
            txtHovaten_pnlNguoihoc.requestFocus();
            MsgBox.alert(this, "Vui lòng nhập Họ và Tên");
            return false;
        }
        if (dateNgaysinh_pnlNguoihoc.getDate() == null) {
            dateNgaysinh_pnlNguoihoc.requestFocus();
            MsgBox.alert(this, "Vui lòng nhập Ngày Sinh");
            return false;
        }
        if (txtSodienthoai_pnlNguoihoc.getText().trim().isEmpty()) {
            txtSodienthoai_pnlNguoihoc.requestFocus();
            MsgBox.alert(this, "Vui lòng nhập Ngày Sinh");
            return false;
        }
        if (txtEmail_pnlNguoihoc.getText().trim().isEmpty()) {
            txtEmail_pnlNguoihoc.requestFocus();
            MsgBox.alert(this, "Vui lòng Email");
            return false;
        }
        return true;
    }

    private boolean validate_formKH() {
//        if (cboChuyende_pnlKhoahoc.getSelectedIndex() == -1) {
//            MsgBox.alert(this, "Không Có Chuyên Đề Nào Trong Hệ Thống");
//            return false;
//        }
        if (dateNgaykhaigiang_pnlKhoahoc.getDate() == null) {
            MsgBox.alert(this, "Vui lòng nhập ngày");
            return false;
        }
        if (txtHocphi_pnlKhoahoc.getText().trim().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập học phí");
            return false;
        }
        if (txtThoiluong_pnlKhoahoc.getText().trim().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập thời lượng");
            return false;
        }
        if (txtNguoitao_pnlKhoahoc.getText().trim().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập người tạo");
            return false;
        }
        if (txtNgaytao_pnlKhoahoc.getText().trim().isEmpty()) {
            MsgBox.alert(this, "Vui lòng nhập ngày tạo");
            return false;
        }
        return true;
    }

    void init() {
        fillTableNV();
        fillTableKH();
        fillTableCD();
        fillTableHV();
        fillTableNH();
        fillAllKhoaHocToCboThongKe();
        fillTableTKNguoiHoc();
        fillTableTKDiemChuyenDe();
        fillTableToCboNamTK();
    }

    private void clearFormNV() {
        txtManhanvien_pnlNhanvien.setText(null);
        txtManhanvien_pnlNhanvien.setEnabled(true);
        txtMatkhau_pnlNhanvien.setText(null);
        txtXacnhanmatkhau_pnlNhanvien.setText(null);
        txtHoten_pnlNhanvien.setText(null);
        rdoNhanvien_pnlNhanvien.setSelected(true);
        btnDelete_pnlNhanvien.setEnabled(false);
        btnUpdate_pnlNhanvien.setEnabled(false);
    }

    private void clearFormKH() {
        if (cboChuyende_pnlKhoahoc.getItemCount() > 0) {
            cboChuyende_pnlKhoahoc.setSelectedIndex(0);
        }
        Chuyende cd = (Chuyende) cboChuyende_pnlKhoahoc.getSelectedItem();
        if (cd != null) {
            btnDelete_pnlKhoahoc.setEnabled(false);
            btnUpdate_pnlKhoahoc.setEnabled(false);
            dateNgaykhaigiang_pnlKhoahoc.setDate(null);
            txtHocphi_pnlKhoahoc.setText(String.valueOf(cd.getHocPhi()));
            txtThoiluong_pnlKhoahoc.setText(String.valueOf(cd.getThoiLuong()));
            txtNguoitao_pnlKhoahoc.setText(Auth.user.getHoTen() + " (" + Auth.user.getMaNV() + ")");
            txtNgaytao_pnlKhoahoc.setText(XDate.toString(null, "dd/MM/yyyy"));
            txtGhichu_pnlKhoahoc.setText(null);
        }
    }

    private void clearFormNH() {
        txtManguoihoc_pnlNguoihoc.setText(null);
        txtManguoihoc_pnlNguoihoc.setEnabled(true);
        txtHovaten_pnlNguoihoc.setText(null);
        dateNgaysinh_pnlNguoihoc.setDate(null);
        cboGioitinh_pnlNguoihoc.setSelectedIndex(0);
        txtSodienthoai_pnlNguoihoc.setText(null);
        txtEmail_pnlNguoihoc.setText(null);
        txtGhichu_pnlNguoihoc.setText(null);
        btnDelete_pnlNguoihoc.setEnabled(false);
        btnUpdate_pnlNguoihoc.setEnabled(false);
    }

    private void clearFormCD() {
        txtMachuyende_pnlChuyende.setText(null);
        txtTenchuyende_pnlChuyende.setText(null);
        txtThoiluong_pnlChuyende.setText(null);
        txtHocphi_pnlChuyende.setText(null);
        txtMota_pnlChuyende.setText(null);
        fc = null;
        txtMachuyende_pnlChuyende.setEnabled(true);
        btnDelete_pnlChuyende.setEnabled(false);
        btnUpdate_pnlChuyende.setEnabled(false);
        lblImage_pnlChuyende.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_image.gif")));
    }

    private byte[] castImageToByte() {
        String imageDefault = null;
        FileInputStream fis = null;
        byte image[] = new byte[1];
        try {
            if (fc == null) {
                imageDefault = lblImage_pnlChuyende.getIcon().toString().substring(6);
            } else {
                imageDefault = fc.getSelectedFile().getAbsolutePath().toString();
            }

            if (!imageDefault.equals(lblImage_pnlChuyende.getIcon().toString().substring(6))) {
                fis = new FileInputStream(imageDefault);
            }

            if (fis != null) {
                image = new byte[1024];
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                byte b[] = new byte[1024];
                for (int i; (i = fis.read(b)) != -1;) {
                    baos.write(b, 0, i);
                }
                image = baos.toByteArray();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi chuyển ảnh sang Byte");
        }
        return image;
    }

    private void openChuyende() {
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_hocvien.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblHocvien.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_nguoihoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblNguoihoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_khoahoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblKhoahoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblHocvien.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(0, 181, 204));
            lblChuyende.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 1;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlChuyende);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    private void addCD() {
        try {
            byte image[] = castImageToByte();
            if (chuyendeDAO.selectById(txtMachuyende_pnlChuyende.getText()) == null) {
                Chuyende cd = new Chuyende(txtMachuyende_pnlChuyende.getText().trim(), txtTenchuyende_pnlChuyende.getText().trim(), Integer.valueOf(txtThoiluong_pnlChuyende.getText().trim()), Double.valueOf(txtHocphi_pnlChuyende.getText().trim()), image, txtMota_pnlChuyende.getText().trim());
                chuyendeDAO.insert(cd);
                fc = null;
                MsgBox.alert(this, "Thêm Chuyên Đề Thành Công");
                clearFormCD();
            } else {
                MsgBox.alert(this, "Mã Đề Chuyên Này Đã Tồn Tại Trên Hệ Thống");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void addNV() {
        if (nhanvienDAO.selectById(txtManhanvien_pnlNhanvien.getText()) == null) {
            Nhanvien nv = new Nhanvien(txtManhanvien_pnlNhanvien.getText(), txtMatkhau_pnlNhanvien.getText(), txtHoten_pnlNhanvien.getText(), rdoNhanvien_pnlNhanvien.isSelected() ? false : true);
            nhanvienDAO.insert(nv);
            MsgBox.alert(this, "Thêm Nhân Viên Thành Công");
            clearFormNV();
        } else {
            MsgBox.alert(this, "Mã Nhân Viên Này Đã Tồn Tại Trên Hệ Thống");
        }
    }

    private void openKhoahoc() {
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_chuyende.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblChuyende.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_hocvien.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblHocvien.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_nguoihoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblNguoihoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblChuyende.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(0, 181, 204));
            lblHocvien.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 4;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlKhoahoc);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    private void addKH() {
        Chuyende cd = (Chuyende) cboChuyende_pnlKhoahoc.getSelectedItem();
        Khoahoc kh = new Khoahoc();
        kh.setMaKH(0);
        kh.setHocPhi(Double.valueOf(txtHocphi_pnlKhoahoc.getText()));
        kh.setThoiLuong(Integer.valueOf(txtThoiluong_pnlKhoahoc.getText()));
        kh.setNgayKG(XDate.toDate(XDate.toString(dateNgaykhaigiang_pnlKhoahoc.getDate(), "yyyy-MM-dd"), "yyyy-MM-dd"));
        kh.setGhiChu(txtGhichu_pnlKhoahoc.getText());
        kh.setNgayTao(XDate.now());
        kh.setMaNVTao(Auth.user.getMaNV());
        kh.setMaCD(cd.getMaCD());
        khoahocDAO.insert(kh);
        MsgBox.alert(this, "Thêm Khóa Học Thành Công");
        clearFormKH();
    }

    private void openNguoihoc() {
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_chuyende.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblChuyende.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_hocvien.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblHocvien.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_khoahoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblKhoahoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblChuyende.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(0, 181, 204));
            lblHocvien.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 3;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlNguoihoc);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    private void addNH() {
        try {
            if (nguoihocDAO.selectById(txtManguoihoc_pnlNguoihoc.getText()) == null) {
                Nguoihoc nh = new Nguoihoc();
                nh.setMaNH(txtManguoihoc_pnlNguoihoc.getText().trim());
                nh.setHoTen(txtHovaten_pnlNguoihoc.getText().trim());
                nh.setGioiTinh(cboGioitinh_pnlNguoihoc.getSelectedIndex() == 0 ? true : false);
                nh.setNgaySinh(XDate.toDate(XDate.toString(dateNgaysinh_pnlNguoihoc.getDate(), "yyyy-MM-dd"), "yyyy-MM-dd"));
                nh.setSoDienThoai(txtSodienthoai_pnlNguoihoc.getText().trim());
                nh.setEmail(txtEmail_pnlNguoihoc.getText().trim());
                nh.setGhiChu(txtGhichu_pnlNguoihoc.getText().trim());
                nh.setNgayDK(XDate.toDate(null, "yyyy-MM-dd"));
                nh.setMaNVTao(Auth.user.getMaNV());
                nguoihocDAO.insert(nh);
                clearFormNH();
                MsgBox.alert(this, "Thêm người học thành công");
            } else {
                MsgBox.alert(this, "Mã Người Học Này Đã Tồn Tại Trên Hệ Thống");
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm người học không thành công");
        }
    }

    private void openHocvien() {
        if (Auth.isLogin()) {
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_chuyende.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblChuyende.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_nguoihoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblNguoihoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                java.io.File file = new java.io.File("./src/poly/com/icon/icon_khoahoc.gif");
                java.awt.Image img = ResizeImage.buff(file);
                lblKhoahoc.setIcon(new ImageIcon(img));
            } catch (Exception e) {
                e.printStackTrace();
            }
            lblChuyende.setBackground(new Color(0, 181, 204));
            lblKhoahoc.setBackground(new Color(0, 181, 204));
            lblNguoihoc.setBackground(new Color(0, 181, 204));
            lblHocvien.setBackground(new Color(39, 130, 216));
            this.mindMouseClick = false;
            this.mindIndexClick = 2;
            pnlRight.remove(0);
            pnlRight.setLayout(movePnl);
            pnlRight.add(pnlHocvien);
            movePnl.first(pnlRight);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    private void addHV() {
        boolean flag = true;
        try {
            Khoahoc kh = (Khoahoc) cboKhoahoc_pnlHocvien.getSelectedItem();
            int[] arrHV = tblListnguoihoc_pnlHocvien.getSelectedRows();
            if (arrHV.length != 0) {
                for (int x : arrHV) {
                    if (hocvienDAO.selectByHocVienExist((String) tblListnguoihoc_pnlHocvien.getValueAt(x, 0), kh.getMaKH())) {
                        Hocvien hv = new Hocvien();
                        hv.setMaKH(kh.getMaKH());
                        hv.setMaNH((String) tblListnguoihoc_pnlHocvien.getValueAt(x, 0));
                        hocvienDAO.insert(hv);
                        flag = false;
                    }
                }
                if (flag) {
                    MsgBox.alert(this, "Học Viên Này Đã Có Trong Khóa Học Này");
                } else {
                    MsgBox.alert(this, "Thêm thành công học viên");
                }
            } else {
                MsgBox.alert(this, "Vui Lòng Chọn Người Học Cần Thêm Vào");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void showDetailCD(int slr) {
        try {
            Chuyende cd = chuyendeDAO.selectById((String) tblListdanhsach_pnlChuyende.getValueAt(slr, 0));
            byte image[] = cd.getHinh();
            txtMachuyende_pnlChuyende.setText(cd.getMaCD().trim());
            txtMachuyende_pnlChuyende.setEnabled(false);
            txtTenchuyende_pnlChuyende.setText(cd.getTenCD().trim());
            txtThoiluong_pnlChuyende.setText(String.valueOf(cd.getThoiLuong()).trim());
            txtHocphi_pnlChuyende.setText(String.valueOf(cd.getHocPhi()).trim());
            txtMota_pnlChuyende.setText(cd.getMoTa());
            btnDelete_pnlChuyende.setEnabled(true);
            btnUpdate_pnlChuyende.setEnabled(true);
            if (image.length > 1) {
                ByteArrayInputStream bais = new ByteArrayInputStream(cd.getHinh());
                lblImage_pnlChuyende.setIcon(new ImageIcon(ResizeImage.img(lblImage_pnlChuyende, ResizeImage.buff(bais))));
            } else {
                lblImage_pnlChuyende.setIcon(new ImageIcon(getClass().getResource("/poly/com/icon/icon_image.gif")));
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void showDetailKH(int slr) {
        Khoahoc kh = khoahocDAO.selectById((Integer) tblListdanhsach_pnlKhoahoc.getValueAt(slr, 0));
        cboChuyende_pnlKhoahoc.setActionCommand(String.valueOf(kh.getMaKH()));
        DefaultComboBoxModel boxModel = (DefaultComboBoxModel) cboChuyende_pnlKhoahoc.getModel();
        boxModel.setSelectedItem(chuyendeDAO.selectById(kh.getMaCD()));

        dateNgaykhaigiang_pnlKhoahoc.setDate(kh.getNgayKG());
        txtHocphi_pnlKhoahoc.setText(String.valueOf(kh.getHocPhi()).trim());
        txtThoiluong_pnlKhoahoc.setText(String.valueOf(kh.getThoiLuong()).trim());
        txtNguoitao_pnlKhoahoc.setText(nhanvienDAO.selectById(kh.getMaNVTao()).getHoTen() + " (" + kh.getMaNVTao() + ")");
        txtNgaytao_pnlKhoahoc.setText(XDate.toString(kh.getNgayTao(), "dd-MM-yyyy"));
        txtGhichu_pnlKhoahoc.setText(kh.getGhiChu());
        btnDelete_pnlKhoahoc.setEnabled(true);
        btnUpdate_pnlKhoahoc.setEnabled(true);
    }

    private void showDetailNV(int slr) {
        Nhanvien nv = nhanvienDAO.selectById((String) tblListdanhsach_pnlNhanvien.getValueAt(slr, 0));
        txtManhanvien_pnlNhanvien.setText(nv.getMaNV());
        txtManhanvien_pnlNhanvien.setEnabled(false);
        txtHoten_pnlNhanvien.setText(nv.getHoTen());
        txtMatkhau_pnlNhanvien.setText(nv.getMatKhau());
        if (nv.getVaiTro()) {
            rdoTruongphong_pnlNhanvien.setSelected(true);
        } else {
            rdoNhanvien_pnlNhanvien.setSelected(true);
        }
        btnDelete_pnlNhanvien.setEnabled(true);
        btnUpdate_pnlNhanvien.setEnabled(true);

    }

    private void showDetailNH(int slr) {
        Nguoihoc nh = nguoihocDAO.selectById((String) tblListdanhsach_pnlNguoihoc.getValueAt(slr, 0));
        txtManguoihoc_pnlNguoihoc.setText(nh.getMaNH().trim());
        txtManguoihoc_pnlNguoihoc.setEnabled(false);
        txtHovaten_pnlNguoihoc.setText(nh.getHoTen().trim());
        dateNgaysinh_pnlNguoihoc.setDate(nh.getNgaySinh());
        cboGioitinh_pnlNguoihoc.setSelectedItem(nh.getGioiTinh() ? "Nam" : "Nữ");
        txtSodienthoai_pnlNguoihoc.setText(nh.getSoDienThoai().trim());
        txtEmail_pnlNguoihoc.setText(nh.getEmail().trim());
        if (nh.getGhiChu() != null) {
            txtGhichu_pnlNguoihoc.setText(nh.getGhiChu().trim());
        } else {
            txtGhichu_pnlNguoihoc.setText(null);
        }
        btnDelete_pnlNguoihoc.setEnabled(true);
        btnUpdate_pnlNguoihoc.setEnabled(true);
    }

    private void addImage() {
        try {
            fc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
            fc.setDialogTitle("Chọn Ảnh");
            fc.setAcceptAllFileFilterUsed(false);
            FileNameExtensionFilter fnef = new FileNameExtensionFilter("All PNG, GIF, JPEG, JPG", "png", "gif", "jpeg", "jpg", "jfif");
            fc.addChoosableFileFilter(fnef);
            int flag = fc.showOpenDialog(null);
            if (flag == JFileChooser.APPROVE_OPTION) {
                Image image = ResizeImage.img(lblImage_pnlChuyende, ResizeImage.buff(fc.getSelectedFile().getAbsoluteFile()));
                lblImage_pnlChuyende.setIcon(new ImageIcon(image));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void deleteCD() {
        chuyendeDAO.delete(txtMachuyende_pnlChuyende.getText());
        mouseExitedColor(btnDelete_pnlChuyende);
        fillTableCD();
        clearFormCD();
    }

    private void updateCD() {
        if (validate_formCD()) {
            try {
                byte[] image;
                if (lblImage_pnlChuyende.getIcon().toString().contains("@")) {
                    if (fc == null) {
                        Chuyende cd = chuyendeDAO.selectById(txtMachuyende_pnlChuyende.getText());
                        image = cd.getHinh();
                    } else {
                        image = castImageToByte();
                    }
                } else {
                    image = castImageToByte();
                }
                chuyendeDAO.update(new Chuyende(txtMachuyende_pnlChuyende.getText(), txtTenchuyende_pnlChuyende.getText(), Integer.valueOf(txtThoiluong_pnlChuyende.getText()), Double.valueOf(txtHocphi_pnlChuyende.getText()), image, txtMota_pnlChuyende.getText()));
                MsgBox.alert(this, "Cập nhật thành công");
                mouseExitedColor(btnUpdate_pnlChuyende);
                fillTableCD();
                clearFormCD();
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật không thành công");
            }
        }
    }

    private void firstCD() {
        this.indexRowChuyende = 0;
        showDetailCD(this.indexRowChuyende);
        tblListdanhsach_pnlChuyende.changeSelection(this.indexRowChuyende, this.indexRowChuyende, false, false);
    }

    private void prevCD() {
        this.indexRowChuyende--;
        if (this.indexRowChuyende < 0) {
            this.indexRowChuyende = tblListdanhsach_pnlChuyende.getRowCount() - 1;
        }
        showDetailCD(this.indexRowChuyende);
        tblListdanhsach_pnlChuyende.changeSelection(this.indexRowChuyende, this.indexRowChuyende, false, false);
    }

    private void nextCD() {
        this.indexRowChuyende++;
        if (this.indexRowChuyende > tblListdanhsach_pnlChuyende.getRowCount() - 1) {
            this.indexRowChuyende = 0;
        }
        showDetailCD(this.indexRowChuyende);
        tblListdanhsach_pnlChuyende.changeSelection(this.indexRowChuyende, this.indexRowChuyende, false, false);
    }

    private void lastCD() {
        this.indexRowChuyende = tblListdanhsach_pnlChuyende.getRowCount() - 1;
        showDetailCD(this.indexRowChuyende);
        tblListdanhsach_pnlChuyende.changeSelection(this.indexRowChuyende, this.indexRowChuyende, false, false);
    }

    private void deleteKH() {
        try {
            Khoahoc cd = khoahocDAO.selectById((Integer) tblListdanhsach_pnlKhoahoc.getValueAt(this.indexRowKhoahoc, 0));
            khoahocDAO.delete(cd.getMaKH());
            MsgBox.alert(this, "Xóa thành công");
            mouseExitedColor(btnDelete_pnlKhoahoc);
            fillTableKH();
            clearFormKH();
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa không thành công");
        }
    }

    private void updateKH() {
        if (validate_formKH()) {
            try {
                Chuyende cd = (Chuyende) cboChuyende_pnlKhoahoc.getSelectedItem();
                Khoahoc kh = new Khoahoc();
                kh.setMaKH(Integer.valueOf(cboChuyende_pnlKhoahoc.getActionCommand()));
                kh.setHocPhi(Double.valueOf(txtHocphi_pnlKhoahoc.getText()));
                kh.setThoiLuong(Integer.valueOf(txtThoiluong_pnlKhoahoc.getText()));
                kh.setNgayKG(XDate.toDate(XDate.toString(dateNgaykhaigiang_pnlKhoahoc.getDate(), "yyyy-MM-dd"), "yyyy-MM-dd"));
                kh.setGhiChu(txtGhichu_pnlKhoahoc.getText());
                kh.setNgayTao(XDate.now());
                kh.setMaNVTao(Auth.user.getMaNV());
                kh.setMaCD(cd.getMaCD());
                khoahocDAO.update(kh);
                MsgBox.alert(this, "Cập nhật thành công");
                mouseExitedColor(btnUpdate_pnlKhoahoc);
                fillTableKH();
                fillTableToCboNamTK();
                clearFormKH();
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật không thành công");
            }
        }
    }

    private void firstKH() {
        this.indexRowKhoahoc = 0;
        showDetailKH(this.indexRowKhoahoc);
        tblListdanhsach_pnlKhoahoc.changeSelection(this.indexRowKhoahoc, this.indexRowKhoahoc, false, false);
    }

    private void prevKH() {
        this.indexRowKhoahoc--;
        if (this.indexRowKhoahoc < 0) {
            this.indexRowKhoahoc = tblListdanhsach_pnlKhoahoc.getRowCount() - 1;
        }
        showDetailKH(this.indexRowKhoahoc);
        tblListdanhsach_pnlKhoahoc.changeSelection(this.indexRowKhoahoc, this.indexRowKhoahoc, false, false);
    }

    private void nextKH() {
        this.indexRowKhoahoc++;
        if (this.indexRowKhoahoc > tblListdanhsach_pnlKhoahoc.getRowCount() - 1) {
            this.indexRowKhoahoc = 0;
        }
        showDetailKH(this.indexRowKhoahoc);
        tblListdanhsach_pnlKhoahoc.changeSelection(this.indexRowKhoahoc, this.indexRowKhoahoc, false, false);
    }

    private void lastKH() {
        this.indexRowKhoahoc = tblListdanhsach_pnlKhoahoc.getRowCount() - 1;
        showDetailKH(this.indexRowKhoahoc);
        tblListdanhsach_pnlKhoahoc.changeSelection(this.indexRowKhoahoc, this.indexRowKhoahoc, false, false);
    }

    private void deleteNV() {
        try {
            nhanvienDAO.delete(txtManhanvien_pnlNhanvien.getText());
            MsgBox.alert(this, "Xóa thành công");
            fillTableNV();
            clearFormNV();
            mouseExitedColor(btnDelete_pnlNhanvien);
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại");
        }
    }

    private void updateNV() {
        if (validate_formNV()) {
            try {
                Nhanvien nv = new Nhanvien(txtManhanvien_pnlNhanvien.getText(), txtMatkhau_pnlNhanvien.getText(), txtHoten_pnlNhanvien.getText(), rdoNhanvien_pnlNhanvien.isSelected() ? false : true);
                nhanvienDAO.update(nv);
                MsgBox.alert(this, "Cập nhật thành công");
                mouseExitedColor(btnUpdate_pnlNhanvien);
                if (nv.getMaNV().equals(Auth.user.getMaNV())) {
                    Auth.clear();
                    Auth.user = nv;
                }
                fillTableCD();
                fillTableHV();
                fillTableKH();
                fillTableNH();
                fillTableNV();
                clearFormNV();
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại");
            }
        }
    }

    private void firstNV() {
        this.indexRowNhanvien = 0;
        showDetailNV(this.indexRowNhanvien);
        tblListdanhsach_pnlNhanvien.changeSelection(this.indexRowNhanvien, this.indexRowNhanvien, false, false);
    }

    private void prevNV() {
        this.indexRowNhanvien--;
        if (this.indexRowNhanvien < 0) {
            this.indexRowNhanvien = tblListdanhsach_pnlNhanvien.getRowCount() - 1;
        }
        showDetailNV(this.indexRowNhanvien);
        tblListdanhsach_pnlNhanvien.changeSelection(this.indexRowNhanvien, this.indexRowNhanvien, false, false);
    }

    private void nextNV() {
        this.indexRowNhanvien++;
        if (this.indexRowNhanvien > tblListdanhsach_pnlNhanvien.getRowCount() - 1) {
            this.indexRowNhanvien = 0;
        }
        showDetailNV(this.indexRowNhanvien);
        tblListdanhsach_pnlNhanvien.changeSelection(this.indexRowNhanvien, this.indexRowNhanvien, false, false);
    }

    private void lastNV() {
        this.indexRowNhanvien = tblListdanhsach_pnlNhanvien.getRowCount() - 1;
        showDetailNV(this.indexRowNhanvien);
        tblListdanhsach_pnlNhanvien.changeSelection(this.indexRowNhanvien, this.indexRowNhanvien, false, false);
    }

    private void deleteNH() {
        try {
            nguoihocDAO.delete(txtManguoihoc_pnlNguoihoc.getText());
            mouseExitedColor(btnDelete_pnlNguoihoc);
            fillTableNH();
            fillTableTKNguoiHoc();
            clearFormNH();
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa không thành công");
        }
    }

    private void updateNH() {
        try {
            Nguoihoc nh = new Nguoihoc();
            nh.setMaNH(txtManguoihoc_pnlNguoihoc.getText().trim());
            nh.setHoTen(txtHovaten_pnlNguoihoc.getText().trim());
            nh.setGioiTinh(cboGioitinh_pnlNguoihoc.getSelectedIndex() == 0 ? true : false);
            nh.setNgaySinh(XDate.toDate(XDate.toString(dateNgaysinh_pnlNguoihoc.getDate(), "yyyy-MM-dd"), "yyyy-MM-dd"));
            nh.setSoDienThoai(txtSodienthoai_pnlNguoihoc.getText().trim());
            nh.setEmail(txtEmail_pnlNguoihoc.getText().trim());
            nh.setGhiChu(txtGhichu_pnlNguoihoc.getText().trim());
            nh.setNgayDK(nguoihocDAO.selectById(txtManguoihoc_pnlNguoihoc.getText()).getNgayDK());
            nh.setMaNVTao(Auth.user.getMaNV());
            nguoihocDAO.update(nh);
            MsgBox.alert(this, "Cập nhật thành công");
            fillTableNH();
            fillTableTKNguoiHoc();
            clearFormNH();
            mouseExitedColor(btnUpdate_pnlNguoihoc);
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật không thành công");
        }
    }

    private void firstNH() {
        this.indexRowNguoihoc = 0;
        showDetailNH(this.indexRowNguoihoc);
        tblListdanhsach_pnlNguoihoc.changeSelection(this.indexRowNguoihoc, this.indexRowNguoihoc, false, false);
    }

    private void prevNH() {
        this.indexRowNguoihoc--;
        if (this.indexRowNguoihoc < 0) {
            this.indexRowNguoihoc = tblListdanhsach_pnlNguoihoc.getRowCount() - 1;
        }
        showDetailNH(this.indexRowNguoihoc);
        tblListdanhsach_pnlNguoihoc.changeSelection(this.indexRowNguoihoc, this.indexRowNguoihoc, false, false);
    }

    private void nextNH() {
        this.indexRowNguoihoc++;
        if (this.indexRowNguoihoc > tblListdanhsach_pnlNguoihoc.getRowCount() - 1) {
            this.indexRowNguoihoc = 0;
        }
        showDetailNH(this.indexRowNguoihoc);
        tblListdanhsach_pnlNguoihoc.changeSelection(this.indexRowNguoihoc, this.indexRowNguoihoc, false, false);
    }

    private void lastNH() {
        this.indexRowNguoihoc = tblListdanhsach_pnlNguoihoc.getRowCount() - 1;
        showDetailNH(this.indexRowNguoihoc);
        tblListdanhsach_pnlNguoihoc.changeSelection(this.indexRowNguoihoc, this.indexRowNguoihoc, false, false);
    }

    private void deleteHV() {
        int arrHV[] = tblListhocvien__pnlHocvien.getSelectedRows();
        if (arrHV.length > 0 && MsgBox.confirm(this, "Bạn muốn xóa học viên này?")) {
            for (int x : arrHV) {
                int maHV = (Integer) tblListhocvien__pnlHocvien.getValueAt(x, 1);
                hocvienDAO.delete(maHV);
            }
            MsgBox.alert(this, "Xóa Thành Công");
            mouseExitedColor(btnRemove_pnlHocvien);
            fillTableHV();
            fillTableThongKeHV();
            fillTableTKDiemChuyenDe();
            fillTableTKDoanhThu();
        } else {
            MsgBox.alert(this, "Vui lòng chọn học viên cần xóa");
        }
    }

    private void updateScore() {
        boolean flag = false;
        int rows = tblListhocvien__pnlHocvien.getRowCount();
        Khoahoc kh = (Khoahoc) cboKhoahoc_pnlHocvien.getSelectedItem();
        for (int i = 0; i < rows; i++) {
            Object score = tblListhocvien__pnlHocvien.getValueAt(i, 4);
            int maHV = (int) tblListhocvien__pnlHocvien.getValueAt(i, 1);
            String maNH = (String) tblListhocvien__pnlHocvien.getValueAt(i, 2);
            try {
                Hocvien hv = new Hocvien(maHV, kh.getMaKH(), maNH, Double.valueOf(String.valueOf(score)));
                if (Double.valueOf(String.valueOf(score)) <= 10 && Double.valueOf(String.valueOf(score)) >= -1) {
                    hocvienDAO.update(hv);
                    flag = true;
                } else {
                    flag = false;
                    MsgBox.alert(this, "Vui lòng nhập số hợp lệ!!");
                    return;
                }
            } catch (Exception e) {
                MsgBox.alert(this, "Vui lòng nhập số");
            }
        }
        if (flag) {
            MsgBox.alert(this, "Cập Nhật Thành Công");
        }
        fillTableHV();
        fillTableThongKeHV();
        fillTableTKDiemChuyenDe();
    }

    private void find() {
        DefaultTableModel model_pnlNH = (DefaultTableModel) tblListnguoihoc_pnlHocvien.getModel();
        model_pnlNH.setRowCount(0);
        String find = txtFind_pnlHocvien.getText().trim();
        try {
            for (Nguoihoc x : nguoihocDAO.selectFindNH(find)) {
                Vector vectorNH = new Vector();
                vectorNH.add(x.getMaNH());
                vectorNH.add(x.getHoTen());
                vectorNH.add(x.getGioiTinh() ? "Nam" : "Nữ");
                vectorNH.add(XDate.toString(x.getNgaySinh(), "dd/MM/yyyy"));
                vectorNH.add(x.getSoDienThoai());
                vectorNH.add(x.getEmail());
                model_pnlNH.addRow(vectorNH);
            }
            if (tblListnguoihoc_pnlHocvien.getRowCount() > 0) {
                btnAdd_pnlHocvien.setEnabled(true);
            } else {
                btnAdd_pnlHocvien.setEnabled(false);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn Error");
        }
    }

    private void checkStaff() {
        if (!Auth.isManager()) {
            btnDelete_pnlChuyende.setVisible(false);
            btnDelete_pnlKhoahoc.setVisible(false);
            btnDelete_pnlNguoihoc.setVisible(false);
            btnDelete_pnlNhanvien.setVisible(false);
            btnRemove_pnlHocvien.setVisible(false);
            mnuQuanLy.remove(mniNhanvien);
            mnuQuanLy.remove(jSeparator3);
            mnuThongKe.remove(mniDoanhthu);
            mnuThongKe.remove(jSeparator5);
            tabbedPaneThongke.remove(3);
        }
    }

    private void openHuongDan() {
//        try {
//            Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
//            if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
//                desktop.browse(new URI("https://translate.google.com.vn/"));
//            }
//        } catch (Exception e) {
//            MsgBox.alert(this, "Desktop không hỗ trợ mở trình duyệt");
//        }
        try {
            File file = new File("./help/huongdan.html");
            String webpage = file.getAbsolutePath();
            String tam = webpage.substring(0, webpage.indexOf(".\\"));
            String tam1 = webpage.substring(webpage.lastIndexOf(".\\") + 2);
            webpage = tam + tam1;
            Runtime.getRuntime().exec("cmd /c start " + webpage);
        } catch (Exception e) {
            MsgBox.alert(this, "Không tìm thấy file huongdan.html");
        }
    }

    private void exportExcelHV() {
        try {
            if (!excelHocvien()) {
                JFileChooser fc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
                fc.setDialogTitle("Save AS");
                fc.removeChoosableFileFilter(fc.getFileFilter());
                fc.addChoosableFileFilter(new FileNameExtensionFilter("Excel (.xlsx)", "xlsx"));
                if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    if (!file.getName().contains(".xlsx")) {
                        file = new File(fc.getSelectedFile().getAbsolutePath() + ".xlsx");
                    }
                    System.out.println(file.getAbsolutePath());
                    XExcel.export(file);
                    Runtime.getRuntime().exec("cmd /c start " + file.getAbsolutePath());
                }
            } else {
                MsgBox.alert(null, "Vui Lòng Chọn Chuyên Đề Để Xuất Excel");
            }
        } catch (java.io.FileNotFoundException e) {
            MsgBox.alert(this, "Tệp đang mở vui lòng đóng và thử lại");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean excelHocvien() {
        if (cboChuyende_pnlHocvien.getSelectedIndex() != -1) {
            String title[] = {"CHUYÊN ĐỀ", "KHÓA HỌC"};
            XExcel.setWorkbook(new XSSFWorkbook());
            XExcel.setSheet();
            Chuyende cd = (Chuyende) cboChuyende_pnlHocvien.getSelectedItem();
            Khoahoc kh = (Khoahoc) cboKhoahoc_pnlHocvien.getSelectedItem();
            XExcel.setRow(0);
            Cell cellCD = XExcel.cells(0);
            cellCD.setCellValue(title[0]);
            cellCD.setCellStyle(XExcel.styleCellTitel());
            for (int i = 0; i < 4; i++) {
                Cell cellContenCD = XExcel.cells(i + 1);
                if (cellContenCD.getColumnIndex() == 1) {
                    cellContenCD.setCellValue(cd.getTenCD());
                }
                if (i == 0) {
                    XExcel.addMergedRegion(i, i, 1, 4);
                }
                cellContenCD.setCellStyle(XExcel.styleCellConten());
            }
            XExcel.setRow(1);
            Cell cellKH = XExcel.cells(0);
            cellKH.setCellValue(title[1]);
            cellKH.setCellStyle(XExcel.styleCellTitel());
            for (int i = 0; i < 4; i++) {
                Cell cellContenKH = XExcel.cells(i + 1);
                //  XExcel.getSheet().autoSizeColumn(i);
                if (cellContenKH.getColumnIndex() == 1) {
                    cellContenKH.setCellValue(kh.getMaCD() + " (" + XDate.toString(kh.getNgayKG(), "dd/MM/YYYY") + ")");
                }
                if (i == 1) {
                    XExcel.addMergedRegion(i, i, 1, 4);
                }
                cellContenKH.setCellStyle(XExcel.styleCellConten());
            }

            XExcel.setRow(2);
            for (int i = 0; i < tblListhocvien__pnlHocvien.getColumnCount(); i++) {
                Cell cell = XExcel.cells(i);
                cell.setCellValue(tblListhocvien__pnlHocvien.getColumnName(i));
                cell.setCellStyle(XExcel.styleCellColumn());
            }
            Integer stt[] = new Integer[tblListhocvien__pnlHocvien.getRowCount()];
            Integer maHV[] = new Integer[tblListhocvien__pnlHocvien.getRowCount()];
            String maNH[] = new String[tblListhocvien__pnlHocvien.getRowCount()];
            String Hoten[] = new String[tblListhocvien__pnlHocvien.getRowCount()];
            Double diem[] = new Double[tblListhocvien__pnlHocvien.getRowCount()];
            for (int i = 0; i < tblListhocvien__pnlHocvien.getRowCount(); i++) {
                stt[i] = (Integer) tblListhocvien__pnlHocvien.getValueAt(i, 0);
                maHV[i] = (Integer) tblListhocvien__pnlHocvien.getValueAt(i, 1);
                maNH[i] = (String) tblListhocvien__pnlHocvien.getValueAt(i, 2);
                Hoten[i] = (String) tblListhocvien__pnlHocvien.getValueAt(i, 3);
                diem[i] = (Double) tblListhocvien__pnlHocvien.getValueAt(i, 4);
            }
            for (int i = 0; i < tblListhocvien__pnlHocvien.getRowCount(); i++) {
                XExcel.setRow(i + 3);
                for (int j = 0; j < 5; j++) {
                    Cell cell = XExcel.cells(j);
                    cell.setCellStyle(XExcel.styleCellConten());
                    if (cell.getColumnIndex() == 0) {
                        cell.setCellValue(stt[i]);
                    }
                    if (cell.getColumnIndex() == 1) {
                        cell.setCellValue(maHV[i]);
                    }
                    if (cell.getColumnIndex() == 2) {
                        cell.setCellValue(maNH[i]);
                    }
                    if (cell.getColumnIndex() == 3) {
                        cell.setCellValue(Hoten[i]);
                    }
                    if (cell.getColumnIndex() == 4) {
                        cell.setCellValue(diem[i]);
                    }
                    XExcel.getSheet().autoSizeColumn(j);
                }
            }
            return false;
        }
        return true;
    }

    private void exportExcelCD() {
        try {
            if (!excelChuyende()) {
                JFileChooser fc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
                fc.setDialogTitle("Save AS");
                fc.removeChoosableFileFilter(fc.getFileFilter());
                fc.addChoosableFileFilter(new FileNameExtensionFilter("Excel (.xlsx)", "xlsx"));
                if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    if (!file.getName().contains(".xlsx")) {
                        file = new File(fc.getSelectedFile().getAbsolutePath() + ".xlsx");
                    }
                    System.out.println(file.getAbsolutePath());
                    XExcel.export(file);
                    Runtime.getRuntime().exec("cmd /c start " + file.getAbsolutePath());
                } else {
                    MsgBox.alert(null, "Không Có Dữ Liệu Chuyên Đề Nào Trên Hệ Thông");
                }
            }
        } catch (java.io.FileNotFoundException e) {
            MsgBox.alert(this, "Tệp đang mở vui lòng đóng và thử lại");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean excelChuyende() {
        if (tblListdanhsach_pnlChuyende.getRowCount() != 0) {
            java.util.List<Chuyende> list = chuyendeDAO.selectAll();
            XExcel.setWorkbook(new XSSFWorkbook());
            XExcel.setSheet();
            XExcel.setRow(0);

            for (int i = 0; i < tblListdanhsach_pnlChuyende.getColumnCount(); i++) {
                Cell cellTitle = XExcel.cells(i);
                cellTitle.setCellStyle(XExcel.styleCellTitel());
                cellTitle.setCellValue("DANH SÁCH KHÓA HỌC");
                if (cellTitle.getColumnIndex() == 0) {
                    XExcel.addMergedRegion(0, 0, 0, 4);
                }
                if (cellTitle.getColumnIndex() > 0) {
                    cellTitle = XExcel.cells(i);
                    cellTitle.setCellStyle(XExcel.styleCellTitel());
                }
            }
            XExcel.setRow(1);
            for (int i = 0; i < tblListdanhsach_pnlChuyende.getColumnCount(); i++) {
                Cell cell = XExcel.cells(i);
                cell.setCellValue(tblListdanhsach_pnlChuyende.getColumnName(i));
                cell.setCellStyle(XExcel.styleCellColumn());
            }
            Cell cellGC = XExcel.cells(4);
            cellGC.setCellValue("Mô Tả");
            cellGC.setCellStyle(XExcel.styleCellColumn());
            String maCD[] = new String[tblListdanhsach_pnlChuyende.getRowCount()];
            String tenCD[] = new String[tblListdanhsach_pnlChuyende.getRowCount()];
            Double hocPhi[] = new Double[tblListdanhsach_pnlChuyende.getRowCount()];
            Integer thoiLuong[] = new Integer[tblListdanhsach_pnlChuyende.getRowCount()];
            String ghiChu[] = new String[tblListdanhsach_pnlChuyende.getRowCount()];
            for (int i = 0; i < tblListdanhsach_pnlChuyende.getRowCount(); i++) {
                maCD[i] = list.get(i).getMaCD();
                tenCD[i] = list.get(i).getTenCD();
                hocPhi[i] = list.get(i).getHocPhi();
                thoiLuong[i] = list.get(i).getThoiLuong();
                ghiChu[i] = list.get(i).getMoTa();
            }

            for (int i = 0; i < tblListdanhsach_pnlChuyende.getRowCount(); i++) {
                XExcel.setRow(i + 2);
                for (int j = 0; j < 5; j++) {
                    Cell cell = XExcel.cells(j);
                    cell.setCellStyle(XExcel.styleCellConten());
                    if (cell.getColumnIndex() == 0) {
                        cell.setCellValue(maCD[i]);
                    }
                    if (cell.getColumnIndex() == 1) {
                        cell.setCellValue(tenCD[i]);
                    }
                    if (cell.getColumnIndex() == 2) {
                        cell.setCellValue(hocPhi[i]);
                    }
                    if (cell.getColumnIndex() == 3) {
                        cell.setCellValue(thoiLuong[i]);
                    }
                    if (cell.getColumnIndex() == 4) {
                        cell.setCellValue(ghiChu[i]);
                    }
                    XExcel.getSheet().autoSizeColumn(j);
                }
            }
            return false;
        }
        return true;
    }

    private void exportExcelNH() {
        try {
            if (!excelNguoihoc()) {
                JFileChooser fc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
                fc.setDialogTitle("Save AS");
                fc.removeChoosableFileFilter(fc.getFileFilter());
                fc.addChoosableFileFilter(new FileNameExtensionFilter("Excel (.xlsx)", "xlsx"));
                if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    if (!file.getName().contains(".xlsx")) {
                        file = new File(fc.getSelectedFile().getAbsolutePath() + ".xlsx");
                    }
                    System.out.println(file.getAbsolutePath());
                    XExcel.export(file);
                    Runtime.getRuntime().exec("cmd /c start " + file.getAbsolutePath());
                }
            } else {
                MsgBox.alert(null, "Không Có Dữ Liệu Người Học Nào");
            }
        } catch (java.io.FileNotFoundException e) {
            MsgBox.alert(this, "Tệp đang mở vui lòng đóng và thử lại");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean excelNguoihoc() {
        if (tblListdanhsach_pnlNguoihoc.getRowCount() != 0) {
            java.util.List<Nguoihoc> list = nguoihocDAO.selectAll();
            XExcel.setWorkbook(new XSSFWorkbook());
            XExcel.setSheet();
            XExcel.setRow(0);

            for (int i = 0; i < tblListdanhsach_pnlNguoihoc.getColumnCount(); i++) {
                Cell cellTitle = XExcel.cells(i);
                cellTitle.setCellStyle(XExcel.styleCellTitel());
                cellTitle.setCellValue("DANH SÁCH NGƯỜI HỌC");
                if (cellTitle.getColumnIndex() == 0) {
                    XExcel.addMergedRegion(0, 0, 0, 7);
                }
                if (cellTitle.getColumnIndex() > 0) {
                    cellTitle = XExcel.cells(i);
                    cellTitle.setCellStyle(XExcel.styleCellTitel());
                }
            }
            XExcel.setRow(1);
            for (int i = 0; i < tblListdanhsach_pnlNguoihoc.getColumnCount(); i++) {
                Cell cell = XExcel.cells(i);
                cell.setCellValue(tblListdanhsach_pnlNguoihoc.getColumnName(i));
                cell.setCellStyle(XExcel.styleCellColumn());
            }
            String maNH[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            String hoTen[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            String gioiTinh[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            String ngaySinh[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            String SDT[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            String Email[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            String nhanVienTao[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            String ngayDK[] = new String[tblListdanhsach_pnlNguoihoc.getRowCount()];
            for (int i = 0; i < tblListdanhsach_pnlNguoihoc.getRowCount(); i++) {
                maNH[i] = list.get(i).getMaNH();
                hoTen[i] = list.get(i).getHoTen();
                gioiTinh[i] = list.get(i).getGioiTinh() ? "Nam" : "Nữ";
                ngaySinh[i] = XDate.toString(list.get(i).getNgaySinh(), "dd/MM/yyyy");
                SDT[i] = list.get(i).getSoDienThoai();
                Email[i] = list.get(i).getEmail();
                nhanVienTao[i] = "(" + list.get(i).getMaNVTao() + ") " + nhanvienDAO.selectById(list.get(i).getMaNVTao()).getHoTen();
                ngayDK[i] = XDate.toString(list.get(i).getNgayDK(), "dd/MM/yyyy");
            }

            for (int i = 0; i < tblListdanhsach_pnlNguoihoc.getRowCount(); i++) {
                XExcel.setRow(i + 2);
                for (int j = 0; j < 8; j++) {
                    Cell cell = XExcel.cells(j);
                    cell.setCellStyle(XExcel.styleCellConten());
                    if (cell.getColumnIndex() == 0) {
                        cell.setCellValue(maNH[i]);
                    }
                    if (cell.getColumnIndex() == 1) {
                        cell.setCellValue(hoTen[i]);
                    }
                    if (cell.getColumnIndex() == 2) {
                        cell.setCellValue(gioiTinh[i]);
                    }
                    if (cell.getColumnIndex() == 3) {
                        cell.setCellValue(ngaySinh[i]);
                    }
                    if (cell.getColumnIndex() == 4) {
                        cell.setCellValue(SDT[i]);
                    }
                    if (cell.getColumnIndex() == 5) {
                        cell.setCellValue(Email[i]);
                    }
                    if (cell.getColumnIndex() == 6) {
                        cell.setCellValue(nhanVienTao[i]);
                    }
                    if (cell.getColumnIndex() == 7) {
                        cell.setCellValue(ngayDK[i]);
                    }
                    XExcel.getSheet().autoSizeColumn(j);
                }
            }
            return false;
        }
        return true;
    }

    private void exportExcelKH() {
        try {
            if (excelKhoahoc()) {
                JFileChooser fc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
                fc.setDialogTitle("Save AS");
                fc.removeChoosableFileFilter(fc.getFileFilter());
                fc.addChoosableFileFilter(new FileNameExtensionFilter("Excel (.xlsx)", "xlsx"));
                if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    if (!file.getName().contains(".xlsx")) {
                        file = new File(fc.getSelectedFile().getAbsolutePath() + ".xlsx");
                    }
                    System.out.println(file.getAbsolutePath());
                    XExcel.export(file);
                    Runtime.getRuntime().exec("cmd /c start " + file.getAbsolutePath());
                }
            } else {
                MsgBox.alert(null, "Không Có Dữ Liệu Khóa Học Nào Trên Hệ Thống");
            }

        } catch (java.io.FileNotFoundException e) {
            MsgBox.alert(this, "Tệp đang mở vui lòng đóng và thử lại");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean excelKhoahoc() {
        if (tblListdanhsach_pnlKhoahoc.getRowCount() != 0) {
            java.util.List<Khoahoc> list = khoahocDAO.selectAll();
            XExcel.setWorkbook(new XSSFWorkbook());
            XExcel.setSheet();
            XExcel.setRow(0);

            for (int i = 0; i < tblListdanhsach_pnlKhoahoc.getColumnCount(); i++) {
                Cell cellTitle = XExcel.cells(i);
                cellTitle.setCellStyle(XExcel.styleCellTitel());
                cellTitle.setCellValue("DANH SÁCH KHÓA HỌC");
                if (cellTitle.getColumnIndex() == 0) {
                    XExcel.addMergedRegion(0, 0, 0, 7);
                }
                if (cellTitle.getColumnIndex() > 0) {
                    cellTitle = XExcel.cells(i);
                    cellTitle.setCellStyle(XExcel.styleCellTitel());
                }
            }
            XExcel.setRow(1);
            for (int i = 0; i < tblListdanhsach_pnlKhoahoc.getColumnCount(); i++) {
                Cell cell = XExcel.cells(i);
                cell.setCellValue(tblListdanhsach_pnlKhoahoc.getColumnName(i));
                cell.setCellStyle(XExcel.styleCellColumn());
            }
            Cell cellGC = XExcel.cells(7);
            cellGC.setCellValue("Ghi Chú");
            cellGC.setCellStyle(XExcel.styleCellColumn());
            Integer maKH[] = new Integer[tblListdanhsach_pnlKhoahoc.getRowCount()];
            String chuyenDe[] = new String[tblListdanhsach_pnlKhoahoc.getRowCount()];
            Integer thoiLuong[] = new Integer[tblListdanhsach_pnlKhoahoc.getRowCount()];
            Double hocPhi[] = new Double[tblListdanhsach_pnlKhoahoc.getRowCount()];
            String ngayKG[] = new String[tblListdanhsach_pnlKhoahoc.getRowCount()];
            String nhanVienTao[] = new String[tblListdanhsach_pnlKhoahoc.getRowCount()];
            String ngayTao[] = new String[tblListdanhsach_pnlKhoahoc.getRowCount()];
            String ghiChu[] = new String[tblListdanhsach_pnlKhoahoc.getRowCount()];
            for (int i = 0; i < tblListdanhsach_pnlKhoahoc.getRowCount(); i++) {
                maKH[i] = list.get(i).getMaKH();
                chuyenDe[i] = list.get(i).getMaCD();
                thoiLuong[i] = list.get(i).getThoiLuong();
                hocPhi[i] = list.get(i).getHocPhi();
                ngayKG[i] = XDate.toString(list.get(i).getNgayKG(), "dd/MM/yyyy");
                nhanVienTao[i] = "(" + list.get(i).getMaNVTao() + ") " + nhanvienDAO.selectById(list.get(i).getMaNVTao()).getHoTen();
                ngayTao[i] = XDate.toString(list.get(i).getNgayTao(), "dd/MM/yyyy");
                ghiChu[i] = list.get(i).getGhiChu();
            }
            for (int i = 0; i < tblListdanhsach_pnlKhoahoc.getRowCount(); i++) {
                XExcel.setRow(i + 2);
                for (int j = 0; j < 8; j++) {
                    Cell cell = XExcel.cells(j);
                    cell.setCellStyle(XExcel.styleCellConten());
                    if (cell.getColumnIndex() == 0) {
                        cell.setCellValue(maKH[i]);
                    }
                    if (cell.getColumnIndex() == 1) {
                        cell.setCellValue(chuyenDe[i]);
                    }
                    if (cell.getColumnIndex() == 2) {
                        cell.setCellValue(thoiLuong[i]);
                    }
                    if (cell.getColumnIndex() == 3) {
                        cell.setCellValue(hocPhi[i]);
                    }
                    if (cell.getColumnIndex() == 4) {
                        cell.setCellValue(ngayKG[i]);
                    }
                    if (cell.getColumnIndex() == 5) {
                        cell.setCellValue(nhanVienTao[i]);
                    }
                    if (cell.getColumnIndex() == 6) {
                        cell.setCellValue(ngayTao[i]);
                    }
                    if (cell.getColumnIndex() == 7) {
                        cell.setCellValue(ghiChu[i]);
                    }
                    XExcel.getSheet().autoSizeColumn(j);
                }
            }
            return false;
        }
        return true;
    }

    private void exportExcelTK() {
        try {
            if (!excelThongke()) {
                JFileChooser fc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
                fc.setDialogTitle("Save AS");
                fc.removeChoosableFileFilter(fc.getFileFilter());
                fc.addChoosableFileFilter(new FileNameExtensionFilter("Excel (.xlsx)", "xlsx"));
                if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    if (!file.getName().contains(".xlsx")) {
                        file = new File(fc.getSelectedFile().getAbsolutePath() + ".xlsx");
                    }
                    System.out.println(file.getAbsolutePath());
                    XExcel.export(file);
                    Runtime.getRuntime().exec("cmd /c start " + file.getAbsolutePath());
                }
            } else {
                MsgBox.alert(null, "Khóa Học Của Thống Kê Bảng Điểm Hiện Tại Không Có Dữ Liệu Để Xuất Excel");
            }
        } catch (java.io.FileNotFoundException e) {
            MsgBox.alert(this, "Tệp đang mở vui lòng đóng và thử lại");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean excelThongke() {
        if (tblListbangdien_pnlThongke.getRowCount() != 0) {
            Khoahoc kh = (Khoahoc) cboKhoahocj_pnlThongke.getSelectedItem();
            java.util.List<Object[]> listBangdiem = thongKeDAO.getBangDiem(kh.getMaKH());
            java.util.List<Object[]> listLuongNH = thongKeDAO.getLuongNguoiHoc();
            XExcel.setWorkbook(new XSSFWorkbook());
            XExcel.setSheet();
            XExcel.setRow(0);
            for (int i = 0; i < tblListbangdien_pnlThongke.getColumnCount(); i++) {
                Cell cellTitle = XExcel.cells(i);
                cellTitle.setCellStyle(XExcel.styleCellTitel());
                cellTitle.setCellValue("DANH SÁCH THỐNG KÊ BẢNG ĐIỂM");
                if (cellTitle.getColumnIndex() == 0) {
                    XExcel.addMergedRegion(0, 0, 0, 3);
                }
                if (cellTitle.getColumnIndex() > 0) {
                    cellTitle = XExcel.cells(i);
                    cellTitle.setCellStyle(XExcel.styleCellTitel());
                }
            }
            for (int i = tblListbangdien_pnlThongke.getColumnCount() + 1; i < tblListbangdien_pnlThongke.getColumnCount() + 5; i++) {
                Cell cellTitle = XExcel.cells(i);
                cellTitle.setCellStyle(XExcel.styleCellTitel());
                cellTitle.setCellValue("DANH SÁCH NGƯỜI HỌC CÁC NĂM");
                if (cellTitle.getColumnIndex() == tblListbangdien_pnlThongke.getColumnCount() + 1) {
                    XExcel.addMergedRegion(0, 0, tblListbangdien_pnlThongke.getColumnCount() + 1, tblListbangdien_pnlThongke.getColumnCount() + 4);
                }
                if (cellTitle.getColumnIndex() > tblListbangdien_pnlThongke.getColumnCount() + 1) {
                    cellTitle = XExcel.cells(i);
                    cellTitle.setCellStyle(XExcel.styleCellTitel());
                }
            }

            XExcel.setRow(1);
            for (int i = 0; i < tblListbangdien_pnlThongke.getColumnCount(); i++) {
                Cell cellTitle = XExcel.cells(i);
                if (cellTitle.getColumnIndex() == 0) {
                    cellTitle.setCellStyle(XExcel.styleCellTitel());
                    cellTitle.setCellValue("KHÓA HỌC");
                }
                if (cellTitle.getColumnIndex() == 1) {
                    cellTitle.setCellStyle(XExcel.styleCellConten());
                    cellTitle.setCellValue(kh.getMaCD() + " (" + XDate.toString(kh.getNgayKG(), "dd/MM/YYYY") + ")");
                    XExcel.addMergedRegion(1, 1, 1, 3);
                }
                if (cellTitle.getColumnIndex() > 1) {
                    cellTitle = XExcel.cells(i);
                    cellTitle.setCellStyle(XExcel.styleCellConten());
                }
            }
            for (int i = 0; i < tblListnguoihoc_pnlThongke.getColumnCount(); i++) {
                Cell cell = XExcel.cells(i + 5);
                cell.setCellValue(tblListnguoihoc_pnlThongke.getColumnName(i));
                cell.setCellStyle(XExcel.styleCellColumn());
            }
            for (int i = 0; i < tblListbangdien_pnlThongke.getRowCount(); i++) {
                XExcel.setRow(i + 3);
                for (int j = 0; j < tblListbangdien_pnlThongke.getColumnCount(); j++) {
                    Cell cell = XExcel.cells(j);
                    cell.setCellStyle(XExcel.styleCellConten());
                    if (cell.getColumnIndex() == 0) {
                        cell.setCellValue((String) listBangdiem.get(i)[0]);
                    }
                    if (cell.getColumnIndex() == 1) {
                        cell.setCellValue((String) listBangdiem.get(i)[1]);
                    }
                    if (cell.getColumnIndex() == 2) {
                        cell.setCellValue((Double) listBangdiem.get(i)[2]);
                    }
                    if (cell.getColumnIndex() == 3) {
                        cell.setCellValue((String) listBangdiem.get(i)[3]);
                    }
                    XExcel.getSheet().autoSizeColumn(j);
                }
            }

            for (int i = 0; i < tblListbangdien_pnlThongke.getColumnCount(); i++) {
                XExcel.setRow(i + 2);
                for (int j = 0; j < tblListbangdien_pnlThongke.getColumnCount(); j++) {
                    Cell cell = XExcel.cells(j);
                    cell.setCellValue(tblListbangdien_pnlThongke.getColumnName(j));
                    cell.setCellStyle(XExcel.styleCellColumn());
                    XExcel.getSheet().autoSizeColumn(i);
                }
                for (int j = 0; j < tblListnguoihoc_pnlThongke.getColumnCount(); j++) {
                    Cell cell = XExcel.cells(j + 5);
                    cell.setCellStyle(XExcel.styleCellConten());
                    if (cell.getColumnIndex() == 5) {
                        cell.setCellValue((Integer) listLuongNH.get(i)[0]);
                    }
                    if (cell.getColumnIndex() == 6) {
                        cell.setCellValue((Integer) listLuongNH.get(i)[1]);
                    }
                    if (cell.getColumnIndex() == 7) {
                        cell.setCellValue(XDate.toString((Date) listLuongNH.get(i)[2], "dd/MM/yyyy"));
                    }
                    if (cell.getColumnIndex() == 8) {
                        cell.setCellValue(XDate.toString((Date) listLuongNH.get(i)[3], "dd/MM/yyyy"));
                    }
                    XExcel.getSheet().autoSizeColumn(j + 5);
                }
            }
            int tam = tblListnguoihoc_pnlThongke.getRowCount() > tblListbangdien_pnlThongke.getRowCount() ? tblListnguoihoc_pnlThongke.getRowCount() : tblListbangdien_pnlThongke.getRowCount();
            listLuongNH.remove(0);
            System.out.println(tam);
            for (int i = 0; i < tam; i++) {
                XExcel.setRow(i + 3);
                for (int j = 0; j < tblListbangdien_pnlThongke.getColumnCount(); j++) {
                    Cell cell = XExcel.cells(j);
                    if (i < listBangdiem.size()) {
                        cell.setCellStyle(XExcel.styleCellConten());
                        if (cell.getColumnIndex() == 0) {
                            cell.setCellValue((String) listBangdiem.get(i)[0]);
                        }
                        if (cell.getColumnIndex() == 1) {
                            cell.setCellValue((String) listBangdiem.get(i)[1]);
                        }
                        if (cell.getColumnIndex() == 2) {
                            cell.setCellValue((Double) listBangdiem.get(i)[2]);
                        }
                        if (cell.getColumnIndex() == 3) {
                            cell.setCellValue((String) listBangdiem.get(i)[3]);
                        }
                        XExcel.getSheet().autoSizeColumn(j);
                    }
                    if (i < listLuongNH.size()) {
                        cell = XExcel.cells(j + 5);
                        cell.setCellStyle(XExcel.styleCellConten());
                        if (cell.getColumnIndex() == 5) {
                            cell.setCellValue((Integer) listLuongNH.get(i)[0]);
                        }
                        if (cell.getColumnIndex() == 6) {
                            cell.setCellValue((Integer) listLuongNH.get(i)[1]);
                        }
                        if (cell.getColumnIndex() == 7) {
                            cell.setCellValue(XDate.toString((Date) listLuongNH.get(i)[2], "dd/MM/yyyy"));
                        }
                        if (cell.getColumnIndex() == 8) {
                            cell.setCellValue(XDate.toString((Date) listLuongNH.get(i)[3], "dd/MM/yyyy"));
                        }
                    }
                    XExcel.getSheet().autoSizeColumn(j + 5);
                }
            }
            return false;
        }
        return true;

    }

    private void sortTT() {
        DefaultTableModel model = (DefaultTableModel) tblListbangdien_pnlThongke.getModel();
        model.setRowCount(0);
        Khoahoc kh = (Khoahoc) cboKhoahocj_pnlThongke.getSelectedItem();
        java.util.List<Object[]> list = thongKeDAO.getBangDiem(kh.getMaKH());
        if (cboSapxep_pnlThongke.getSelectedIndex() == 0) {
            if (cboLonbe_pnlThongke.getSelectedIndex() == 0) {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return String.valueOf(o1[0]).compareTo(String.valueOf(o2[0]));
                    }
                };
                Collections.sort(list, comparable);
            } else {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return String.valueOf(o1[0]).compareTo(String.valueOf(o2[0]));
                    }
                };
                Collections.sort(list, comparable);
                Collections.reverse(list);
            }
        } else if (cboSapxep_pnlThongke.getSelectedIndex() == 1) {
            if (cboLonbe_pnlThongke.getSelectedIndex() == 0) {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return String.valueOf(o1[1]).compareTo(String.valueOf(o2[1]));
                    }
                };
                Collections.sort(list, comparable);
            } else {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return String.valueOf(o1[1]).compareTo(String.valueOf(o2[1]));
                    }
                };
                Collections.sort(list, comparable);
                Collections.reverse(list);
            }
        } else if (cboSapxep_pnlThongke.getSelectedIndex() == 2) {
            if (cboLonbe_pnlThongke.getSelectedIndex() == 0) {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return Double.valueOf(String.valueOf(o1[2])) > Double.valueOf(String.valueOf(o2[2])) ? 1 : -1;
                    }
                };
                Collections.sort(list, comparable);
            } else {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return Double.valueOf(String.valueOf(o1[2])) > Double.valueOf(String.valueOf(o2[2])) ? -1 : 1;
                    }
                };
                Collections.sort(list, comparable);
            }
        } else if (cboSapxep_pnlThongke.getSelectedIndex() == 3) {
            if (cboLonbe_pnlThongke.getSelectedIndex() == 0) {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return String.valueOf(o1[3]).compareTo(String.valueOf(o2[3]));
                    }
                };
                Collections.sort(list, comparable);
            } else {
                Comparator<Object[]> comparable = new Comparator<Object[]>() {
                    @Override
                    public int compare(Object[] o1, Object[] o2) {
                        return String.valueOf(o1[3]).compareTo(String.valueOf(o2[3]));
                    }
                };
                Collections.sort(list, comparable);
                Collections.reverse(list);
            }
        }
        list.forEach(x -> {
            model.addRow(x);
        });
    }

    private void createQR() {
        try {
            JFileChooser fc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
            fc.setDialogTitle("Save as");
            fc.removeChoosableFileFilter(fc.getFileFilter());
            fc.addChoosableFileFilter(new FileNameExtensionFilter("PNG (.png)", "png"));
            if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                if (!file.getName().contains(".png")) {
                    file = new File(fc.getSelectedFile().getAbsolutePath() + ".png");
                }
                XQR.writeQRToFile(Auth.user.getMaNV() + "$" + Auth.user.getMatKhau(), file.getAbsoluteFile());
                Runtime.getRuntime().exec("cmd /c start " + file.getAbsolutePath());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
